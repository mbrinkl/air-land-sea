/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/index"],{

/***/ "./node_modules/boardgame.io/dist/esm/Debug-fd09b8bc.js":
/*!**************************************************************!*\
  !*** ./node_modules/boardgame.io/dist/esm/Debug-fd09b8bc.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"D\": function() { return /* binding */ Debug; },\n/* harmony export */   \"_\": function() { return /* binding */ _inherits; },\n/* harmony export */   \"a\": function() { return /* binding */ _createSuper; },\n/* harmony export */   \"b\": function() { return /* binding */ _createClass; },\n/* harmony export */   \"c\": function() { return /* binding */ _defineProperty; },\n/* harmony export */   \"d\": function() { return /* binding */ _classCallCheck; },\n/* harmony export */   \"e\": function() { return /* binding */ _objectWithoutProperties; },\n/* harmony export */   \"f\": function() { return /* binding */ _objectSpread2; }\n/* harmony export */ });\n/* harmony import */ var _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./turn-order-0b7dce3d.js */ \"./node_modules/boardgame.io/dist/esm/turn-order-0b7dce3d.js\");\n/* harmony import */ var _reducer_07c7b307_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reducer-07c7b307.js */ \"./node_modules/boardgame.io/dist/esm/reducer-07c7b307.js\");\n/* harmony import */ var flatted__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! flatted */ \"./node_modules/flatted/esm/index.js\");\n/* harmony import */ var _ai_3099ce9a_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ai-3099ce9a.js */ \"./node_modules/boardgame.io/dist/esm/ai-3099ce9a.js\");\n\n\n\n\n\nfunction noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root.host) {\n        return root;\n    }\n    return document;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        flush();\n    }\n    set_current_component(parent_component);\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nconst subscriber_queue = [];\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\n\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\n/* node_modules/svelte-icons/components/IconBase.svelte generated by Svelte v3.41.0 */\n\nfunction add_css(target) {\n\tappend_styles(target, \"svelte-c8tyih\", \"svg.svelte-c8tyih{stroke:currentColor;fill:currentColor;stroke-width:0;width:100%;height:auto;max-height:100%}\");\n}\n\n// (18:2) {#if title}\nfunction create_if_block(ctx) {\n\tlet title_1;\n\tlet t;\n\n\treturn {\n\t\tc() {\n\t\t\ttitle_1 = svg_element(\"title\");\n\t\t\tt = text(/*title*/ ctx[0]);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, title_1, anchor);\n\t\t\tappend(title_1, t);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*title*/ 1) set_data(t, /*title*/ ctx[0]);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(title_1);\n\t\t}\n\t};\n}\n\nfunction create_fragment(ctx) {\n\tlet svg;\n\tlet if_block_anchor;\n\tlet current;\n\tlet if_block = /*title*/ ctx[0] && create_if_block(ctx);\n\tconst default_slot_template = /*#slots*/ ctx[3].default;\n\tconst default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[2], null);\n\n\treturn {\n\t\tc() {\n\t\t\tsvg = svg_element(\"svg\");\n\t\t\tif (if_block) if_block.c();\n\t\t\tif_block_anchor = empty();\n\t\t\tif (default_slot) default_slot.c();\n\t\t\tattr(svg, \"xmlns\", \"http://www.w3.org/2000/svg\");\n\t\t\tattr(svg, \"viewBox\", /*viewBox*/ ctx[1]);\n\t\t\tattr(svg, \"class\", \"svelte-c8tyih\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, svg, anchor);\n\t\t\tif (if_block) if_block.m(svg, null);\n\t\t\tappend(svg, if_block_anchor);\n\n\t\t\tif (default_slot) {\n\t\t\t\tdefault_slot.m(svg, null);\n\t\t\t}\n\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (/*title*/ ctx[0]) {\n\t\t\t\tif (if_block) {\n\t\t\t\t\tif_block.p(ctx, dirty);\n\t\t\t\t} else {\n\t\t\t\t\tif_block = create_if_block(ctx);\n\t\t\t\t\tif_block.c();\n\t\t\t\t\tif_block.m(svg, if_block_anchor);\n\t\t\t\t}\n\t\t\t} else if (if_block) {\n\t\t\t\tif_block.d(1);\n\t\t\t\tif_block = null;\n\t\t\t}\n\n\t\t\tif (default_slot) {\n\t\t\t\tif (default_slot.p && (!current || dirty & /*$$scope*/ 4)) {\n\t\t\t\t\tupdate_slot_base(\n\t\t\t\t\t\tdefault_slot,\n\t\t\t\t\t\tdefault_slot_template,\n\t\t\t\t\t\tctx,\n\t\t\t\t\t\t/*$$scope*/ ctx[2],\n\t\t\t\t\t\t!current\n\t\t\t\t\t\t? get_all_dirty_from_scope(/*$$scope*/ ctx[2])\n\t\t\t\t\t\t: get_slot_changes(default_slot_template, /*$$scope*/ ctx[2], dirty, null),\n\t\t\t\t\t\tnull\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!current || dirty & /*viewBox*/ 2) {\n\t\t\t\tattr(svg, \"viewBox\", /*viewBox*/ ctx[1]);\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(default_slot, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(default_slot, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(svg);\n\t\t\tif (if_block) if_block.d();\n\t\t\tif (default_slot) default_slot.d(detaching);\n\t\t}\n\t};\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n\tlet { $$slots: slots = {}, $$scope } = $$props;\n\tlet { title = null } = $$props;\n\tlet { viewBox } = $$props;\n\n\t$$self.$$set = $$props => {\n\t\tif ('title' in $$props) $$invalidate(0, title = $$props.title);\n\t\tif ('viewBox' in $$props) $$invalidate(1, viewBox = $$props.viewBox);\n\t\tif ('$$scope' in $$props) $$invalidate(2, $$scope = $$props.$$scope);\n\t};\n\n\treturn [title, viewBox, $$scope, slots];\n}\n\nclass IconBase extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance, create_fragment, safe_not_equal, { title: 0, viewBox: 1 }, add_css);\n\t}\n}\n\n/* node_modules/svelte-icons/fa/FaChevronRight.svelte generated by Svelte v3.41.0 */\n\nfunction create_default_slot(ctx) {\n\tlet path;\n\n\treturn {\n\t\tc() {\n\t\t\tpath = svg_element(\"path\");\n\t\t\tattr(path, \"d\", \"M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, path, anchor);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(path);\n\t\t}\n\t};\n}\n\nfunction create_fragment$1(ctx) {\n\tlet iconbase;\n\tlet current;\n\tconst iconbase_spread_levels = [{ viewBox: \"0 0 320 512\" }, /*$$props*/ ctx[0]];\n\n\tlet iconbase_props = {\n\t\t$$slots: { default: [create_default_slot] },\n\t\t$$scope: { ctx }\n\t};\n\n\tfor (let i = 0; i < iconbase_spread_levels.length; i += 1) {\n\t\ticonbase_props = assign(iconbase_props, iconbase_spread_levels[i]);\n\t}\n\n\ticonbase = new IconBase({ props: iconbase_props });\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(iconbase.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(iconbase, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst iconbase_changes = (dirty & /*$$props*/ 1)\n\t\t\t? get_spread_update(iconbase_spread_levels, [iconbase_spread_levels[0], get_spread_object(/*$$props*/ ctx[0])])\n\t\t\t: {};\n\n\t\t\tif (dirty & /*$$scope*/ 2) {\n\t\t\t\ticonbase_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\ticonbase.$set(iconbase_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(iconbase.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(iconbase.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(iconbase, detaching);\n\t\t}\n\t};\n}\n\nfunction instance$1($$self, $$props, $$invalidate) {\n\t$$self.$$set = $$new_props => {\n\t\t$$invalidate(0, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));\n\t};\n\n\t$$props = exclude_internal_props($$props);\n\treturn [$$props];\n}\n\nclass FaChevronRight extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$1, create_fragment$1, safe_not_equal, {});\n\t}\n}\n\n/* src/client/debug/Menu.svelte generated by Svelte v3.41.0 */\n\nfunction add_css$1(target) {\n\tappend_styles(target, \"svelte-1xg9v5h\", \".menu.svelte-1xg9v5h{display:flex;margin-top:43px;flex-direction:row-reverse;border:1px solid #ccc;border-radius:5px 5px 0 0;height:25px;line-height:25px;margin-right:-500px;transform-origin:bottom right;transform:rotate(-90deg) translate(0, -500px)}.menu-item.svelte-1xg9v5h{line-height:25px;cursor:pointer;border:0;background:#fefefe;color:#555;padding-left:15px;padding-right:15px;text-align:center}.menu-item.svelte-1xg9v5h:first-child{border-radius:0 5px 0 0}.menu-item.svelte-1xg9v5h:last-child{border-radius:5px 0 0 0}.menu-item.active.svelte-1xg9v5h{cursor:default;font-weight:bold;background:#ddd;color:#555}.menu-item.svelte-1xg9v5h:hover,.menu-item.svelte-1xg9v5h:focus{background:#eee;color:#555}\");\n}\n\nfunction get_each_context(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[4] = list[i][0];\n\tchild_ctx[5] = list[i][1].label;\n\treturn child_ctx;\n}\n\n// (57:2) {#each Object.entries(panes) as [key, {label}\nfunction create_each_block(ctx) {\n\tlet button;\n\tlet t0_value = /*label*/ ctx[5] + \"\";\n\tlet t0;\n\tlet t1;\n\tlet mounted;\n\tlet dispose;\n\n\tfunction click_handler() {\n\t\treturn /*click_handler*/ ctx[3](/*key*/ ctx[4]);\n\t}\n\n\treturn {\n\t\tc() {\n\t\t\tbutton = element(\"button\");\n\t\t\tt0 = text(t0_value);\n\t\t\tt1 = space();\n\t\t\tattr(button, \"class\", \"menu-item svelte-1xg9v5h\");\n\t\t\ttoggle_class(button, \"active\", /*pane*/ ctx[0] == /*key*/ ctx[4]);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, button, anchor);\n\t\t\tappend(button, t0);\n\t\t\tappend(button, t1);\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = listen(button, \"click\", click_handler);\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(new_ctx, dirty) {\n\t\t\tctx = new_ctx;\n\t\t\tif (dirty & /*panes*/ 2 && t0_value !== (t0_value = /*label*/ ctx[5] + \"\")) set_data(t0, t0_value);\n\n\t\t\tif (dirty & /*pane, Object, panes*/ 3) {\n\t\t\t\ttoggle_class(button, \"active\", /*pane*/ ctx[0] == /*key*/ ctx[4]);\n\t\t\t}\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(button);\n\t\t\tmounted = false;\n\t\t\tdispose();\n\t\t}\n\t};\n}\n\nfunction create_fragment$2(ctx) {\n\tlet nav;\n\tlet each_value = Object.entries(/*panes*/ ctx[1]);\n\tlet each_blocks = [];\n\n\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\teach_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));\n\t}\n\n\treturn {\n\t\tc() {\n\t\t\tnav = element(\"nav\");\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].c();\n\t\t\t}\n\n\t\t\tattr(nav, \"class\", \"menu svelte-1xg9v5h\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, nav, anchor);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].m(nav, null);\n\t\t\t}\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (dirty & /*pane, Object, panes, dispatch*/ 7) {\n\t\t\t\teach_value = Object.entries(/*panes*/ ctx[1]);\n\t\t\t\tlet i;\n\n\t\t\t\tfor (i = 0; i < each_value.length; i += 1) {\n\t\t\t\t\tconst child_ctx = get_each_context(ctx, each_value, i);\n\n\t\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\t\teach_blocks[i].p(child_ctx, dirty);\n\t\t\t\t\t} else {\n\t\t\t\t\t\teach_blocks[i] = create_each_block(child_ctx);\n\t\t\t\t\t\teach_blocks[i].c();\n\t\t\t\t\t\teach_blocks[i].m(nav, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (; i < each_blocks.length; i += 1) {\n\t\t\t\t\teach_blocks[i].d(1);\n\t\t\t\t}\n\n\t\t\t\teach_blocks.length = each_value.length;\n\t\t\t}\n\t\t},\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(nav);\n\t\t\tdestroy_each(each_blocks, detaching);\n\t\t}\n\t};\n}\n\nfunction instance$2($$self, $$props, $$invalidate) {\n\tlet { pane } = $$props;\n\tlet { panes } = $$props;\n\tconst dispatch = createEventDispatcher();\n\tconst click_handler = key => dispatch('change', key);\n\n\t$$self.$$set = $$props => {\n\t\tif ('pane' in $$props) $$invalidate(0, pane = $$props.pane);\n\t\tif ('panes' in $$props) $$invalidate(1, panes = $$props.panes);\n\t};\n\n\treturn [pane, panes, dispatch, click_handler];\n}\n\nclass Menu extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$2, create_fragment$2, safe_not_equal, { pane: 0, panes: 1 }, add_css$1);\n\t}\n}\n\nvar contextKey = {};\n\n/* node_modules/svelte-json-tree-auto/src/JSONArrow.svelte generated by Svelte v3.41.0 */\n\nfunction add_css$2(target) {\n\tappend_styles(target, \"svelte-1vyml86\", \".container.svelte-1vyml86{display:inline-block;cursor:pointer;transform:translate(calc(0px - var(--li-identation)), -50%);position:absolute;top:50%;padding-right:100%}.arrow.svelte-1vyml86{transform-origin:25% 50%;position:relative;line-height:1.1em;font-size:0.75em;margin-left:0;transition:150ms;color:var(--arrow-sign);user-select:none;font-family:'Courier New', Courier, monospace}.expanded.svelte-1vyml86{transform:rotateZ(90deg) translateX(-3px)}\");\n}\n\nfunction create_fragment$3(ctx) {\n\tlet div1;\n\tlet div0;\n\tlet mounted;\n\tlet dispose;\n\n\treturn {\n\t\tc() {\n\t\t\tdiv1 = element(\"div\");\n\t\t\tdiv0 = element(\"div\");\n\t\t\tdiv0.textContent = `${'\\u25B6'}`;\n\t\t\tattr(div0, \"class\", \"arrow svelte-1vyml86\");\n\t\t\ttoggle_class(div0, \"expanded\", /*expanded*/ ctx[0]);\n\t\t\tattr(div1, \"class\", \"container svelte-1vyml86\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div1, anchor);\n\t\t\tappend(div1, div0);\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = listen(div1, \"click\", /*click_handler*/ ctx[1]);\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (dirty & /*expanded*/ 1) {\n\t\t\t\ttoggle_class(div0, \"expanded\", /*expanded*/ ctx[0]);\n\t\t\t}\n\t\t},\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div1);\n\t\t\tmounted = false;\n\t\t\tdispose();\n\t\t}\n\t};\n}\n\nfunction instance$3($$self, $$props, $$invalidate) {\n\tlet { expanded } = $$props;\n\n\tfunction click_handler(event) {\n\t\tbubble.call(this, $$self, event);\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif ('expanded' in $$props) $$invalidate(0, expanded = $$props.expanded);\n\t};\n\n\treturn [expanded, click_handler];\n}\n\nclass JSONArrow extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$3, create_fragment$3, safe_not_equal, { expanded: 0 }, add_css$2);\n\t}\n}\n\n/* node_modules/svelte-json-tree-auto/src/JSONKey.svelte generated by Svelte v3.41.0 */\n\nfunction add_css$3(target) {\n\tappend_styles(target, \"svelte-1vlbacg\", \"label.svelte-1vlbacg{display:inline-block;color:var(--label-color);padding:0}.spaced.svelte-1vlbacg{padding-right:var(--li-colon-space)}\");\n}\n\n// (16:0) {#if showKey && key}\nfunction create_if_block$1(ctx) {\n\tlet label;\n\tlet span;\n\tlet t0;\n\tlet t1;\n\tlet mounted;\n\tlet dispose;\n\n\treturn {\n\t\tc() {\n\t\t\tlabel = element(\"label\");\n\t\t\tspan = element(\"span\");\n\t\t\tt0 = text(/*key*/ ctx[0]);\n\t\t\tt1 = text(/*colon*/ ctx[2]);\n\t\t\tattr(label, \"class\", \"svelte-1vlbacg\");\n\t\t\ttoggle_class(label, \"spaced\", /*isParentExpanded*/ ctx[1]);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, label, anchor);\n\t\t\tappend(label, span);\n\t\t\tappend(span, t0);\n\t\t\tappend(span, t1);\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = listen(label, \"click\", /*click_handler*/ ctx[5]);\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*key*/ 1) set_data(t0, /*key*/ ctx[0]);\n\t\t\tif (dirty & /*colon*/ 4) set_data(t1, /*colon*/ ctx[2]);\n\n\t\t\tif (dirty & /*isParentExpanded*/ 2) {\n\t\t\t\ttoggle_class(label, \"spaced\", /*isParentExpanded*/ ctx[1]);\n\t\t\t}\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(label);\n\t\t\tmounted = false;\n\t\t\tdispose();\n\t\t}\n\t};\n}\n\nfunction create_fragment$4(ctx) {\n\tlet if_block_anchor;\n\tlet if_block = /*showKey*/ ctx[3] && /*key*/ ctx[0] && create_if_block$1(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tif (if_block) if_block.c();\n\t\t\tif_block_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tif (if_block) if_block.m(target, anchor);\n\t\t\tinsert(target, if_block_anchor, anchor);\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (/*showKey*/ ctx[3] && /*key*/ ctx[0]) {\n\t\t\t\tif (if_block) {\n\t\t\t\t\tif_block.p(ctx, dirty);\n\t\t\t\t} else {\n\t\t\t\t\tif_block = create_if_block$1(ctx);\n\t\t\t\t\tif_block.c();\n\t\t\t\t\tif_block.m(if_block_anchor.parentNode, if_block_anchor);\n\t\t\t\t}\n\t\t\t} else if (if_block) {\n\t\t\t\tif_block.d(1);\n\t\t\t\tif_block = null;\n\t\t\t}\n\t\t},\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (if_block) if_block.d(detaching);\n\t\t\tif (detaching) detach(if_block_anchor);\n\t\t}\n\t};\n}\n\nfunction instance$4($$self, $$props, $$invalidate) {\n\tlet showKey;\n\tlet { key, isParentExpanded, isParentArray = false, colon = ':' } = $$props;\n\n\tfunction click_handler(event) {\n\t\tbubble.call(this, $$self, event);\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif ('key' in $$props) $$invalidate(0, key = $$props.key);\n\t\tif ('isParentExpanded' in $$props) $$invalidate(1, isParentExpanded = $$props.isParentExpanded);\n\t\tif ('isParentArray' in $$props) $$invalidate(4, isParentArray = $$props.isParentArray);\n\t\tif ('colon' in $$props) $$invalidate(2, colon = $$props.colon);\n\t};\n\n\t$$self.$$.update = () => {\n\t\tif ($$self.$$.dirty & /*isParentExpanded, isParentArray, key*/ 19) {\n\t\t\t $$invalidate(3, showKey = isParentExpanded || !isParentArray || key != +key);\n\t\t}\n\t};\n\n\treturn [key, isParentExpanded, colon, showKey, isParentArray, click_handler];\n}\n\nclass JSONKey extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(\n\t\t\tthis,\n\t\t\toptions,\n\t\t\tinstance$4,\n\t\t\tcreate_fragment$4,\n\t\t\tsafe_not_equal,\n\t\t\t{\n\t\t\t\tkey: 0,\n\t\t\t\tisParentExpanded: 1,\n\t\t\t\tisParentArray: 4,\n\t\t\t\tcolon: 2\n\t\t\t},\n\t\t\tadd_css$3\n\t\t);\n\t}\n}\n\n/* node_modules/svelte-json-tree-auto/src/JSONNested.svelte generated by Svelte v3.41.0 */\n\nfunction add_css$4(target) {\n\tappend_styles(target, \"svelte-rwxv37\", \"label.svelte-rwxv37{display:inline-block}.indent.svelte-rwxv37{padding-left:var(--li-identation)}.collapse.svelte-rwxv37{--li-display:inline;display:inline;font-style:italic}.comma.svelte-rwxv37{margin-left:-0.5em;margin-right:0.5em}label.svelte-rwxv37{position:relative}\");\n}\n\nfunction get_each_context$1(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[12] = list[i];\n\tchild_ctx[20] = i;\n\treturn child_ctx;\n}\n\n// (57:4) {#if expandable && isParentExpanded}\nfunction create_if_block_3(ctx) {\n\tlet jsonarrow;\n\tlet current;\n\tjsonarrow = new JSONArrow({ props: { expanded: /*expanded*/ ctx[0] } });\n\tjsonarrow.$on(\"click\", /*toggleExpand*/ ctx[15]);\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(jsonarrow.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(jsonarrow, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst jsonarrow_changes = {};\n\t\t\tif (dirty & /*expanded*/ 1) jsonarrow_changes.expanded = /*expanded*/ ctx[0];\n\t\t\tjsonarrow.$set(jsonarrow_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(jsonarrow.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(jsonarrow.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(jsonarrow, detaching);\n\t\t}\n\t};\n}\n\n// (75:4) {:else}\nfunction create_else_block(ctx) {\n\tlet span;\n\n\treturn {\n\t\tc() {\n\t\t\tspan = element(\"span\");\n\t\t\tspan.textContent = \"…\";\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, span, anchor);\n\t\t},\n\t\tp: noop,\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(span);\n\t\t}\n\t};\n}\n\n// (63:4) {#if isParentExpanded}\nfunction create_if_block$2(ctx) {\n\tlet ul;\n\tlet t;\n\tlet current;\n\tlet mounted;\n\tlet dispose;\n\tlet each_value = /*slicedKeys*/ ctx[13];\n\tlet each_blocks = [];\n\n\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\teach_blocks[i] = create_each_block$1(get_each_context$1(ctx, each_value, i));\n\t}\n\n\tconst out = i => transition_out(each_blocks[i], 1, 1, () => {\n\t\teach_blocks[i] = null;\n\t});\n\n\tlet if_block = /*slicedKeys*/ ctx[13].length < /*previewKeys*/ ctx[7].length && create_if_block_1();\n\n\treturn {\n\t\tc() {\n\t\t\tul = element(\"ul\");\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].c();\n\t\t\t}\n\n\t\t\tt = space();\n\t\t\tif (if_block) if_block.c();\n\t\t\tattr(ul, \"class\", \"svelte-rwxv37\");\n\t\t\ttoggle_class(ul, \"collapse\", !/*expanded*/ ctx[0]);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, ul, anchor);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].m(ul, null);\n\t\t\t}\n\n\t\t\tappend(ul, t);\n\t\t\tif (if_block) if_block.m(ul, null);\n\t\t\tcurrent = true;\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = listen(ul, \"click\", /*expand*/ ctx[16]);\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*expanded, previewKeys, getKey, slicedKeys, isArray, getValue, getPreviewValue*/ 10129) {\n\t\t\t\teach_value = /*slicedKeys*/ ctx[13];\n\t\t\t\tlet i;\n\n\t\t\t\tfor (i = 0; i < each_value.length; i += 1) {\n\t\t\t\t\tconst child_ctx = get_each_context$1(ctx, each_value, i);\n\n\t\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\t\teach_blocks[i].p(child_ctx, dirty);\n\t\t\t\t\t\ttransition_in(each_blocks[i], 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\teach_blocks[i] = create_each_block$1(child_ctx);\n\t\t\t\t\t\teach_blocks[i].c();\n\t\t\t\t\t\ttransition_in(each_blocks[i], 1);\n\t\t\t\t\t\teach_blocks[i].m(ul, t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tgroup_outros();\n\n\t\t\t\tfor (i = each_value.length; i < each_blocks.length; i += 1) {\n\t\t\t\t\tout(i);\n\t\t\t\t}\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\n\t\t\tif (/*slicedKeys*/ ctx[13].length < /*previewKeys*/ ctx[7].length) {\n\t\t\t\tif (if_block) ; else {\n\t\t\t\t\tif_block = create_if_block_1();\n\t\t\t\t\tif_block.c();\n\t\t\t\t\tif_block.m(ul, null);\n\t\t\t\t}\n\t\t\t} else if (if_block) {\n\t\t\t\tif_block.d(1);\n\t\t\t\tif_block = null;\n\t\t\t}\n\n\t\t\tif (dirty & /*expanded*/ 1) {\n\t\t\t\ttoggle_class(ul, \"collapse\", !/*expanded*/ ctx[0]);\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\n\t\t\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\t\t\ttransition_in(each_blocks[i]);\n\t\t\t}\n\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\teach_blocks = each_blocks.filter(Boolean);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\ttransition_out(each_blocks[i]);\n\t\t\t}\n\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(ul);\n\t\t\tdestroy_each(each_blocks, detaching);\n\t\t\tif (if_block) if_block.d();\n\t\t\tmounted = false;\n\t\t\tdispose();\n\t\t}\n\t};\n}\n\n// (67:10) {#if !expanded && index < previewKeys.length - 1}\nfunction create_if_block_2(ctx) {\n\tlet span;\n\n\treturn {\n\t\tc() {\n\t\t\tspan = element(\"span\");\n\t\t\tspan.textContent = \",\";\n\t\t\tattr(span, \"class\", \"comma svelte-rwxv37\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, span, anchor);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(span);\n\t\t}\n\t};\n}\n\n// (65:8) {#each slicedKeys as key, index}\nfunction create_each_block$1(ctx) {\n\tlet jsonnode;\n\tlet t;\n\tlet if_block_anchor;\n\tlet current;\n\n\tjsonnode = new JSONNode({\n\t\t\tprops: {\n\t\t\t\tkey: /*getKey*/ ctx[8](/*key*/ ctx[12]),\n\t\t\t\tisParentExpanded: /*expanded*/ ctx[0],\n\t\t\t\tisParentArray: /*isArray*/ ctx[4],\n\t\t\t\tvalue: /*expanded*/ ctx[0]\n\t\t\t\t? /*getValue*/ ctx[9](/*key*/ ctx[12])\n\t\t\t\t: /*getPreviewValue*/ ctx[10](/*key*/ ctx[12])\n\t\t\t}\n\t\t});\n\n\tlet if_block = !/*expanded*/ ctx[0] && /*index*/ ctx[20] < /*previewKeys*/ ctx[7].length - 1 && create_if_block_2();\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(jsonnode.$$.fragment);\n\t\t\tt = space();\n\t\t\tif (if_block) if_block.c();\n\t\t\tif_block_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(jsonnode, target, anchor);\n\t\t\tinsert(target, t, anchor);\n\t\t\tif (if_block) if_block.m(target, anchor);\n\t\t\tinsert(target, if_block_anchor, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst jsonnode_changes = {};\n\t\t\tif (dirty & /*getKey, slicedKeys*/ 8448) jsonnode_changes.key = /*getKey*/ ctx[8](/*key*/ ctx[12]);\n\t\t\tif (dirty & /*expanded*/ 1) jsonnode_changes.isParentExpanded = /*expanded*/ ctx[0];\n\t\t\tif (dirty & /*isArray*/ 16) jsonnode_changes.isParentArray = /*isArray*/ ctx[4];\n\n\t\t\tif (dirty & /*expanded, getValue, slicedKeys, getPreviewValue*/ 9729) jsonnode_changes.value = /*expanded*/ ctx[0]\n\t\t\t? /*getValue*/ ctx[9](/*key*/ ctx[12])\n\t\t\t: /*getPreviewValue*/ ctx[10](/*key*/ ctx[12]);\n\n\t\t\tjsonnode.$set(jsonnode_changes);\n\n\t\t\tif (!/*expanded*/ ctx[0] && /*index*/ ctx[20] < /*previewKeys*/ ctx[7].length - 1) {\n\t\t\t\tif (if_block) ; else {\n\t\t\t\t\tif_block = create_if_block_2();\n\t\t\t\t\tif_block.c();\n\t\t\t\t\tif_block.m(if_block_anchor.parentNode, if_block_anchor);\n\t\t\t\t}\n\t\t\t} else if (if_block) {\n\t\t\t\tif_block.d(1);\n\t\t\t\tif_block = null;\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(jsonnode.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(jsonnode.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(jsonnode, detaching);\n\t\t\tif (detaching) detach(t);\n\t\t\tif (if_block) if_block.d(detaching);\n\t\t\tif (detaching) detach(if_block_anchor);\n\t\t}\n\t};\n}\n\n// (71:8) {#if slicedKeys.length < previewKeys.length }\nfunction create_if_block_1(ctx) {\n\tlet span;\n\n\treturn {\n\t\tc() {\n\t\t\tspan = element(\"span\");\n\t\t\tspan.textContent = \"…\";\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, span, anchor);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(span);\n\t\t}\n\t};\n}\n\nfunction create_fragment$5(ctx) {\n\tlet li;\n\tlet label_1;\n\tlet t0;\n\tlet jsonkey;\n\tlet t1;\n\tlet span1;\n\tlet span0;\n\tlet t2;\n\tlet t3;\n\tlet t4;\n\tlet current_block_type_index;\n\tlet if_block1;\n\tlet t5;\n\tlet span2;\n\tlet t6;\n\tlet current;\n\tlet mounted;\n\tlet dispose;\n\tlet if_block0 = /*expandable*/ ctx[11] && /*isParentExpanded*/ ctx[2] && create_if_block_3(ctx);\n\n\tjsonkey = new JSONKey({\n\t\t\tprops: {\n\t\t\t\tkey: /*key*/ ctx[12],\n\t\t\t\tcolon: /*context*/ ctx[14].colon,\n\t\t\t\tisParentExpanded: /*isParentExpanded*/ ctx[2],\n\t\t\t\tisParentArray: /*isParentArray*/ ctx[3]\n\t\t\t}\n\t\t});\n\n\tjsonkey.$on(\"click\", /*toggleExpand*/ ctx[15]);\n\tconst if_block_creators = [create_if_block$2, create_else_block];\n\tconst if_blocks = [];\n\n\tfunction select_block_type(ctx, dirty) {\n\t\tif (/*isParentExpanded*/ ctx[2]) return 0;\n\t\treturn 1;\n\t}\n\n\tcurrent_block_type_index = select_block_type(ctx);\n\tif_block1 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tli = element(\"li\");\n\t\t\tlabel_1 = element(\"label\");\n\t\t\tif (if_block0) if_block0.c();\n\t\t\tt0 = space();\n\t\t\tcreate_component(jsonkey.$$.fragment);\n\t\t\tt1 = space();\n\t\t\tspan1 = element(\"span\");\n\t\t\tspan0 = element(\"span\");\n\t\t\tt2 = text(/*label*/ ctx[1]);\n\t\t\tt3 = text(/*bracketOpen*/ ctx[5]);\n\t\t\tt4 = space();\n\t\t\tif_block1.c();\n\t\t\tt5 = space();\n\t\t\tspan2 = element(\"span\");\n\t\t\tt6 = text(/*bracketClose*/ ctx[6]);\n\t\t\tattr(label_1, \"class\", \"svelte-rwxv37\");\n\t\t\tattr(li, \"class\", \"svelte-rwxv37\");\n\t\t\ttoggle_class(li, \"indent\", /*isParentExpanded*/ ctx[2]);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, li, anchor);\n\t\t\tappend(li, label_1);\n\t\t\tif (if_block0) if_block0.m(label_1, null);\n\t\t\tappend(label_1, t0);\n\t\t\tmount_component(jsonkey, label_1, null);\n\t\t\tappend(label_1, t1);\n\t\t\tappend(label_1, span1);\n\t\t\tappend(span1, span0);\n\t\t\tappend(span0, t2);\n\t\t\tappend(span1, t3);\n\t\t\tappend(li, t4);\n\t\t\tif_blocks[current_block_type_index].m(li, null);\n\t\t\tappend(li, t5);\n\t\t\tappend(li, span2);\n\t\t\tappend(span2, t6);\n\t\t\tcurrent = true;\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = listen(span1, \"click\", /*toggleExpand*/ ctx[15]);\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (/*expandable*/ ctx[11] && /*isParentExpanded*/ ctx[2]) {\n\t\t\t\tif (if_block0) {\n\t\t\t\t\tif_block0.p(ctx, dirty);\n\n\t\t\t\t\tif (dirty & /*expandable, isParentExpanded*/ 2052) {\n\t\t\t\t\t\ttransition_in(if_block0, 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif_block0 = create_if_block_3(ctx);\n\t\t\t\t\tif_block0.c();\n\t\t\t\t\ttransition_in(if_block0, 1);\n\t\t\t\t\tif_block0.m(label_1, t0);\n\t\t\t\t}\n\t\t\t} else if (if_block0) {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_block0, 1, 1, () => {\n\t\t\t\t\tif_block0 = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\n\t\t\tconst jsonkey_changes = {};\n\t\t\tif (dirty & /*key*/ 4096) jsonkey_changes.key = /*key*/ ctx[12];\n\t\t\tif (dirty & /*isParentExpanded*/ 4) jsonkey_changes.isParentExpanded = /*isParentExpanded*/ ctx[2];\n\t\t\tif (dirty & /*isParentArray*/ 8) jsonkey_changes.isParentArray = /*isParentArray*/ ctx[3];\n\t\t\tjsonkey.$set(jsonkey_changes);\n\t\t\tif (!current || dirty & /*label*/ 2) set_data(t2, /*label*/ ctx[1]);\n\t\t\tif (!current || dirty & /*bracketOpen*/ 32) set_data(t3, /*bracketOpen*/ ctx[5]);\n\t\t\tlet previous_block_index = current_block_type_index;\n\t\t\tcurrent_block_type_index = select_block_type(ctx);\n\n\t\t\tif (current_block_type_index === previous_block_index) {\n\t\t\t\tif_blocks[current_block_type_index].p(ctx, dirty);\n\t\t\t} else {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_blocks[previous_block_index], 1, 1, () => {\n\t\t\t\t\tif_blocks[previous_block_index] = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t\tif_block1 = if_blocks[current_block_type_index];\n\n\t\t\t\tif (!if_block1) {\n\t\t\t\t\tif_block1 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\t\t\t\t\tif_block1.c();\n\t\t\t\t} else {\n\t\t\t\t\tif_block1.p(ctx, dirty);\n\t\t\t\t}\n\n\t\t\t\ttransition_in(if_block1, 1);\n\t\t\t\tif_block1.m(li, t5);\n\t\t\t}\n\n\t\t\tif (!current || dirty & /*bracketClose*/ 64) set_data(t6, /*bracketClose*/ ctx[6]);\n\n\t\t\tif (dirty & /*isParentExpanded*/ 4) {\n\t\t\t\ttoggle_class(li, \"indent\", /*isParentExpanded*/ ctx[2]);\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block0);\n\t\t\ttransition_in(jsonkey.$$.fragment, local);\n\t\t\ttransition_in(if_block1);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block0);\n\t\t\ttransition_out(jsonkey.$$.fragment, local);\n\t\t\ttransition_out(if_block1);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(li);\n\t\t\tif (if_block0) if_block0.d();\n\t\t\tdestroy_component(jsonkey);\n\t\t\tif_blocks[current_block_type_index].d();\n\t\t\tmounted = false;\n\t\t\tdispose();\n\t\t}\n\t};\n}\n\nfunction instance$5($$self, $$props, $$invalidate) {\n\tlet slicedKeys;\n\tlet { key, keys, colon = ':', label = '', isParentExpanded, isParentArray, isArray = false, bracketOpen, bracketClose } = $$props;\n\tlet { previewKeys = keys } = $$props;\n\tlet { getKey = key => key } = $$props;\n\tlet { getValue = key => key } = $$props;\n\tlet { getPreviewValue = getValue } = $$props;\n\tlet { expanded = false, expandable = true } = $$props;\n\tconst context = getContext(contextKey);\n\tsetContext(contextKey, { ...context, colon });\n\n\tfunction toggleExpand() {\n\t\t$$invalidate(0, expanded = !expanded);\n\t}\n\n\tfunction expand() {\n\t\t$$invalidate(0, expanded = true);\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif ('key' in $$props) $$invalidate(12, key = $$props.key);\n\t\tif ('keys' in $$props) $$invalidate(17, keys = $$props.keys);\n\t\tif ('colon' in $$props) $$invalidate(18, colon = $$props.colon);\n\t\tif ('label' in $$props) $$invalidate(1, label = $$props.label);\n\t\tif ('isParentExpanded' in $$props) $$invalidate(2, isParentExpanded = $$props.isParentExpanded);\n\t\tif ('isParentArray' in $$props) $$invalidate(3, isParentArray = $$props.isParentArray);\n\t\tif ('isArray' in $$props) $$invalidate(4, isArray = $$props.isArray);\n\t\tif ('bracketOpen' in $$props) $$invalidate(5, bracketOpen = $$props.bracketOpen);\n\t\tif ('bracketClose' in $$props) $$invalidate(6, bracketClose = $$props.bracketClose);\n\t\tif ('previewKeys' in $$props) $$invalidate(7, previewKeys = $$props.previewKeys);\n\t\tif ('getKey' in $$props) $$invalidate(8, getKey = $$props.getKey);\n\t\tif ('getValue' in $$props) $$invalidate(9, getValue = $$props.getValue);\n\t\tif ('getPreviewValue' in $$props) $$invalidate(10, getPreviewValue = $$props.getPreviewValue);\n\t\tif ('expanded' in $$props) $$invalidate(0, expanded = $$props.expanded);\n\t\tif ('expandable' in $$props) $$invalidate(11, expandable = $$props.expandable);\n\t};\n\n\t$$self.$$.update = () => {\n\t\tif ($$self.$$.dirty & /*isParentExpanded*/ 4) {\n\t\t\t if (!isParentExpanded) {\n\t\t\t\t$$invalidate(0, expanded = false);\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*expanded, keys, previewKeys*/ 131201) {\n\t\t\t $$invalidate(13, slicedKeys = expanded ? keys : previewKeys.slice(0, 5));\n\t\t}\n\t};\n\n\treturn [\n\t\texpanded,\n\t\tlabel,\n\t\tisParentExpanded,\n\t\tisParentArray,\n\t\tisArray,\n\t\tbracketOpen,\n\t\tbracketClose,\n\t\tpreviewKeys,\n\t\tgetKey,\n\t\tgetValue,\n\t\tgetPreviewValue,\n\t\texpandable,\n\t\tkey,\n\t\tslicedKeys,\n\t\tcontext,\n\t\ttoggleExpand,\n\t\texpand,\n\t\tkeys,\n\t\tcolon\n\t];\n}\n\nclass JSONNested extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(\n\t\t\tthis,\n\t\t\toptions,\n\t\t\tinstance$5,\n\t\t\tcreate_fragment$5,\n\t\t\tsafe_not_equal,\n\t\t\t{\n\t\t\t\tkey: 12,\n\t\t\t\tkeys: 17,\n\t\t\t\tcolon: 18,\n\t\t\t\tlabel: 1,\n\t\t\t\tisParentExpanded: 2,\n\t\t\t\tisParentArray: 3,\n\t\t\t\tisArray: 4,\n\t\t\t\tbracketOpen: 5,\n\t\t\t\tbracketClose: 6,\n\t\t\t\tpreviewKeys: 7,\n\t\t\t\tgetKey: 8,\n\t\t\t\tgetValue: 9,\n\t\t\t\tgetPreviewValue: 10,\n\t\t\t\texpanded: 0,\n\t\t\t\texpandable: 11\n\t\t\t},\n\t\t\tadd_css$4\n\t\t);\n\t}\n}\n\n/* node_modules/svelte-json-tree-auto/src/JSONObjectNode.svelte generated by Svelte v3.41.0 */\n\nfunction create_fragment$6(ctx) {\n\tlet jsonnested;\n\tlet current;\n\n\tjsonnested = new JSONNested({\n\t\t\tprops: {\n\t\t\t\tkey: /*key*/ ctx[0],\n\t\t\t\texpanded: /*expanded*/ ctx[4],\n\t\t\t\tisParentExpanded: /*isParentExpanded*/ ctx[1],\n\t\t\t\tisParentArray: /*isParentArray*/ ctx[2],\n\t\t\t\tkeys: /*keys*/ ctx[5],\n\t\t\t\tpreviewKeys: /*keys*/ ctx[5],\n\t\t\t\tgetValue: /*getValue*/ ctx[6],\n\t\t\t\tlabel: \"\" + (/*nodeType*/ ctx[3] + \" \"),\n\t\t\t\tbracketOpen: '{',\n\t\t\t\tbracketClose: '}'\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(jsonnested.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(jsonnested, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst jsonnested_changes = {};\n\t\t\tif (dirty & /*key*/ 1) jsonnested_changes.key = /*key*/ ctx[0];\n\t\t\tif (dirty & /*expanded*/ 16) jsonnested_changes.expanded = /*expanded*/ ctx[4];\n\t\t\tif (dirty & /*isParentExpanded*/ 2) jsonnested_changes.isParentExpanded = /*isParentExpanded*/ ctx[1];\n\t\t\tif (dirty & /*isParentArray*/ 4) jsonnested_changes.isParentArray = /*isParentArray*/ ctx[2];\n\t\t\tif (dirty & /*keys*/ 32) jsonnested_changes.keys = /*keys*/ ctx[5];\n\t\t\tif (dirty & /*keys*/ 32) jsonnested_changes.previewKeys = /*keys*/ ctx[5];\n\t\t\tif (dirty & /*nodeType*/ 8) jsonnested_changes.label = \"\" + (/*nodeType*/ ctx[3] + \" \");\n\t\t\tjsonnested.$set(jsonnested_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(jsonnested.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(jsonnested.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(jsonnested, detaching);\n\t\t}\n\t};\n}\n\nfunction instance$6($$self, $$props, $$invalidate) {\n\tlet keys;\n\tlet { key, value, isParentExpanded, isParentArray, nodeType } = $$props;\n\tlet { expanded = true } = $$props;\n\n\tfunction getValue(key) {\n\t\treturn value[key];\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif ('key' in $$props) $$invalidate(0, key = $$props.key);\n\t\tif ('value' in $$props) $$invalidate(7, value = $$props.value);\n\t\tif ('isParentExpanded' in $$props) $$invalidate(1, isParentExpanded = $$props.isParentExpanded);\n\t\tif ('isParentArray' in $$props) $$invalidate(2, isParentArray = $$props.isParentArray);\n\t\tif ('nodeType' in $$props) $$invalidate(3, nodeType = $$props.nodeType);\n\t\tif ('expanded' in $$props) $$invalidate(4, expanded = $$props.expanded);\n\t};\n\n\t$$self.$$.update = () => {\n\t\tif ($$self.$$.dirty & /*value*/ 128) {\n\t\t\t $$invalidate(5, keys = Object.getOwnPropertyNames(value));\n\t\t}\n\t};\n\n\treturn [\n\t\tkey,\n\t\tisParentExpanded,\n\t\tisParentArray,\n\t\tnodeType,\n\t\texpanded,\n\t\tkeys,\n\t\tgetValue,\n\t\tvalue\n\t];\n}\n\nclass JSONObjectNode extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(this, options, instance$6, create_fragment$6, safe_not_equal, {\n\t\t\tkey: 0,\n\t\t\tvalue: 7,\n\t\t\tisParentExpanded: 1,\n\t\t\tisParentArray: 2,\n\t\t\tnodeType: 3,\n\t\t\texpanded: 4\n\t\t});\n\t}\n}\n\n/* node_modules/svelte-json-tree-auto/src/JSONArrayNode.svelte generated by Svelte v3.41.0 */\n\nfunction create_fragment$7(ctx) {\n\tlet jsonnested;\n\tlet current;\n\n\tjsonnested = new JSONNested({\n\t\t\tprops: {\n\t\t\t\tkey: /*key*/ ctx[0],\n\t\t\t\texpanded: /*expanded*/ ctx[4],\n\t\t\t\tisParentExpanded: /*isParentExpanded*/ ctx[2],\n\t\t\t\tisParentArray: /*isParentArray*/ ctx[3],\n\t\t\t\tisArray: true,\n\t\t\t\tkeys: /*keys*/ ctx[5],\n\t\t\t\tpreviewKeys: /*previewKeys*/ ctx[6],\n\t\t\t\tgetValue: /*getValue*/ ctx[7],\n\t\t\t\tlabel: \"Array(\" + /*value*/ ctx[1].length + \")\",\n\t\t\t\tbracketOpen: \"[\",\n\t\t\t\tbracketClose: \"]\"\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(jsonnested.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(jsonnested, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst jsonnested_changes = {};\n\t\t\tif (dirty & /*key*/ 1) jsonnested_changes.key = /*key*/ ctx[0];\n\t\t\tif (dirty & /*expanded*/ 16) jsonnested_changes.expanded = /*expanded*/ ctx[4];\n\t\t\tif (dirty & /*isParentExpanded*/ 4) jsonnested_changes.isParentExpanded = /*isParentExpanded*/ ctx[2];\n\t\t\tif (dirty & /*isParentArray*/ 8) jsonnested_changes.isParentArray = /*isParentArray*/ ctx[3];\n\t\t\tif (dirty & /*keys*/ 32) jsonnested_changes.keys = /*keys*/ ctx[5];\n\t\t\tif (dirty & /*previewKeys*/ 64) jsonnested_changes.previewKeys = /*previewKeys*/ ctx[6];\n\t\t\tif (dirty & /*value*/ 2) jsonnested_changes.label = \"Array(\" + /*value*/ ctx[1].length + \")\";\n\t\t\tjsonnested.$set(jsonnested_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(jsonnested.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(jsonnested.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(jsonnested, detaching);\n\t\t}\n\t};\n}\n\nfunction instance$7($$self, $$props, $$invalidate) {\n\tlet keys;\n\tlet previewKeys;\n\tlet { key, value, isParentExpanded, isParentArray } = $$props;\n\tlet { expanded = JSON.stringify(value).length < 1024 } = $$props;\n\tconst filteredKey = new Set(['length']);\n\n\tfunction getValue(key) {\n\t\treturn value[key];\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif ('key' in $$props) $$invalidate(0, key = $$props.key);\n\t\tif ('value' in $$props) $$invalidate(1, value = $$props.value);\n\t\tif ('isParentExpanded' in $$props) $$invalidate(2, isParentExpanded = $$props.isParentExpanded);\n\t\tif ('isParentArray' in $$props) $$invalidate(3, isParentArray = $$props.isParentArray);\n\t\tif ('expanded' in $$props) $$invalidate(4, expanded = $$props.expanded);\n\t};\n\n\t$$self.$$.update = () => {\n\t\tif ($$self.$$.dirty & /*value*/ 2) {\n\t\t\t $$invalidate(5, keys = Object.getOwnPropertyNames(value));\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*keys*/ 32) {\n\t\t\t $$invalidate(6, previewKeys = keys.filter(key => !filteredKey.has(key)));\n\t\t}\n\t};\n\n\treturn [\n\t\tkey,\n\t\tvalue,\n\t\tisParentExpanded,\n\t\tisParentArray,\n\t\texpanded,\n\t\tkeys,\n\t\tpreviewKeys,\n\t\tgetValue\n\t];\n}\n\nclass JSONArrayNode extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(this, options, instance$7, create_fragment$7, safe_not_equal, {\n\t\t\tkey: 0,\n\t\t\tvalue: 1,\n\t\t\tisParentExpanded: 2,\n\t\t\tisParentArray: 3,\n\t\t\texpanded: 4\n\t\t});\n\t}\n}\n\n/* node_modules/svelte-json-tree-auto/src/JSONIterableArrayNode.svelte generated by Svelte v3.41.0 */\n\nfunction create_fragment$8(ctx) {\n\tlet jsonnested;\n\tlet current;\n\n\tjsonnested = new JSONNested({\n\t\t\tprops: {\n\t\t\t\tkey: /*key*/ ctx[0],\n\t\t\t\tisParentExpanded: /*isParentExpanded*/ ctx[1],\n\t\t\t\tisParentArray: /*isParentArray*/ ctx[2],\n\t\t\t\tkeys: /*keys*/ ctx[4],\n\t\t\t\tgetKey,\n\t\t\t\tgetValue,\n\t\t\t\tisArray: true,\n\t\t\t\tlabel: \"\" + (/*nodeType*/ ctx[3] + \"(\" + /*keys*/ ctx[4].length + \")\"),\n\t\t\t\tbracketOpen: '{',\n\t\t\t\tbracketClose: '}'\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(jsonnested.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(jsonnested, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst jsonnested_changes = {};\n\t\t\tif (dirty & /*key*/ 1) jsonnested_changes.key = /*key*/ ctx[0];\n\t\t\tif (dirty & /*isParentExpanded*/ 2) jsonnested_changes.isParentExpanded = /*isParentExpanded*/ ctx[1];\n\t\t\tif (dirty & /*isParentArray*/ 4) jsonnested_changes.isParentArray = /*isParentArray*/ ctx[2];\n\t\t\tif (dirty & /*keys*/ 16) jsonnested_changes.keys = /*keys*/ ctx[4];\n\t\t\tif (dirty & /*nodeType, keys*/ 24) jsonnested_changes.label = \"\" + (/*nodeType*/ ctx[3] + \"(\" + /*keys*/ ctx[4].length + \")\");\n\t\t\tjsonnested.$set(jsonnested_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(jsonnested.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(jsonnested.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(jsonnested, detaching);\n\t\t}\n\t};\n}\n\nfunction getKey(key) {\n\treturn String(key[0]);\n}\n\nfunction getValue(key) {\n\treturn key[1];\n}\n\nfunction instance$8($$self, $$props, $$invalidate) {\n\tlet { key, value, isParentExpanded, isParentArray, nodeType } = $$props;\n\tlet keys = [];\n\n\t$$self.$$set = $$props => {\n\t\tif ('key' in $$props) $$invalidate(0, key = $$props.key);\n\t\tif ('value' in $$props) $$invalidate(5, value = $$props.value);\n\t\tif ('isParentExpanded' in $$props) $$invalidate(1, isParentExpanded = $$props.isParentExpanded);\n\t\tif ('isParentArray' in $$props) $$invalidate(2, isParentArray = $$props.isParentArray);\n\t\tif ('nodeType' in $$props) $$invalidate(3, nodeType = $$props.nodeType);\n\t};\n\n\t$$self.$$.update = () => {\n\t\tif ($$self.$$.dirty & /*value*/ 32) {\n\t\t\t {\n\t\t\t\tlet result = [];\n\t\t\t\tlet i = 0;\n\n\t\t\t\tfor (const entry of value) {\n\t\t\t\t\tresult.push([i++, entry]);\n\t\t\t\t}\n\n\t\t\t\t$$invalidate(4, keys = result);\n\t\t\t}\n\t\t}\n\t};\n\n\treturn [key, isParentExpanded, isParentArray, nodeType, keys, value];\n}\n\nclass JSONIterableArrayNode extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(this, options, instance$8, create_fragment$8, safe_not_equal, {\n\t\t\tkey: 0,\n\t\t\tvalue: 5,\n\t\t\tisParentExpanded: 1,\n\t\t\tisParentArray: 2,\n\t\t\tnodeType: 3\n\t\t});\n\t}\n}\n\nclass MapEntry {\r\n  constructor(key, value) {\r\n    this.key = key;\r\n    this.value = value;\r\n  }\r\n}\n\n/* node_modules/svelte-json-tree-auto/src/JSONIterableMapNode.svelte generated by Svelte v3.41.0 */\n\nfunction create_fragment$9(ctx) {\n\tlet jsonnested;\n\tlet current;\n\n\tjsonnested = new JSONNested({\n\t\t\tprops: {\n\t\t\t\tkey: /*key*/ ctx[0],\n\t\t\t\tisParentExpanded: /*isParentExpanded*/ ctx[1],\n\t\t\t\tisParentArray: /*isParentArray*/ ctx[2],\n\t\t\t\tkeys: /*keys*/ ctx[4],\n\t\t\t\tgetKey: getKey$1,\n\t\t\t\tgetValue: getValue$1,\n\t\t\t\tlabel: \"\" + (/*nodeType*/ ctx[3] + \"(\" + /*keys*/ ctx[4].length + \")\"),\n\t\t\t\tcolon: \"\",\n\t\t\t\tbracketOpen: '{',\n\t\t\t\tbracketClose: '}'\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(jsonnested.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(jsonnested, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst jsonnested_changes = {};\n\t\t\tif (dirty & /*key*/ 1) jsonnested_changes.key = /*key*/ ctx[0];\n\t\t\tif (dirty & /*isParentExpanded*/ 2) jsonnested_changes.isParentExpanded = /*isParentExpanded*/ ctx[1];\n\t\t\tif (dirty & /*isParentArray*/ 4) jsonnested_changes.isParentArray = /*isParentArray*/ ctx[2];\n\t\t\tif (dirty & /*keys*/ 16) jsonnested_changes.keys = /*keys*/ ctx[4];\n\t\t\tif (dirty & /*nodeType, keys*/ 24) jsonnested_changes.label = \"\" + (/*nodeType*/ ctx[3] + \"(\" + /*keys*/ ctx[4].length + \")\");\n\t\t\tjsonnested.$set(jsonnested_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(jsonnested.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(jsonnested.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(jsonnested, detaching);\n\t\t}\n\t};\n}\n\nfunction getKey$1(entry) {\n\treturn entry[0];\n}\n\nfunction getValue$1(entry) {\n\treturn entry[1];\n}\n\nfunction instance$9($$self, $$props, $$invalidate) {\n\tlet { key, value, isParentExpanded, isParentArray, nodeType } = $$props;\n\tlet keys = [];\n\n\t$$self.$$set = $$props => {\n\t\tif ('key' in $$props) $$invalidate(0, key = $$props.key);\n\t\tif ('value' in $$props) $$invalidate(5, value = $$props.value);\n\t\tif ('isParentExpanded' in $$props) $$invalidate(1, isParentExpanded = $$props.isParentExpanded);\n\t\tif ('isParentArray' in $$props) $$invalidate(2, isParentArray = $$props.isParentArray);\n\t\tif ('nodeType' in $$props) $$invalidate(3, nodeType = $$props.nodeType);\n\t};\n\n\t$$self.$$.update = () => {\n\t\tif ($$self.$$.dirty & /*value*/ 32) {\n\t\t\t {\n\t\t\t\tlet result = [];\n\t\t\t\tlet i = 0;\n\n\t\t\t\tfor (const entry of value) {\n\t\t\t\t\tresult.push([i++, new MapEntry(entry[0], entry[1])]);\n\t\t\t\t}\n\n\t\t\t\t$$invalidate(4, keys = result);\n\t\t\t}\n\t\t}\n\t};\n\n\treturn [key, isParentExpanded, isParentArray, nodeType, keys, value];\n}\n\nclass JSONIterableMapNode extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(this, options, instance$9, create_fragment$9, safe_not_equal, {\n\t\t\tkey: 0,\n\t\t\tvalue: 5,\n\t\t\tisParentExpanded: 1,\n\t\t\tisParentArray: 2,\n\t\t\tnodeType: 3\n\t\t});\n\t}\n}\n\n/* node_modules/svelte-json-tree-auto/src/JSONMapEntryNode.svelte generated by Svelte v3.41.0 */\n\nfunction create_fragment$a(ctx) {\n\tlet jsonnested;\n\tlet current;\n\n\tjsonnested = new JSONNested({\n\t\t\tprops: {\n\t\t\t\texpanded: /*expanded*/ ctx[4],\n\t\t\t\tisParentExpanded: /*isParentExpanded*/ ctx[2],\n\t\t\t\tisParentArray: /*isParentArray*/ ctx[3],\n\t\t\t\tkey: /*isParentExpanded*/ ctx[2]\n\t\t\t\t? String(/*key*/ ctx[0])\n\t\t\t\t: /*value*/ ctx[1].key,\n\t\t\t\tkeys: /*keys*/ ctx[5],\n\t\t\t\tgetValue: /*getValue*/ ctx[6],\n\t\t\t\tlabel: /*isParentExpanded*/ ctx[2] ? 'Entry ' : '=> ',\n\t\t\t\tbracketOpen: '{',\n\t\t\t\tbracketClose: '}'\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(jsonnested.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(jsonnested, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst jsonnested_changes = {};\n\t\t\tif (dirty & /*expanded*/ 16) jsonnested_changes.expanded = /*expanded*/ ctx[4];\n\t\t\tif (dirty & /*isParentExpanded*/ 4) jsonnested_changes.isParentExpanded = /*isParentExpanded*/ ctx[2];\n\t\t\tif (dirty & /*isParentArray*/ 8) jsonnested_changes.isParentArray = /*isParentArray*/ ctx[3];\n\n\t\t\tif (dirty & /*isParentExpanded, key, value*/ 7) jsonnested_changes.key = /*isParentExpanded*/ ctx[2]\n\t\t\t? String(/*key*/ ctx[0])\n\t\t\t: /*value*/ ctx[1].key;\n\n\t\t\tif (dirty & /*isParentExpanded*/ 4) jsonnested_changes.label = /*isParentExpanded*/ ctx[2] ? 'Entry ' : '=> ';\n\t\t\tjsonnested.$set(jsonnested_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(jsonnested.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(jsonnested.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(jsonnested, detaching);\n\t\t}\n\t};\n}\n\nfunction instance$a($$self, $$props, $$invalidate) {\n\tlet { key, value, isParentExpanded, isParentArray } = $$props;\n\tlet { expanded = false } = $$props;\n\tconst keys = ['key', 'value'];\n\n\tfunction getValue(key) {\n\t\treturn value[key];\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif ('key' in $$props) $$invalidate(0, key = $$props.key);\n\t\tif ('value' in $$props) $$invalidate(1, value = $$props.value);\n\t\tif ('isParentExpanded' in $$props) $$invalidate(2, isParentExpanded = $$props.isParentExpanded);\n\t\tif ('isParentArray' in $$props) $$invalidate(3, isParentArray = $$props.isParentArray);\n\t\tif ('expanded' in $$props) $$invalidate(4, expanded = $$props.expanded);\n\t};\n\n\treturn [key, value, isParentExpanded, isParentArray, expanded, keys, getValue];\n}\n\nclass JSONMapEntryNode extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(this, options, instance$a, create_fragment$a, safe_not_equal, {\n\t\t\tkey: 0,\n\t\t\tvalue: 1,\n\t\t\tisParentExpanded: 2,\n\t\t\tisParentArray: 3,\n\t\t\texpanded: 4\n\t\t});\n\t}\n}\n\n/* node_modules/svelte-json-tree-auto/src/JSONValueNode.svelte generated by Svelte v3.41.0 */\n\nfunction add_css$5(target) {\n\tappend_styles(target, \"svelte-3bjyvl\", \"li.svelte-3bjyvl{user-select:text;word-wrap:break-word;word-break:break-all}.indent.svelte-3bjyvl{padding-left:var(--li-identation)}.String.svelte-3bjyvl{color:var(--string-color)}.Date.svelte-3bjyvl{color:var(--date-color)}.Number.svelte-3bjyvl{color:var(--number-color)}.Boolean.svelte-3bjyvl{color:var(--boolean-color)}.Null.svelte-3bjyvl{color:var(--null-color)}.Undefined.svelte-3bjyvl{color:var(--undefined-color)}.Function.svelte-3bjyvl{color:var(--function-color);font-style:italic}.Symbol.svelte-3bjyvl{color:var(--symbol-color)}\");\n}\n\nfunction create_fragment$b(ctx) {\n\tlet li;\n\tlet jsonkey;\n\tlet t0;\n\tlet span;\n\n\tlet t1_value = (/*valueGetter*/ ctx[2]\n\t? /*valueGetter*/ ctx[2](/*value*/ ctx[1])\n\t: /*value*/ ctx[1]) + \"\";\n\n\tlet t1;\n\tlet span_class_value;\n\tlet current;\n\n\tjsonkey = new JSONKey({\n\t\t\tprops: {\n\t\t\t\tkey: /*key*/ ctx[0],\n\t\t\t\tcolon: /*colon*/ ctx[6],\n\t\t\t\tisParentExpanded: /*isParentExpanded*/ ctx[3],\n\t\t\t\tisParentArray: /*isParentArray*/ ctx[4]\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tli = element(\"li\");\n\t\t\tcreate_component(jsonkey.$$.fragment);\n\t\t\tt0 = space();\n\t\t\tspan = element(\"span\");\n\t\t\tt1 = text(t1_value);\n\t\t\tattr(span, \"class\", span_class_value = \"\" + (null_to_empty(/*nodeType*/ ctx[5]) + \" svelte-3bjyvl\"));\n\t\t\tattr(li, \"class\", \"svelte-3bjyvl\");\n\t\t\ttoggle_class(li, \"indent\", /*isParentExpanded*/ ctx[3]);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, li, anchor);\n\t\t\tmount_component(jsonkey, li, null);\n\t\t\tappend(li, t0);\n\t\t\tappend(li, span);\n\t\t\tappend(span, t1);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst jsonkey_changes = {};\n\t\t\tif (dirty & /*key*/ 1) jsonkey_changes.key = /*key*/ ctx[0];\n\t\t\tif (dirty & /*isParentExpanded*/ 8) jsonkey_changes.isParentExpanded = /*isParentExpanded*/ ctx[3];\n\t\t\tif (dirty & /*isParentArray*/ 16) jsonkey_changes.isParentArray = /*isParentArray*/ ctx[4];\n\t\t\tjsonkey.$set(jsonkey_changes);\n\n\t\t\tif ((!current || dirty & /*valueGetter, value*/ 6) && t1_value !== (t1_value = (/*valueGetter*/ ctx[2]\n\t\t\t? /*valueGetter*/ ctx[2](/*value*/ ctx[1])\n\t\t\t: /*value*/ ctx[1]) + \"\")) set_data(t1, t1_value);\n\n\t\t\tif (!current || dirty & /*nodeType*/ 32 && span_class_value !== (span_class_value = \"\" + (null_to_empty(/*nodeType*/ ctx[5]) + \" svelte-3bjyvl\"))) {\n\t\t\t\tattr(span, \"class\", span_class_value);\n\t\t\t}\n\n\t\t\tif (dirty & /*isParentExpanded*/ 8) {\n\t\t\t\ttoggle_class(li, \"indent\", /*isParentExpanded*/ ctx[3]);\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(jsonkey.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(jsonkey.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(li);\n\t\t\tdestroy_component(jsonkey);\n\t\t}\n\t};\n}\n\nfunction instance$b($$self, $$props, $$invalidate) {\n\tlet { key, value, valueGetter = null, isParentExpanded, isParentArray, nodeType } = $$props;\n\tconst { colon } = getContext(contextKey);\n\n\t$$self.$$set = $$props => {\n\t\tif ('key' in $$props) $$invalidate(0, key = $$props.key);\n\t\tif ('value' in $$props) $$invalidate(1, value = $$props.value);\n\t\tif ('valueGetter' in $$props) $$invalidate(2, valueGetter = $$props.valueGetter);\n\t\tif ('isParentExpanded' in $$props) $$invalidate(3, isParentExpanded = $$props.isParentExpanded);\n\t\tif ('isParentArray' in $$props) $$invalidate(4, isParentArray = $$props.isParentArray);\n\t\tif ('nodeType' in $$props) $$invalidate(5, nodeType = $$props.nodeType);\n\t};\n\n\treturn [key, value, valueGetter, isParentExpanded, isParentArray, nodeType, colon];\n}\n\nclass JSONValueNode extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(\n\t\t\tthis,\n\t\t\toptions,\n\t\t\tinstance$b,\n\t\t\tcreate_fragment$b,\n\t\t\tsafe_not_equal,\n\t\t\t{\n\t\t\t\tkey: 0,\n\t\t\t\tvalue: 1,\n\t\t\t\tvalueGetter: 2,\n\t\t\t\tisParentExpanded: 3,\n\t\t\t\tisParentArray: 4,\n\t\t\t\tnodeType: 5\n\t\t\t},\n\t\t\tadd_css$5\n\t\t);\n\t}\n}\n\n/* node_modules/svelte-json-tree-auto/src/ErrorNode.svelte generated by Svelte v3.41.0 */\n\nfunction add_css$6(target) {\n\tappend_styles(target, \"svelte-1ca3gb2\", \"li.svelte-1ca3gb2{user-select:text;word-wrap:break-word;word-break:break-all}.indent.svelte-1ca3gb2{padding-left:var(--li-identation)}.collapse.svelte-1ca3gb2{--li-display:inline;display:inline;font-style:italic}\");\n}\n\nfunction get_each_context$2(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[8] = list[i];\n\tchild_ctx[10] = i;\n\treturn child_ctx;\n}\n\n// (40:2) {#if isParentExpanded}\nfunction create_if_block_2$1(ctx) {\n\tlet jsonarrow;\n\tlet current;\n\tjsonarrow = new JSONArrow({ props: { expanded: /*expanded*/ ctx[0] } });\n\tjsonarrow.$on(\"click\", /*toggleExpand*/ ctx[7]);\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(jsonarrow.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(jsonarrow, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst jsonarrow_changes = {};\n\t\t\tif (dirty & /*expanded*/ 1) jsonarrow_changes.expanded = /*expanded*/ ctx[0];\n\t\t\tjsonarrow.$set(jsonarrow_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(jsonarrow.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(jsonarrow.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(jsonarrow, detaching);\n\t\t}\n\t};\n}\n\n// (45:2) {#if isParentExpanded}\nfunction create_if_block$3(ctx) {\n\tlet ul;\n\tlet current;\n\tlet if_block = /*expanded*/ ctx[0] && create_if_block_1$1(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tul = element(\"ul\");\n\t\t\tif (if_block) if_block.c();\n\t\t\tattr(ul, \"class\", \"svelte-1ca3gb2\");\n\t\t\ttoggle_class(ul, \"collapse\", !/*expanded*/ ctx[0]);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, ul, anchor);\n\t\t\tif (if_block) if_block.m(ul, null);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (/*expanded*/ ctx[0]) {\n\t\t\t\tif (if_block) {\n\t\t\t\t\tif_block.p(ctx, dirty);\n\n\t\t\t\t\tif (dirty & /*expanded*/ 1) {\n\t\t\t\t\t\ttransition_in(if_block, 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif_block = create_if_block_1$1(ctx);\n\t\t\t\t\tif_block.c();\n\t\t\t\t\ttransition_in(if_block, 1);\n\t\t\t\t\tif_block.m(ul, null);\n\t\t\t\t}\n\t\t\t} else if (if_block) {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_block, 1, 1, () => {\n\t\t\t\t\tif_block = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\n\t\t\tif (dirty & /*expanded*/ 1) {\n\t\t\t\ttoggle_class(ul, \"collapse\", !/*expanded*/ ctx[0]);\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(ul);\n\t\t\tif (if_block) if_block.d();\n\t\t}\n\t};\n}\n\n// (47:6) {#if expanded}\nfunction create_if_block_1$1(ctx) {\n\tlet jsonnode;\n\tlet t0;\n\tlet li;\n\tlet jsonkey;\n\tlet t1;\n\tlet span;\n\tlet current;\n\n\tjsonnode = new JSONNode({\n\t\t\tprops: {\n\t\t\t\tkey: \"message\",\n\t\t\t\tvalue: /*value*/ ctx[2].message\n\t\t\t}\n\t\t});\n\n\tjsonkey = new JSONKey({\n\t\t\tprops: {\n\t\t\t\tkey: \"stack\",\n\t\t\t\tcolon: \":\",\n\t\t\t\tisParentExpanded: /*isParentExpanded*/ ctx[3]\n\t\t\t}\n\t\t});\n\n\tlet each_value = /*stack*/ ctx[5];\n\tlet each_blocks = [];\n\n\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\teach_blocks[i] = create_each_block$2(get_each_context$2(ctx, each_value, i));\n\t}\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(jsonnode.$$.fragment);\n\t\t\tt0 = space();\n\t\t\tli = element(\"li\");\n\t\t\tcreate_component(jsonkey.$$.fragment);\n\t\t\tt1 = space();\n\t\t\tspan = element(\"span\");\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].c();\n\t\t\t}\n\n\t\t\tattr(li, \"class\", \"svelte-1ca3gb2\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(jsonnode, target, anchor);\n\t\t\tinsert(target, t0, anchor);\n\t\t\tinsert(target, li, anchor);\n\t\t\tmount_component(jsonkey, li, null);\n\t\t\tappend(li, t1);\n\t\t\tappend(li, span);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].m(span, null);\n\t\t\t}\n\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst jsonnode_changes = {};\n\t\t\tif (dirty & /*value*/ 4) jsonnode_changes.value = /*value*/ ctx[2].message;\n\t\t\tjsonnode.$set(jsonnode_changes);\n\t\t\tconst jsonkey_changes = {};\n\t\t\tif (dirty & /*isParentExpanded*/ 8) jsonkey_changes.isParentExpanded = /*isParentExpanded*/ ctx[3];\n\t\t\tjsonkey.$set(jsonkey_changes);\n\n\t\t\tif (dirty & /*stack*/ 32) {\n\t\t\t\teach_value = /*stack*/ ctx[5];\n\t\t\t\tlet i;\n\n\t\t\t\tfor (i = 0; i < each_value.length; i += 1) {\n\t\t\t\t\tconst child_ctx = get_each_context$2(ctx, each_value, i);\n\n\t\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\t\teach_blocks[i].p(child_ctx, dirty);\n\t\t\t\t\t} else {\n\t\t\t\t\t\teach_blocks[i] = create_each_block$2(child_ctx);\n\t\t\t\t\t\teach_blocks[i].c();\n\t\t\t\t\t\teach_blocks[i].m(span, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (; i < each_blocks.length; i += 1) {\n\t\t\t\t\teach_blocks[i].d(1);\n\t\t\t\t}\n\n\t\t\t\teach_blocks.length = each_value.length;\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(jsonnode.$$.fragment, local);\n\t\t\ttransition_in(jsonkey.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(jsonnode.$$.fragment, local);\n\t\t\ttransition_out(jsonkey.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(jsonnode, detaching);\n\t\t\tif (detaching) detach(t0);\n\t\t\tif (detaching) detach(li);\n\t\t\tdestroy_component(jsonkey);\n\t\t\tdestroy_each(each_blocks, detaching);\n\t\t}\n\t};\n}\n\n// (52:12) {#each stack as line, index}\nfunction create_each_block$2(ctx) {\n\tlet span;\n\tlet t_value = /*line*/ ctx[8] + \"\";\n\tlet t;\n\tlet br;\n\n\treturn {\n\t\tc() {\n\t\t\tspan = element(\"span\");\n\t\t\tt = text(t_value);\n\t\t\tbr = element(\"br\");\n\t\t\tattr(span, \"class\", \"svelte-1ca3gb2\");\n\t\t\ttoggle_class(span, \"indent\", /*index*/ ctx[10] > 0);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, span, anchor);\n\t\t\tappend(span, t);\n\t\t\tinsert(target, br, anchor);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*stack*/ 32 && t_value !== (t_value = /*line*/ ctx[8] + \"\")) set_data(t, t_value);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(span);\n\t\t\tif (detaching) detach(br);\n\t\t}\n\t};\n}\n\nfunction create_fragment$c(ctx) {\n\tlet li;\n\tlet t0;\n\tlet jsonkey;\n\tlet t1;\n\tlet span;\n\tlet t2;\n\tlet t3_value = (/*expanded*/ ctx[0] ? '' : /*value*/ ctx[2].message) + \"\";\n\tlet t3;\n\tlet t4;\n\tlet current;\n\tlet mounted;\n\tlet dispose;\n\tlet if_block0 = /*isParentExpanded*/ ctx[3] && create_if_block_2$1(ctx);\n\n\tjsonkey = new JSONKey({\n\t\t\tprops: {\n\t\t\t\tkey: /*key*/ ctx[1],\n\t\t\t\tcolon: /*context*/ ctx[6].colon,\n\t\t\t\tisParentExpanded: /*isParentExpanded*/ ctx[3],\n\t\t\t\tisParentArray: /*isParentArray*/ ctx[4]\n\t\t\t}\n\t\t});\n\n\tlet if_block1 = /*isParentExpanded*/ ctx[3] && create_if_block$3(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tli = element(\"li\");\n\t\t\tif (if_block0) if_block0.c();\n\t\t\tt0 = space();\n\t\t\tcreate_component(jsonkey.$$.fragment);\n\t\t\tt1 = space();\n\t\t\tspan = element(\"span\");\n\t\t\tt2 = text(\"Error: \");\n\t\t\tt3 = text(t3_value);\n\t\t\tt4 = space();\n\t\t\tif (if_block1) if_block1.c();\n\t\t\tattr(li, \"class\", \"svelte-1ca3gb2\");\n\t\t\ttoggle_class(li, \"indent\", /*isParentExpanded*/ ctx[3]);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, li, anchor);\n\t\t\tif (if_block0) if_block0.m(li, null);\n\t\t\tappend(li, t0);\n\t\t\tmount_component(jsonkey, li, null);\n\t\t\tappend(li, t1);\n\t\t\tappend(li, span);\n\t\t\tappend(span, t2);\n\t\t\tappend(span, t3);\n\t\t\tappend(li, t4);\n\t\t\tif (if_block1) if_block1.m(li, null);\n\t\t\tcurrent = true;\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = listen(span, \"click\", /*toggleExpand*/ ctx[7]);\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (/*isParentExpanded*/ ctx[3]) {\n\t\t\t\tif (if_block0) {\n\t\t\t\t\tif_block0.p(ctx, dirty);\n\n\t\t\t\t\tif (dirty & /*isParentExpanded*/ 8) {\n\t\t\t\t\t\ttransition_in(if_block0, 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif_block0 = create_if_block_2$1(ctx);\n\t\t\t\t\tif_block0.c();\n\t\t\t\t\ttransition_in(if_block0, 1);\n\t\t\t\t\tif_block0.m(li, t0);\n\t\t\t\t}\n\t\t\t} else if (if_block0) {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_block0, 1, 1, () => {\n\t\t\t\t\tif_block0 = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\n\t\t\tconst jsonkey_changes = {};\n\t\t\tif (dirty & /*key*/ 2) jsonkey_changes.key = /*key*/ ctx[1];\n\t\t\tif (dirty & /*isParentExpanded*/ 8) jsonkey_changes.isParentExpanded = /*isParentExpanded*/ ctx[3];\n\t\t\tif (dirty & /*isParentArray*/ 16) jsonkey_changes.isParentArray = /*isParentArray*/ ctx[4];\n\t\t\tjsonkey.$set(jsonkey_changes);\n\t\t\tif ((!current || dirty & /*expanded, value*/ 5) && t3_value !== (t3_value = (/*expanded*/ ctx[0] ? '' : /*value*/ ctx[2].message) + \"\")) set_data(t3, t3_value);\n\n\t\t\tif (/*isParentExpanded*/ ctx[3]) {\n\t\t\t\tif (if_block1) {\n\t\t\t\t\tif_block1.p(ctx, dirty);\n\n\t\t\t\t\tif (dirty & /*isParentExpanded*/ 8) {\n\t\t\t\t\t\ttransition_in(if_block1, 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif_block1 = create_if_block$3(ctx);\n\t\t\t\t\tif_block1.c();\n\t\t\t\t\ttransition_in(if_block1, 1);\n\t\t\t\t\tif_block1.m(li, null);\n\t\t\t\t}\n\t\t\t} else if (if_block1) {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_block1, 1, 1, () => {\n\t\t\t\t\tif_block1 = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\n\t\t\tif (dirty & /*isParentExpanded*/ 8) {\n\t\t\t\ttoggle_class(li, \"indent\", /*isParentExpanded*/ ctx[3]);\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block0);\n\t\t\ttransition_in(jsonkey.$$.fragment, local);\n\t\t\ttransition_in(if_block1);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block0);\n\t\t\ttransition_out(jsonkey.$$.fragment, local);\n\t\t\ttransition_out(if_block1);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(li);\n\t\t\tif (if_block0) if_block0.d();\n\t\t\tdestroy_component(jsonkey);\n\t\t\tif (if_block1) if_block1.d();\n\t\t\tmounted = false;\n\t\t\tdispose();\n\t\t}\n\t};\n}\n\nfunction instance$c($$self, $$props, $$invalidate) {\n\tlet stack;\n\tlet { key, value, isParentExpanded, isParentArray } = $$props;\n\tlet { expanded = false } = $$props;\n\tconst context = getContext(contextKey);\n\tsetContext(contextKey, { ...context, colon: ':' });\n\n\tfunction toggleExpand() {\n\t\t$$invalidate(0, expanded = !expanded);\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif ('key' in $$props) $$invalidate(1, key = $$props.key);\n\t\tif ('value' in $$props) $$invalidate(2, value = $$props.value);\n\t\tif ('isParentExpanded' in $$props) $$invalidate(3, isParentExpanded = $$props.isParentExpanded);\n\t\tif ('isParentArray' in $$props) $$invalidate(4, isParentArray = $$props.isParentArray);\n\t\tif ('expanded' in $$props) $$invalidate(0, expanded = $$props.expanded);\n\t};\n\n\t$$self.$$.update = () => {\n\t\tif ($$self.$$.dirty & /*value*/ 4) {\n\t\t\t $$invalidate(5, stack = value.stack.split('\\n'));\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*isParentExpanded*/ 8) {\n\t\t\t if (!isParentExpanded) {\n\t\t\t\t$$invalidate(0, expanded = false);\n\t\t\t}\n\t\t}\n\t};\n\n\treturn [\n\t\texpanded,\n\t\tkey,\n\t\tvalue,\n\t\tisParentExpanded,\n\t\tisParentArray,\n\t\tstack,\n\t\tcontext,\n\t\ttoggleExpand\n\t];\n}\n\nclass ErrorNode extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(\n\t\t\tthis,\n\t\t\toptions,\n\t\t\tinstance$c,\n\t\t\tcreate_fragment$c,\n\t\t\tsafe_not_equal,\n\t\t\t{\n\t\t\t\tkey: 1,\n\t\t\t\tvalue: 2,\n\t\t\t\tisParentExpanded: 3,\n\t\t\t\tisParentArray: 4,\n\t\t\t\texpanded: 0\n\t\t\t},\n\t\t\tadd_css$6\n\t\t);\n\t}\n}\n\nfunction objType(obj) {\r\n  const type = Object.prototype.toString.call(obj).slice(8, -1);\r\n  if (type === 'Object') {\r\n    if (typeof obj[Symbol.iterator] === 'function') {\r\n      return 'Iterable';\r\n    }\r\n    return obj.constructor.name;\r\n  }\r\n\r\n  return type;\r\n}\n\n/* node_modules/svelte-json-tree-auto/src/JSONNode.svelte generated by Svelte v3.41.0 */\n\nfunction create_fragment$d(ctx) {\n\tlet switch_instance;\n\tlet switch_instance_anchor;\n\tlet current;\n\tvar switch_value = /*componentType*/ ctx[6];\n\n\tfunction switch_props(ctx) {\n\t\treturn {\n\t\t\tprops: {\n\t\t\t\tkey: /*key*/ ctx[0],\n\t\t\t\tvalue: /*value*/ ctx[1],\n\t\t\t\tisParentExpanded: /*isParentExpanded*/ ctx[2],\n\t\t\t\tisParentArray: /*isParentArray*/ ctx[3],\n\t\t\t\tnodeType: /*nodeType*/ ctx[4],\n\t\t\t\tvalueGetter: /*valueGetter*/ ctx[5]\n\t\t\t}\n\t\t};\n\t}\n\n\tif (switch_value) {\n\t\tswitch_instance = new switch_value(switch_props(ctx));\n\t}\n\n\treturn {\n\t\tc() {\n\t\t\tif (switch_instance) create_component(switch_instance.$$.fragment);\n\t\t\tswitch_instance_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tif (switch_instance) {\n\t\t\t\tmount_component(switch_instance, target, anchor);\n\t\t\t}\n\n\t\t\tinsert(target, switch_instance_anchor, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst switch_instance_changes = {};\n\t\t\tif (dirty & /*key*/ 1) switch_instance_changes.key = /*key*/ ctx[0];\n\t\t\tif (dirty & /*value*/ 2) switch_instance_changes.value = /*value*/ ctx[1];\n\t\t\tif (dirty & /*isParentExpanded*/ 4) switch_instance_changes.isParentExpanded = /*isParentExpanded*/ ctx[2];\n\t\t\tif (dirty & /*isParentArray*/ 8) switch_instance_changes.isParentArray = /*isParentArray*/ ctx[3];\n\t\t\tif (dirty & /*nodeType*/ 16) switch_instance_changes.nodeType = /*nodeType*/ ctx[4];\n\t\t\tif (dirty & /*valueGetter*/ 32) switch_instance_changes.valueGetter = /*valueGetter*/ ctx[5];\n\n\t\t\tif (switch_value !== (switch_value = /*componentType*/ ctx[6])) {\n\t\t\t\tif (switch_instance) {\n\t\t\t\t\tgroup_outros();\n\t\t\t\t\tconst old_component = switch_instance;\n\n\t\t\t\t\ttransition_out(old_component.$$.fragment, 1, 0, () => {\n\t\t\t\t\t\tdestroy_component(old_component, 1);\n\t\t\t\t\t});\n\n\t\t\t\t\tcheck_outros();\n\t\t\t\t}\n\n\t\t\t\tif (switch_value) {\n\t\t\t\t\tswitch_instance = new switch_value(switch_props(ctx));\n\t\t\t\t\tcreate_component(switch_instance.$$.fragment);\n\t\t\t\t\ttransition_in(switch_instance.$$.fragment, 1);\n\t\t\t\t\tmount_component(switch_instance, switch_instance_anchor.parentNode, switch_instance_anchor);\n\t\t\t\t} else {\n\t\t\t\t\tswitch_instance = null;\n\t\t\t\t}\n\t\t\t} else if (switch_value) {\n\t\t\t\tswitch_instance.$set(switch_instance_changes);\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\tif (switch_instance) transition_in(switch_instance.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\tif (switch_instance) transition_out(switch_instance.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(switch_instance_anchor);\n\t\t\tif (switch_instance) destroy_component(switch_instance, detaching);\n\t\t}\n\t};\n}\n\nfunction instance$d($$self, $$props, $$invalidate) {\n\tlet nodeType;\n\tlet componentType;\n\tlet valueGetter;\n\tlet { key, value, isParentExpanded, isParentArray } = $$props;\n\n\tfunction getComponent(nodeType) {\n\t\tswitch (nodeType) {\n\t\t\tcase 'Object':\n\t\t\t\treturn JSONObjectNode;\n\t\t\tcase 'Error':\n\t\t\t\treturn ErrorNode;\n\t\t\tcase 'Array':\n\t\t\t\treturn JSONArrayNode;\n\t\t\tcase 'Iterable':\n\t\t\tcase 'Map':\n\t\t\tcase 'Set':\n\t\t\t\treturn typeof value.set === 'function'\n\t\t\t\t? JSONIterableMapNode\n\t\t\t\t: JSONIterableArrayNode;\n\t\t\tcase 'MapEntry':\n\t\t\t\treturn JSONMapEntryNode;\n\t\t\tdefault:\n\t\t\t\treturn JSONValueNode;\n\t\t}\n\t}\n\n\tfunction getValueGetter(nodeType) {\n\t\tswitch (nodeType) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Error':\n\t\t\tcase 'Array':\n\t\t\tcase 'Iterable':\n\t\t\tcase 'Map':\n\t\t\tcase 'Set':\n\t\t\tcase 'MapEntry':\n\t\t\tcase 'Number':\n\t\t\t\treturn undefined;\n\t\t\tcase 'String':\n\t\t\t\treturn raw => `\"${raw}\"`;\n\t\t\tcase 'Boolean':\n\t\t\t\treturn raw => raw ? 'true' : 'false';\n\t\t\tcase 'Date':\n\t\t\t\treturn raw => raw.toISOString();\n\t\t\tcase 'Null':\n\t\t\t\treturn () => 'null';\n\t\t\tcase 'Undefined':\n\t\t\t\treturn () => 'undefined';\n\t\t\tcase 'Function':\n\t\t\tcase 'Symbol':\n\t\t\t\treturn raw => raw.toString();\n\t\t\tdefault:\n\t\t\t\treturn () => `<${nodeType}>`;\n\t\t}\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif ('key' in $$props) $$invalidate(0, key = $$props.key);\n\t\tif ('value' in $$props) $$invalidate(1, value = $$props.value);\n\t\tif ('isParentExpanded' in $$props) $$invalidate(2, isParentExpanded = $$props.isParentExpanded);\n\t\tif ('isParentArray' in $$props) $$invalidate(3, isParentArray = $$props.isParentArray);\n\t};\n\n\t$$self.$$.update = () => {\n\t\tif ($$self.$$.dirty & /*value*/ 2) {\n\t\t\t $$invalidate(4, nodeType = objType(value));\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*nodeType*/ 16) {\n\t\t\t $$invalidate(6, componentType = getComponent(nodeType));\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*nodeType*/ 16) {\n\t\t\t $$invalidate(5, valueGetter = getValueGetter(nodeType));\n\t\t}\n\t};\n\n\treturn [\n\t\tkey,\n\t\tvalue,\n\t\tisParentExpanded,\n\t\tisParentArray,\n\t\tnodeType,\n\t\tvalueGetter,\n\t\tcomponentType\n\t];\n}\n\nclass JSONNode extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(this, options, instance$d, create_fragment$d, safe_not_equal, {\n\t\t\tkey: 0,\n\t\t\tvalue: 1,\n\t\t\tisParentExpanded: 2,\n\t\t\tisParentArray: 3\n\t\t});\n\t}\n}\n\n/* node_modules/svelte-json-tree-auto/src/Root.svelte generated by Svelte v3.41.0 */\n\nfunction add_css$7(target) {\n\tappend_styles(target, \"svelte-773n60\", \"ul.svelte-773n60{--string-color:var(--json-tree-string-color, #cb3f41);--symbol-color:var(--json-tree-symbol-color, #cb3f41);--boolean-color:var(--json-tree-boolean-color, #112aa7);--function-color:var(--json-tree-function-color, #112aa7);--number-color:var(--json-tree-number-color, #3029cf);--label-color:var(--json-tree-label-color, #871d8f);--arrow-color:var(--json-tree-arrow-color, #727272);--null-color:var(--json-tree-null-color, #8d8d8d);--undefined-color:var(--json-tree-undefined-color, #8d8d8d);--date-color:var(--json-tree-date-color, #8d8d8d);--li-identation:var(--json-tree-li-indentation, 1em);--li-line-height:var(--json-tree-li-line-height, 1.3);--li-colon-space:0.3em;font-size:var(--json-tree-font-size, 12px);font-family:var(--json-tree-font-family, 'Courier New', Courier, monospace)}ul.svelte-773n60 li{line-height:var(--li-line-height);display:var(--li-display, list-item);list-style:none}ul.svelte-773n60,ul.svelte-773n60 ul{padding:0;margin:0}\");\n}\n\nfunction create_fragment$e(ctx) {\n\tlet ul;\n\tlet jsonnode;\n\tlet current;\n\n\tjsonnode = new JSONNode({\n\t\t\tprops: {\n\t\t\t\tkey: /*key*/ ctx[0],\n\t\t\t\tvalue: /*value*/ ctx[1],\n\t\t\t\tisParentExpanded: true,\n\t\t\t\tisParentArray: false\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tul = element(\"ul\");\n\t\t\tcreate_component(jsonnode.$$.fragment);\n\t\t\tattr(ul, \"class\", \"svelte-773n60\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, ul, anchor);\n\t\t\tmount_component(jsonnode, ul, null);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst jsonnode_changes = {};\n\t\t\tif (dirty & /*key*/ 1) jsonnode_changes.key = /*key*/ ctx[0];\n\t\t\tif (dirty & /*value*/ 2) jsonnode_changes.value = /*value*/ ctx[1];\n\t\t\tjsonnode.$set(jsonnode_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(jsonnode.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(jsonnode.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(ul);\n\t\t\tdestroy_component(jsonnode);\n\t\t}\n\t};\n}\n\nfunction instance$e($$self, $$props, $$invalidate) {\n\tsetContext(contextKey, {});\n\tlet { key = '', value } = $$props;\n\n\t$$self.$$set = $$props => {\n\t\tif ('key' in $$props) $$invalidate(0, key = $$props.key);\n\t\tif ('value' in $$props) $$invalidate(1, value = $$props.value);\n\t};\n\n\treturn [key, value];\n}\n\nclass Root extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$e, create_fragment$e, safe_not_equal, { key: 0, value: 1 }, add_css$7);\n\t}\n}\n\n/* src/client/debug/main/ClientSwitcher.svelte generated by Svelte v3.41.0 */\n\nfunction add_css$8(target) {\n\tappend_styles(target, \"svelte-jvfq3i\", \".svelte-jvfq3i{box-sizing:border-box}section.switcher.svelte-jvfq3i{position:sticky;bottom:0;transform:translateY(20px);margin:40px -20px 0;border-top:1px solid #999;padding:20px;background:#fff}label.svelte-jvfq3i{display:flex;align-items:baseline;gap:5px;font-weight:bold}select.svelte-jvfq3i{min-width:140px}\");\n}\n\nfunction get_each_context$3(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[7] = list[i];\n\tchild_ctx[9] = i;\n\treturn child_ctx;\n}\n\n// (42:0) {#if debuggableClients.length > 1}\nfunction create_if_block$4(ctx) {\n\tlet section;\n\tlet label;\n\tlet t;\n\tlet select;\n\tlet mounted;\n\tlet dispose;\n\tlet each_value = /*debuggableClients*/ ctx[1];\n\tlet each_blocks = [];\n\n\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\teach_blocks[i] = create_each_block$3(get_each_context$3(ctx, each_value, i));\n\t}\n\n\treturn {\n\t\tc() {\n\t\t\tsection = element(\"section\");\n\t\t\tlabel = element(\"label\");\n\t\t\tt = text(\"Client\\n      \\n      \");\n\t\t\tselect = element(\"select\");\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].c();\n\t\t\t}\n\n\t\t\tattr(select, \"id\", selectId);\n\t\t\tattr(select, \"class\", \"svelte-jvfq3i\");\n\t\t\tif (/*selected*/ ctx[2] === void 0) add_render_callback(() => /*select_change_handler*/ ctx[6].call(select));\n\t\t\tattr(label, \"class\", \"svelte-jvfq3i\");\n\t\t\tattr(section, \"class\", \"switcher svelte-jvfq3i\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, section, anchor);\n\t\t\tappend(section, label);\n\t\t\tappend(label, t);\n\t\t\tappend(label, select);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].m(select, null);\n\t\t\t}\n\n\t\t\tselect_option(select, /*selected*/ ctx[2]);\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = [\n\t\t\t\t\tlisten(select, \"change\", /*handleSelection*/ ctx[3]),\n\t\t\t\t\tlisten(select, \"change\", /*select_change_handler*/ ctx[6])\n\t\t\t\t];\n\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*debuggableClients, JSON*/ 2) {\n\t\t\t\teach_value = /*debuggableClients*/ ctx[1];\n\t\t\t\tlet i;\n\n\t\t\t\tfor (i = 0; i < each_value.length; i += 1) {\n\t\t\t\t\tconst child_ctx = get_each_context$3(ctx, each_value, i);\n\n\t\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\t\teach_blocks[i].p(child_ctx, dirty);\n\t\t\t\t\t} else {\n\t\t\t\t\t\teach_blocks[i] = create_each_block$3(child_ctx);\n\t\t\t\t\t\teach_blocks[i].c();\n\t\t\t\t\t\teach_blocks[i].m(select, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (; i < each_blocks.length; i += 1) {\n\t\t\t\t\teach_blocks[i].d(1);\n\t\t\t\t}\n\n\t\t\t\teach_blocks.length = each_value.length;\n\t\t\t}\n\n\t\t\tif (dirty & /*selected*/ 4) {\n\t\t\t\tselect_option(select, /*selected*/ ctx[2]);\n\t\t\t}\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(section);\n\t\t\tdestroy_each(each_blocks, detaching);\n\t\t\tmounted = false;\n\t\t\trun_all(dispose);\n\t\t}\n\t};\n}\n\n// (48:8) {#each debuggableClients as clientOption, index}\nfunction create_each_block$3(ctx) {\n\tlet option;\n\tlet t0;\n\tlet t1;\n\tlet t2_value = JSON.stringify(/*clientOption*/ ctx[7].playerID) + \"\";\n\tlet t2;\n\tlet t3;\n\tlet t4_value = JSON.stringify(/*clientOption*/ ctx[7].matchID) + \"\";\n\tlet t4;\n\tlet t5;\n\tlet t6_value = /*clientOption*/ ctx[7].game.name + \"\";\n\tlet t6;\n\tlet t7;\n\tlet option_value_value;\n\n\treturn {\n\t\tc() {\n\t\t\toption = element(\"option\");\n\t\t\tt0 = text(/*index*/ ctx[9]);\n\t\t\tt1 = text(\" —\\n            playerID: \");\n\t\t\tt2 = text(t2_value);\n\t\t\tt3 = text(\",\\n            matchID: \");\n\t\t\tt4 = text(t4_value);\n\t\t\tt5 = text(\"\\n            (\");\n\t\t\tt6 = text(t6_value);\n\t\t\tt7 = text(\")\\n          \");\n\t\t\toption.__value = option_value_value = /*index*/ ctx[9];\n\t\t\toption.value = option.__value;\n\t\t\tattr(option, \"class\", \"svelte-jvfq3i\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, option, anchor);\n\t\t\tappend(option, t0);\n\t\t\tappend(option, t1);\n\t\t\tappend(option, t2);\n\t\t\tappend(option, t3);\n\t\t\tappend(option, t4);\n\t\t\tappend(option, t5);\n\t\t\tappend(option, t6);\n\t\t\tappend(option, t7);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*debuggableClients*/ 2 && t2_value !== (t2_value = JSON.stringify(/*clientOption*/ ctx[7].playerID) + \"\")) set_data(t2, t2_value);\n\t\t\tif (dirty & /*debuggableClients*/ 2 && t4_value !== (t4_value = JSON.stringify(/*clientOption*/ ctx[7].matchID) + \"\")) set_data(t4, t4_value);\n\t\t\tif (dirty & /*debuggableClients*/ 2 && t6_value !== (t6_value = /*clientOption*/ ctx[7].game.name + \"\")) set_data(t6, t6_value);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(option);\n\t\t}\n\t};\n}\n\nfunction create_fragment$f(ctx) {\n\tlet if_block_anchor;\n\tlet if_block = /*debuggableClients*/ ctx[1].length > 1 && create_if_block$4(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tif (if_block) if_block.c();\n\t\t\tif_block_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tif (if_block) if_block.m(target, anchor);\n\t\t\tinsert(target, if_block_anchor, anchor);\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (/*debuggableClients*/ ctx[1].length > 1) {\n\t\t\t\tif (if_block) {\n\t\t\t\t\tif_block.p(ctx, dirty);\n\t\t\t\t} else {\n\t\t\t\t\tif_block = create_if_block$4(ctx);\n\t\t\t\t\tif_block.c();\n\t\t\t\t\tif_block.m(if_block_anchor.parentNode, if_block_anchor);\n\t\t\t\t}\n\t\t\t} else if (if_block) {\n\t\t\t\tif_block.d(1);\n\t\t\t\tif_block = null;\n\t\t\t}\n\t\t},\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (if_block) if_block.d(detaching);\n\t\t\tif (detaching) detach(if_block_anchor);\n\t\t}\n\t};\n}\n\nconst selectId = 'bgio-debug-select-client';\n\nfunction instance$f($$self, $$props, $$invalidate) {\n\tlet client;\n\tlet debuggableClients;\n\tlet selected;\n\n\tlet $clientManager,\n\t\t$$unsubscribe_clientManager = noop,\n\t\t$$subscribe_clientManager = () => ($$unsubscribe_clientManager(), $$unsubscribe_clientManager = subscribe(clientManager, $$value => $$invalidate(5, $clientManager = $$value)), clientManager);\n\n\t$$self.$$.on_destroy.push(() => $$unsubscribe_clientManager());\n\tlet { clientManager } = $$props;\n\t$$subscribe_clientManager();\n\n\tconst handleSelection = e => {\n\t\t// Request to switch to the selected client.\n\t\tconst selectedClient = debuggableClients[e.target.value];\n\n\t\tclientManager.switchToClient(selectedClient);\n\n\t\t// Maintain focus on the client select menu after switching clients.\n\t\t// Necessary because switching clients will usually trigger a mount/unmount.\n\t\tconst select = document.getElementById(selectId);\n\n\t\tif (select) select.focus();\n\t};\n\n\tfunction select_change_handler() {\n\t\tselected = select_value(this);\n\t\t((($$invalidate(2, selected), $$invalidate(1, debuggableClients)), $$invalidate(4, client)), $$invalidate(5, $clientManager));\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif ('clientManager' in $$props) $$subscribe_clientManager($$invalidate(0, clientManager = $$props.clientManager));\n\t};\n\n\t$$self.$$.update = () => {\n\t\tif ($$self.$$.dirty & /*$clientManager*/ 32) {\n\t\t\t $$invalidate(4, { client, debuggableClients } = $clientManager, client, ($$invalidate(1, debuggableClients), $$invalidate(5, $clientManager)));\n\t\t}\n\n\t\tif ($$self.$$.dirty & /*debuggableClients, client*/ 18) {\n\t\t\t $$invalidate(2, selected = debuggableClients.indexOf(client));\n\t\t}\n\t};\n\n\treturn [\n\t\tclientManager,\n\t\tdebuggableClients,\n\t\tselected,\n\t\thandleSelection,\n\t\tclient,\n\t\t$clientManager,\n\t\tselect_change_handler\n\t];\n}\n\nclass ClientSwitcher extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$f, create_fragment$f, safe_not_equal, { clientManager: 0 }, add_css$8);\n\t}\n}\n\n/* src/client/debug/main/Hotkey.svelte generated by Svelte v3.41.0 */\n\nfunction add_css$9(target) {\n\tappend_styles(target, \"svelte-1vfj1mn\", \".key.svelte-1vfj1mn.svelte-1vfj1mn{display:flex;flex-direction:row;align-items:center}button.svelte-1vfj1mn.svelte-1vfj1mn{cursor:pointer;min-width:10px;padding-left:5px;padding-right:5px;height:20px;line-height:20px;text-align:center;border:1px solid #ccc;box-shadow:1px 1px 1px #888;background:#eee;color:#444}button.svelte-1vfj1mn.svelte-1vfj1mn:hover{background:#ddd}.key.active.svelte-1vfj1mn button.svelte-1vfj1mn{background:#ddd;border:1px solid #999;box-shadow:none}label.svelte-1vfj1mn.svelte-1vfj1mn{margin-left:10px}\");\n}\n\n// (78:2) {#if label}\nfunction create_if_block$5(ctx) {\n\tlet label_1;\n\tlet t0;\n\tlet t1;\n\tlet span;\n\tlet t2_value = `(shortcut: ${/*value*/ ctx[0]})` + \"\";\n\tlet t2;\n\n\treturn {\n\t\tc() {\n\t\t\tlabel_1 = element(\"label\");\n\t\t\tt0 = text(/*label*/ ctx[1]);\n\t\t\tt1 = space();\n\t\t\tspan = element(\"span\");\n\t\t\tt2 = text(t2_value);\n\t\t\tattr(span, \"class\", \"screen-reader-only\");\n\t\t\tattr(label_1, \"for\", /*id*/ ctx[5]);\n\t\t\tattr(label_1, \"class\", \"svelte-1vfj1mn\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, label_1, anchor);\n\t\t\tappend(label_1, t0);\n\t\t\tappend(label_1, t1);\n\t\t\tappend(label_1, span);\n\t\t\tappend(span, t2);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*label*/ 2) set_data(t0, /*label*/ ctx[1]);\n\t\t\tif (dirty & /*value*/ 1 && t2_value !== (t2_value = `(shortcut: ${/*value*/ ctx[0]})` + \"\")) set_data(t2, t2_value);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(label_1);\n\t\t}\n\t};\n}\n\nfunction create_fragment$g(ctx) {\n\tlet div;\n\tlet button;\n\tlet t0;\n\tlet t1;\n\tlet mounted;\n\tlet dispose;\n\tlet if_block = /*label*/ ctx[1] && create_if_block$5(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tbutton = element(\"button\");\n\t\t\tt0 = text(/*value*/ ctx[0]);\n\t\t\tt1 = space();\n\t\t\tif (if_block) if_block.c();\n\t\t\tattr(button, \"id\", /*id*/ ctx[5]);\n\t\t\tbutton.disabled = /*disable*/ ctx[2];\n\t\t\tattr(button, \"class\", \"svelte-1vfj1mn\");\n\t\t\tattr(div, \"class\", \"key svelte-1vfj1mn\");\n\t\t\ttoggle_class(div, \"active\", /*active*/ ctx[3]);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tappend(div, button);\n\t\t\tappend(button, t0);\n\t\t\tappend(div, t1);\n\t\t\tif (if_block) if_block.m(div, null);\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = [\n\t\t\t\t\tlisten(window, \"keydown\", /*Keypress*/ ctx[7]),\n\t\t\t\t\tlisten(button, \"click\", /*Activate*/ ctx[6])\n\t\t\t\t];\n\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (dirty & /*value*/ 1) set_data(t0, /*value*/ ctx[0]);\n\n\t\t\tif (dirty & /*disable*/ 4) {\n\t\t\t\tbutton.disabled = /*disable*/ ctx[2];\n\t\t\t}\n\n\t\t\tif (/*label*/ ctx[1]) {\n\t\t\t\tif (if_block) {\n\t\t\t\t\tif_block.p(ctx, dirty);\n\t\t\t\t} else {\n\t\t\t\t\tif_block = create_if_block$5(ctx);\n\t\t\t\t\tif_block.c();\n\t\t\t\t\tif_block.m(div, null);\n\t\t\t\t}\n\t\t\t} else if (if_block) {\n\t\t\t\tif_block.d(1);\n\t\t\t\tif_block = null;\n\t\t\t}\n\n\t\t\tif (dirty & /*active*/ 8) {\n\t\t\t\ttoggle_class(div, \"active\", /*active*/ ctx[3]);\n\t\t\t}\n\t\t},\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\t\t\tif (if_block) if_block.d();\n\t\t\tmounted = false;\n\t\t\trun_all(dispose);\n\t\t}\n\t};\n}\n\nfunction instance$g($$self, $$props, $$invalidate) {\n\tlet $disableHotkeys;\n\tlet { value } = $$props;\n\tlet { onPress = null } = $$props;\n\tlet { label = null } = $$props;\n\tlet { disable = false } = $$props;\n\tconst { disableHotkeys } = getContext('hotkeys');\n\tcomponent_subscribe($$self, disableHotkeys, value => $$invalidate(9, $disableHotkeys = value));\n\tlet active = false;\n\tlet id = `key-${value}`;\n\n\tfunction Deactivate() {\n\t\t$$invalidate(3, active = false);\n\t}\n\n\tfunction Activate() {\n\t\t$$invalidate(3, active = true);\n\t\tsetTimeout(Deactivate, 200);\n\n\t\tif (onPress) {\n\t\t\tsetTimeout(onPress, 1);\n\t\t}\n\t}\n\n\tfunction Keypress(e) {\n\t\tif (!$disableHotkeys && !disable && !e.ctrlKey && !e.metaKey && e.key == value) {\n\t\t\te.preventDefault();\n\t\t\tActivate();\n\t\t}\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif ('value' in $$props) $$invalidate(0, value = $$props.value);\n\t\tif ('onPress' in $$props) $$invalidate(8, onPress = $$props.onPress);\n\t\tif ('label' in $$props) $$invalidate(1, label = $$props.label);\n\t\tif ('disable' in $$props) $$invalidate(2, disable = $$props.disable);\n\t};\n\n\treturn [value, label, disable, active, disableHotkeys, id, Activate, Keypress, onPress];\n}\n\nclass Hotkey extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(\n\t\t\tthis,\n\t\t\toptions,\n\t\t\tinstance$g,\n\t\t\tcreate_fragment$g,\n\t\t\tsafe_not_equal,\n\t\t\t{\n\t\t\t\tvalue: 0,\n\t\t\t\tonPress: 8,\n\t\t\t\tlabel: 1,\n\t\t\t\tdisable: 2\n\t\t\t},\n\t\t\tadd_css$9\n\t\t);\n\t}\n}\n\n/* src/client/debug/main/InteractiveFunction.svelte generated by Svelte v3.41.0 */\n\nfunction add_css$a(target) {\n\tappend_styles(target, \"svelte-1mppqmp\", \".move.svelte-1mppqmp{display:flex;flex-direction:row;cursor:pointer;margin-left:10px;color:#666}.move.svelte-1mppqmp:hover{color:#333}.move.active.svelte-1mppqmp{color:#111;font-weight:bold}.arg-field.svelte-1mppqmp{outline:none;font-family:monospace}\");\n}\n\nfunction create_fragment$h(ctx) {\n\tlet div;\n\tlet span0;\n\tlet t0;\n\tlet t1;\n\tlet span1;\n\tlet t3;\n\tlet span2;\n\tlet t4;\n\tlet span3;\n\tlet mounted;\n\tlet dispose;\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tspan0 = element(\"span\");\n\t\t\tt0 = text(/*name*/ ctx[2]);\n\t\t\tt1 = space();\n\t\t\tspan1 = element(\"span\");\n\t\t\tspan1.textContent = \"(\";\n\t\t\tt3 = space();\n\t\t\tspan2 = element(\"span\");\n\t\t\tt4 = space();\n\t\t\tspan3 = element(\"span\");\n\t\t\tspan3.textContent = \")\";\n\t\t\tattr(span2, \"class\", \"arg-field svelte-1mppqmp\");\n\t\t\tattr(span2, \"contenteditable\", \"\");\n\t\t\tattr(div, \"class\", \"move svelte-1mppqmp\");\n\t\t\ttoggle_class(div, \"active\", /*active*/ ctx[3]);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tappend(div, span0);\n\t\t\tappend(span0, t0);\n\t\t\tappend(div, t1);\n\t\t\tappend(div, span1);\n\t\t\tappend(div, t3);\n\t\t\tappend(div, span2);\n\t\t\t/*span2_binding*/ ctx[6](span2);\n\t\t\tappend(div, t4);\n\t\t\tappend(div, span3);\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = [\n\t\t\t\t\tlisten(span2, \"focus\", function () {\n\t\t\t\t\t\tif (is_function(/*Activate*/ ctx[0])) /*Activate*/ ctx[0].apply(this, arguments);\n\t\t\t\t\t}),\n\t\t\t\t\tlisten(span2, \"blur\", function () {\n\t\t\t\t\t\tif (is_function(/*Deactivate*/ ctx[1])) /*Deactivate*/ ctx[1].apply(this, arguments);\n\t\t\t\t\t}),\n\t\t\t\t\tlisten(span2, \"keypress\", stop_propagation(keypress_handler)),\n\t\t\t\t\tlisten(span2, \"keydown\", /*OnKeyDown*/ ctx[5]),\n\t\t\t\t\tlisten(div, \"click\", function () {\n\t\t\t\t\t\tif (is_function(/*Activate*/ ctx[0])) /*Activate*/ ctx[0].apply(this, arguments);\n\t\t\t\t\t})\n\t\t\t\t];\n\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(new_ctx, [dirty]) {\n\t\t\tctx = new_ctx;\n\t\t\tif (dirty & /*name*/ 4) set_data(t0, /*name*/ ctx[2]);\n\n\t\t\tif (dirty & /*active*/ 8) {\n\t\t\t\ttoggle_class(div, \"active\", /*active*/ ctx[3]);\n\t\t\t}\n\t\t},\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\t\t\t/*span2_binding*/ ctx[6](null);\n\t\t\tmounted = false;\n\t\t\trun_all(dispose);\n\t\t}\n\t};\n}\n\nconst keypress_handler = () => {\n\t\n};\n\nfunction instance$h($$self, $$props, $$invalidate) {\n\tlet { Activate } = $$props;\n\tlet { Deactivate } = $$props;\n\tlet { name } = $$props;\n\tlet { active } = $$props;\n\tlet span;\n\tconst dispatch = createEventDispatcher();\n\n\tfunction Submit() {\n\t\ttry {\n\t\t\tconst value = span.innerText;\n\t\t\tlet argArray = new Function(`return [${value}]`)();\n\t\t\tdispatch('submit', argArray);\n\t\t} catch(error) {\n\t\t\tdispatch('error', error);\n\t\t}\n\n\t\t$$invalidate(4, span.innerText = '', span);\n\t}\n\n\tfunction OnKeyDown(e) {\n\t\tif (e.key == 'Enter') {\n\t\t\te.preventDefault();\n\t\t\tSubmit();\n\t\t}\n\n\t\tif (e.key == 'Escape') {\n\t\t\te.preventDefault();\n\t\t\tDeactivate();\n\t\t}\n\t}\n\n\tafterUpdate(() => {\n\t\tif (active) {\n\t\t\tspan.focus();\n\t\t} else {\n\t\t\tspan.blur();\n\t\t}\n\t});\n\n\tfunction span2_binding($$value) {\n\t\tbinding_callbacks[$$value ? 'unshift' : 'push'](() => {\n\t\t\tspan = $$value;\n\t\t\t$$invalidate(4, span);\n\t\t});\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif ('Activate' in $$props) $$invalidate(0, Activate = $$props.Activate);\n\t\tif ('Deactivate' in $$props) $$invalidate(1, Deactivate = $$props.Deactivate);\n\t\tif ('name' in $$props) $$invalidate(2, name = $$props.name);\n\t\tif ('active' in $$props) $$invalidate(3, active = $$props.active);\n\t};\n\n\treturn [Activate, Deactivate, name, active, span, OnKeyDown, span2_binding];\n}\n\nclass InteractiveFunction extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(\n\t\t\tthis,\n\t\t\toptions,\n\t\t\tinstance$h,\n\t\t\tcreate_fragment$h,\n\t\t\tsafe_not_equal,\n\t\t\t{\n\t\t\t\tActivate: 0,\n\t\t\t\tDeactivate: 1,\n\t\t\t\tname: 2,\n\t\t\t\tactive: 3\n\t\t\t},\n\t\t\tadd_css$a\n\t\t);\n\t}\n}\n\n/* src/client/debug/main/Move.svelte generated by Svelte v3.41.0 */\n\nfunction add_css$b(target) {\n\tappend_styles(target, \"svelte-smqssc\", \".move-error.svelte-smqssc{color:#a00;font-weight:bold}.wrapper.svelte-smqssc{display:flex;flex-direction:row;align-items:center}\");\n}\n\n// (65:2) {#if error}\nfunction create_if_block$6(ctx) {\n\tlet span;\n\tlet t;\n\n\treturn {\n\t\tc() {\n\t\t\tspan = element(\"span\");\n\t\t\tt = text(/*error*/ ctx[2]);\n\t\t\tattr(span, \"class\", \"move-error svelte-smqssc\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, span, anchor);\n\t\t\tappend(span, t);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*error*/ 4) set_data(t, /*error*/ ctx[2]);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(span);\n\t\t}\n\t};\n}\n\nfunction create_fragment$i(ctx) {\n\tlet div1;\n\tlet div0;\n\tlet hotkey;\n\tlet t0;\n\tlet interactivefunction;\n\tlet t1;\n\tlet current;\n\n\thotkey = new Hotkey({\n\t\t\tprops: {\n\t\t\t\tvalue: /*shortcut*/ ctx[0],\n\t\t\t\tonPress: /*Activate*/ ctx[4]\n\t\t\t}\n\t\t});\n\n\tinteractivefunction = new InteractiveFunction({\n\t\t\tprops: {\n\t\t\t\tActivate: /*Activate*/ ctx[4],\n\t\t\t\tDeactivate: /*Deactivate*/ ctx[5],\n\t\t\t\tname: /*name*/ ctx[1],\n\t\t\t\tactive: /*active*/ ctx[3]\n\t\t\t}\n\t\t});\n\n\tinteractivefunction.$on(\"submit\", /*Submit*/ ctx[6]);\n\tinteractivefunction.$on(\"error\", /*Error*/ ctx[7]);\n\tlet if_block = /*error*/ ctx[2] && create_if_block$6(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tdiv1 = element(\"div\");\n\t\t\tdiv0 = element(\"div\");\n\t\t\tcreate_component(hotkey.$$.fragment);\n\t\t\tt0 = space();\n\t\t\tcreate_component(interactivefunction.$$.fragment);\n\t\t\tt1 = space();\n\t\t\tif (if_block) if_block.c();\n\t\t\tattr(div0, \"class\", \"wrapper svelte-smqssc\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div1, anchor);\n\t\t\tappend(div1, div0);\n\t\t\tmount_component(hotkey, div0, null);\n\t\t\tappend(div0, t0);\n\t\t\tmount_component(interactivefunction, div0, null);\n\t\t\tappend(div1, t1);\n\t\t\tif (if_block) if_block.m(div1, null);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst hotkey_changes = {};\n\t\t\tif (dirty & /*shortcut*/ 1) hotkey_changes.value = /*shortcut*/ ctx[0];\n\t\t\thotkey.$set(hotkey_changes);\n\t\t\tconst interactivefunction_changes = {};\n\t\t\tif (dirty & /*name*/ 2) interactivefunction_changes.name = /*name*/ ctx[1];\n\t\t\tif (dirty & /*active*/ 8) interactivefunction_changes.active = /*active*/ ctx[3];\n\t\t\tinteractivefunction.$set(interactivefunction_changes);\n\n\t\t\tif (/*error*/ ctx[2]) {\n\t\t\t\tif (if_block) {\n\t\t\t\t\tif_block.p(ctx, dirty);\n\t\t\t\t} else {\n\t\t\t\t\tif_block = create_if_block$6(ctx);\n\t\t\t\t\tif_block.c();\n\t\t\t\t\tif_block.m(div1, null);\n\t\t\t\t}\n\t\t\t} else if (if_block) {\n\t\t\t\tif_block.d(1);\n\t\t\t\tif_block = null;\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(hotkey.$$.fragment, local);\n\t\t\ttransition_in(interactivefunction.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(hotkey.$$.fragment, local);\n\t\t\ttransition_out(interactivefunction.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div1);\n\t\t\tdestroy_component(hotkey);\n\t\t\tdestroy_component(interactivefunction);\n\t\t\tif (if_block) if_block.d();\n\t\t}\n\t};\n}\n\nfunction instance$i($$self, $$props, $$invalidate) {\n\tlet { shortcut } = $$props;\n\tlet { name } = $$props;\n\tlet { fn } = $$props;\n\tconst { disableHotkeys } = getContext('hotkeys');\n\tlet error$1 = '';\n\tlet active = false;\n\n\tfunction Activate() {\n\t\tdisableHotkeys.set(true);\n\t\t$$invalidate(3, active = true);\n\t}\n\n\tfunction Deactivate() {\n\t\tdisableHotkeys.set(false);\n\t\t$$invalidate(2, error$1 = '');\n\t\t$$invalidate(3, active = false);\n\t}\n\n\tfunction Submit(e) {\n\t\t$$invalidate(2, error$1 = '');\n\t\tDeactivate();\n\t\tfn.apply(this, e.detail);\n\t}\n\n\tfunction Error(e) {\n\t\t$$invalidate(2, error$1 = e.detail);\n\t\t(0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.e)(e.detail);\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif ('shortcut' in $$props) $$invalidate(0, shortcut = $$props.shortcut);\n\t\tif ('name' in $$props) $$invalidate(1, name = $$props.name);\n\t\tif ('fn' in $$props) $$invalidate(8, fn = $$props.fn);\n\t};\n\n\treturn [shortcut, name, error$1, active, Activate, Deactivate, Submit, Error, fn];\n}\n\nclass Move extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$i, create_fragment$i, safe_not_equal, { shortcut: 0, name: 1, fn: 8 }, add_css$b);\n\t}\n}\n\n/* src/client/debug/main/Controls.svelte generated by Svelte v3.41.0 */\n\nfunction add_css$c(target) {\n\tappend_styles(target, \"svelte-c3lavh\", \"ul.svelte-c3lavh{padding-left:0}li.svelte-c3lavh{list-style:none;margin:none;margin-bottom:5px}\");\n}\n\nfunction create_fragment$j(ctx) {\n\tlet ul;\n\tlet li0;\n\tlet hotkey0;\n\tlet t0;\n\tlet li1;\n\tlet hotkey1;\n\tlet t1;\n\tlet li2;\n\tlet hotkey2;\n\tlet t2;\n\tlet li3;\n\tlet hotkey3;\n\tlet current;\n\n\thotkey0 = new Hotkey({\n\t\t\tprops: {\n\t\t\t\tvalue: \"1\",\n\t\t\t\tonPress: /*client*/ ctx[0].reset,\n\t\t\t\tlabel: \"reset\"\n\t\t\t}\n\t\t});\n\n\thotkey1 = new Hotkey({\n\t\t\tprops: {\n\t\t\t\tvalue: \"2\",\n\t\t\t\tonPress: /*Save*/ ctx[2],\n\t\t\t\tlabel: \"save\"\n\t\t\t}\n\t\t});\n\n\thotkey2 = new Hotkey({\n\t\t\tprops: {\n\t\t\t\tvalue: \"3\",\n\t\t\t\tonPress: /*Restore*/ ctx[3],\n\t\t\t\tlabel: \"restore\"\n\t\t\t}\n\t\t});\n\n\thotkey3 = new Hotkey({\n\t\t\tprops: {\n\t\t\t\tvalue: \".\",\n\t\t\t\tonPress: /*ToggleVisibility*/ ctx[1],\n\t\t\t\tlabel: \"hide\"\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tul = element(\"ul\");\n\t\t\tli0 = element(\"li\");\n\t\t\tcreate_component(hotkey0.$$.fragment);\n\t\t\tt0 = space();\n\t\t\tli1 = element(\"li\");\n\t\t\tcreate_component(hotkey1.$$.fragment);\n\t\t\tt1 = space();\n\t\t\tli2 = element(\"li\");\n\t\t\tcreate_component(hotkey2.$$.fragment);\n\t\t\tt2 = space();\n\t\t\tli3 = element(\"li\");\n\t\t\tcreate_component(hotkey3.$$.fragment);\n\t\t\tattr(li0, \"class\", \"svelte-c3lavh\");\n\t\t\tattr(li1, \"class\", \"svelte-c3lavh\");\n\t\t\tattr(li2, \"class\", \"svelte-c3lavh\");\n\t\t\tattr(li3, \"class\", \"svelte-c3lavh\");\n\t\t\tattr(ul, \"id\", \"debug-controls\");\n\t\t\tattr(ul, \"class\", \"controls svelte-c3lavh\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, ul, anchor);\n\t\t\tappend(ul, li0);\n\t\t\tmount_component(hotkey0, li0, null);\n\t\t\tappend(ul, t0);\n\t\t\tappend(ul, li1);\n\t\t\tmount_component(hotkey1, li1, null);\n\t\t\tappend(ul, t1);\n\t\t\tappend(ul, li2);\n\t\t\tmount_component(hotkey2, li2, null);\n\t\t\tappend(ul, t2);\n\t\t\tappend(ul, li3);\n\t\t\tmount_component(hotkey3, li3, null);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst hotkey0_changes = {};\n\t\t\tif (dirty & /*client*/ 1) hotkey0_changes.onPress = /*client*/ ctx[0].reset;\n\t\t\thotkey0.$set(hotkey0_changes);\n\t\t\tconst hotkey3_changes = {};\n\t\t\tif (dirty & /*ToggleVisibility*/ 2) hotkey3_changes.onPress = /*ToggleVisibility*/ ctx[1];\n\t\t\thotkey3.$set(hotkey3_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(hotkey0.$$.fragment, local);\n\t\t\ttransition_in(hotkey1.$$.fragment, local);\n\t\t\ttransition_in(hotkey2.$$.fragment, local);\n\t\t\ttransition_in(hotkey3.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(hotkey0.$$.fragment, local);\n\t\t\ttransition_out(hotkey1.$$.fragment, local);\n\t\t\ttransition_out(hotkey2.$$.fragment, local);\n\t\t\ttransition_out(hotkey3.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(ul);\n\t\t\tdestroy_component(hotkey0);\n\t\t\tdestroy_component(hotkey1);\n\t\t\tdestroy_component(hotkey2);\n\t\t\tdestroy_component(hotkey3);\n\t\t}\n\t};\n}\n\nfunction instance$j($$self, $$props, $$invalidate) {\n\tlet { client } = $$props;\n\tlet { ToggleVisibility } = $$props;\n\n\tfunction Save() {\n\t\t// get state to persist and overwrite deltalog, _undo, and _redo\n\t\tconst state = client.getState();\n\n\t\tconst json = (0,flatted__WEBPACK_IMPORTED_MODULE_0__.stringify)({\n\t\t\t...state,\n\t\t\t_undo: [],\n\t\t\t_redo: [],\n\t\t\tdeltalog: []\n\t\t});\n\n\t\twindow.localStorage.setItem('gamestate', json);\n\t\twindow.localStorage.setItem('initialState', (0,flatted__WEBPACK_IMPORTED_MODULE_0__.stringify)(client.initialState));\n\t}\n\n\tfunction Restore() {\n\t\tconst gamestateJSON = window.localStorage.getItem('gamestate');\n\t\tconst initialStateJSON = window.localStorage.getItem('initialState');\n\n\t\tif (gamestateJSON !== null && initialStateJSON !== null) {\n\t\t\tconst gamestate = (0,flatted__WEBPACK_IMPORTED_MODULE_0__.parse)(gamestateJSON);\n\t\t\tconst initialState = (0,flatted__WEBPACK_IMPORTED_MODULE_0__.parse)(initialStateJSON);\n\t\t\tclient.store.dispatch((0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.s)({ state: gamestate, initialState }));\n\t\t}\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif ('client' in $$props) $$invalidate(0, client = $$props.client);\n\t\tif ('ToggleVisibility' in $$props) $$invalidate(1, ToggleVisibility = $$props.ToggleVisibility);\n\t};\n\n\treturn [client, ToggleVisibility, Save, Restore];\n}\n\nclass Controls extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$j, create_fragment$j, safe_not_equal, { client: 0, ToggleVisibility: 1 }, add_css$c);\n\t}\n}\n\n/* src/client/debug/main/PlayerInfo.svelte generated by Svelte v3.41.0 */\n\nfunction add_css$d(target) {\n\tappend_styles(target, \"svelte-19aan9p\", \".player-box.svelte-19aan9p{display:flex;flex-direction:row}.player.svelte-19aan9p{cursor:pointer;text-align:center;width:30px;height:30px;line-height:30px;background:#eee;border:3px solid #fefefe;box-sizing:content-box;padding:0}.player.current.svelte-19aan9p{background:#555;color:#eee;font-weight:bold}.player.active.svelte-19aan9p{border:3px solid #ff7f50}\");\n}\n\nfunction get_each_context$4(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[7] = list[i];\n\treturn child_ctx;\n}\n\n// (59:2) {#each players as player}\nfunction create_each_block$4(ctx) {\n\tlet button;\n\tlet t0_value = /*player*/ ctx[7] + \"\";\n\tlet t0;\n\tlet t1;\n\tlet button_aria_label_value;\n\tlet mounted;\n\tlet dispose;\n\n\tfunction click_handler() {\n\t\treturn /*click_handler*/ ctx[5](/*player*/ ctx[7]);\n\t}\n\n\treturn {\n\t\tc() {\n\t\t\tbutton = element(\"button\");\n\t\t\tt0 = text(t0_value);\n\t\t\tt1 = space();\n\t\t\tattr(button, \"class\", \"player svelte-19aan9p\");\n\t\t\tattr(button, \"aria-label\", button_aria_label_value = /*playerLabel*/ ctx[4](/*player*/ ctx[7]));\n\t\t\ttoggle_class(button, \"current\", /*player*/ ctx[7] == /*ctx*/ ctx[0].currentPlayer);\n\t\t\ttoggle_class(button, \"active\", /*player*/ ctx[7] == /*playerID*/ ctx[1]);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, button, anchor);\n\t\t\tappend(button, t0);\n\t\t\tappend(button, t1);\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = listen(button, \"click\", click_handler);\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(new_ctx, dirty) {\n\t\t\tctx = new_ctx;\n\t\t\tif (dirty & /*players*/ 4 && t0_value !== (t0_value = /*player*/ ctx[7] + \"\")) set_data(t0, t0_value);\n\n\t\t\tif (dirty & /*players*/ 4 && button_aria_label_value !== (button_aria_label_value = /*playerLabel*/ ctx[4](/*player*/ ctx[7]))) {\n\t\t\t\tattr(button, \"aria-label\", button_aria_label_value);\n\t\t\t}\n\n\t\t\tif (dirty & /*players, ctx*/ 5) {\n\t\t\t\ttoggle_class(button, \"current\", /*player*/ ctx[7] == /*ctx*/ ctx[0].currentPlayer);\n\t\t\t}\n\n\t\t\tif (dirty & /*players, playerID*/ 6) {\n\t\t\t\ttoggle_class(button, \"active\", /*player*/ ctx[7] == /*playerID*/ ctx[1]);\n\t\t\t}\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(button);\n\t\t\tmounted = false;\n\t\t\tdispose();\n\t\t}\n\t};\n}\n\nfunction create_fragment$k(ctx) {\n\tlet div;\n\tlet each_value = /*players*/ ctx[2];\n\tlet each_blocks = [];\n\n\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\teach_blocks[i] = create_each_block$4(get_each_context$4(ctx, each_value, i));\n\t}\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].c();\n\t\t\t}\n\n\t\t\tattr(div, \"class\", \"player-box svelte-19aan9p\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].m(div, null);\n\t\t\t}\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (dirty & /*playerLabel, players, ctx, playerID, OnClick*/ 31) {\n\t\t\t\teach_value = /*players*/ ctx[2];\n\t\t\t\tlet i;\n\n\t\t\t\tfor (i = 0; i < each_value.length; i += 1) {\n\t\t\t\t\tconst child_ctx = get_each_context$4(ctx, each_value, i);\n\n\t\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\t\teach_blocks[i].p(child_ctx, dirty);\n\t\t\t\t\t} else {\n\t\t\t\t\t\teach_blocks[i] = create_each_block$4(child_ctx);\n\t\t\t\t\t\teach_blocks[i].c();\n\t\t\t\t\t\teach_blocks[i].m(div, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (; i < each_blocks.length; i += 1) {\n\t\t\t\t\teach_blocks[i].d(1);\n\t\t\t\t}\n\n\t\t\t\teach_blocks.length = each_value.length;\n\t\t\t}\n\t\t},\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\t\t\tdestroy_each(each_blocks, detaching);\n\t\t}\n\t};\n}\n\nfunction instance$k($$self, $$props, $$invalidate) {\n\tlet { ctx } = $$props;\n\tlet { playerID } = $$props;\n\tconst dispatch = createEventDispatcher();\n\n\tfunction OnClick(player) {\n\t\tif (player == playerID) {\n\t\t\tdispatch(\"change\", { playerID: null });\n\t\t} else {\n\t\t\tdispatch(\"change\", { playerID: player });\n\t\t}\n\t}\n\n\tfunction playerLabel(player) {\n\t\tconst properties = [];\n\t\tif (player == ctx.currentPlayer) properties.push('current');\n\t\tif (player == playerID) properties.push('active');\n\t\tlet label = `Player ${player}`;\n\t\tif (properties.length) label += ` (${properties.join(', ')})`;\n\t\treturn label;\n\t}\n\n\tlet players;\n\tconst click_handler = player => OnClick(player);\n\n\t$$self.$$set = $$props => {\n\t\tif ('ctx' in $$props) $$invalidate(0, ctx = $$props.ctx);\n\t\tif ('playerID' in $$props) $$invalidate(1, playerID = $$props.playerID);\n\t};\n\n\t$$self.$$.update = () => {\n\t\tif ($$self.$$.dirty & /*ctx*/ 1) {\n\t\t\t $$invalidate(2, players = ctx\n\t\t\t? [...Array(ctx.numPlayers).keys()].map(i => i.toString())\n\t\t\t: []);\n\t\t}\n\t};\n\n\treturn [ctx, playerID, players, OnClick, playerLabel, click_handler];\n}\n\nclass PlayerInfo extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$k, create_fragment$k, safe_not_equal, { ctx: 0, playerID: 1 }, add_css$d);\n\t}\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function () {};\n\n      return {\n        s: F,\n        n: function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function (e) {\n          throw e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function () {\n      it = it.call(o);\n    },\n    n: function () {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function (e) {\n      didErr = true;\n      err = e;\n    },\n    f: function () {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\n/*\n * Copyright 2018 The boardgame.io Authors\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\nfunction AssignShortcuts(moveNames, blacklist) {\n  var shortcuts = {};\n  var taken = {};\n\n  var _iterator = _createForOfIteratorHelper(blacklist),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var c = _step.value;\n      taken[c] = true;\n    } // Try assigning the first char of each move as the shortcut.\n\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  var t = taken;\n  var canUseFirstChar = true;\n\n  for (var name in moveNames) {\n    var shortcut = name[0];\n\n    if (t[shortcut]) {\n      canUseFirstChar = false;\n      break;\n    }\n\n    t[shortcut] = true;\n    shortcuts[name] = shortcut;\n  }\n\n  if (canUseFirstChar) {\n    return shortcuts;\n  } // If those aren't unique, use a-z.\n\n\n  t = taken;\n  var next = 97;\n  shortcuts = {};\n\n  for (var _name in moveNames) {\n    var _shortcut = String.fromCharCode(next);\n\n    while (t[_shortcut]) {\n      next++;\n      _shortcut = String.fromCharCode(next);\n    }\n\n    t[_shortcut] = true;\n    shortcuts[_name] = _shortcut;\n  }\n\n  return shortcuts;\n}\n\n/* src/client/debug/main/Main.svelte generated by Svelte v3.41.0 */\n\nfunction add_css$e(target) {\n\tappend_styles(target, \"svelte-146sq5f\", \".tree.svelte-146sq5f{--json-tree-font-family:monospace;--json-tree-font-size:14px;--json-tree-null-color:#757575}.label.svelte-146sq5f{margin-bottom:0;text-transform:none}h3.svelte-146sq5f{text-transform:uppercase}ul.svelte-146sq5f{padding-left:0}li.svelte-146sq5f{list-style:none;margin:0;margin-bottom:5px}\");\n}\n\nfunction get_each_context$5(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[10] = list[i][0];\n\tchild_ctx[11] = list[i][1];\n\treturn child_ctx;\n}\n\n// (78:4) {#each Object.entries(moves) as [name, fn]}\nfunction create_each_block$5(ctx) {\n\tlet li;\n\tlet move;\n\tlet t;\n\tlet current;\n\n\tmove = new Move({\n\t\t\tprops: {\n\t\t\t\tshortcut: /*shortcuts*/ ctx[8][/*name*/ ctx[10]],\n\t\t\t\tfn: /*fn*/ ctx[11],\n\t\t\t\tname: /*name*/ ctx[10]\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tli = element(\"li\");\n\t\t\tcreate_component(move.$$.fragment);\n\t\t\tt = space();\n\t\t\tattr(li, \"class\", \"svelte-146sq5f\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, li, anchor);\n\t\t\tmount_component(move, li, null);\n\t\t\tappend(li, t);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst move_changes = {};\n\t\t\tif (dirty & /*moves*/ 16) move_changes.shortcut = /*shortcuts*/ ctx[8][/*name*/ ctx[10]];\n\t\t\tif (dirty & /*moves*/ 16) move_changes.fn = /*fn*/ ctx[11];\n\t\t\tif (dirty & /*moves*/ 16) move_changes.name = /*name*/ ctx[10];\n\t\t\tmove.$set(move_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(move.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(move.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(li);\n\t\t\tdestroy_component(move);\n\t\t}\n\t};\n}\n\n// (90:2) {#if ctx.activePlayers && events.endStage}\nfunction create_if_block_2$2(ctx) {\n\tlet li;\n\tlet move;\n\tlet current;\n\n\tmove = new Move({\n\t\t\tprops: {\n\t\t\t\tname: \"endStage\",\n\t\t\t\tshortcut: 7,\n\t\t\t\tfn: /*events*/ ctx[5].endStage\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tli = element(\"li\");\n\t\t\tcreate_component(move.$$.fragment);\n\t\t\tattr(li, \"class\", \"svelte-146sq5f\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, li, anchor);\n\t\t\tmount_component(move, li, null);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst move_changes = {};\n\t\t\tif (dirty & /*events*/ 32) move_changes.fn = /*events*/ ctx[5].endStage;\n\t\t\tmove.$set(move_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(move.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(move.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(li);\n\t\t\tdestroy_component(move);\n\t\t}\n\t};\n}\n\n// (95:2) {#if events.endTurn}\nfunction create_if_block_1$2(ctx) {\n\tlet li;\n\tlet move;\n\tlet current;\n\n\tmove = new Move({\n\t\t\tprops: {\n\t\t\t\tname: \"endTurn\",\n\t\t\t\tshortcut: 8,\n\t\t\t\tfn: /*events*/ ctx[5].endTurn\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tli = element(\"li\");\n\t\t\tcreate_component(move.$$.fragment);\n\t\t\tattr(li, \"class\", \"svelte-146sq5f\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, li, anchor);\n\t\t\tmount_component(move, li, null);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst move_changes = {};\n\t\t\tif (dirty & /*events*/ 32) move_changes.fn = /*events*/ ctx[5].endTurn;\n\t\t\tmove.$set(move_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(move.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(move.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(li);\n\t\t\tdestroy_component(move);\n\t\t}\n\t};\n}\n\n// (100:2) {#if ctx.phase && events.endPhase}\nfunction create_if_block$7(ctx) {\n\tlet li;\n\tlet move;\n\tlet current;\n\n\tmove = new Move({\n\t\t\tprops: {\n\t\t\t\tname: \"endPhase\",\n\t\t\t\tshortcut: 9,\n\t\t\t\tfn: /*events*/ ctx[5].endPhase\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tli = element(\"li\");\n\t\t\tcreate_component(move.$$.fragment);\n\t\t\tattr(li, \"class\", \"svelte-146sq5f\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, li, anchor);\n\t\t\tmount_component(move, li, null);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst move_changes = {};\n\t\t\tif (dirty & /*events*/ 32) move_changes.fn = /*events*/ ctx[5].endPhase;\n\t\t\tmove.$set(move_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(move.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(move.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(li);\n\t\t\tdestroy_component(move);\n\t\t}\n\t};\n}\n\nfunction create_fragment$l(ctx) {\n\tlet section0;\n\tlet h30;\n\tlet t1;\n\tlet controls;\n\tlet t2;\n\tlet section1;\n\tlet h31;\n\tlet t4;\n\tlet playerinfo;\n\tlet t5;\n\tlet section2;\n\tlet h32;\n\tlet t7;\n\tlet ul0;\n\tlet t8;\n\tlet section3;\n\tlet h33;\n\tlet t10;\n\tlet ul1;\n\tlet t11;\n\tlet t12;\n\tlet t13;\n\tlet section4;\n\tlet h34;\n\tlet t15;\n\tlet jsontree0;\n\tlet t16;\n\tlet section5;\n\tlet h35;\n\tlet t18;\n\tlet jsontree1;\n\tlet t19;\n\tlet clientswitcher;\n\tlet current;\n\n\tcontrols = new Controls({\n\t\t\tprops: {\n\t\t\t\tclient: /*client*/ ctx[0],\n\t\t\t\tToggleVisibility: /*ToggleVisibility*/ ctx[2]\n\t\t\t}\n\t\t});\n\n\tplayerinfo = new PlayerInfo({\n\t\t\tprops: {\n\t\t\t\tctx: /*ctx*/ ctx[6],\n\t\t\t\tplayerID: /*playerID*/ ctx[3]\n\t\t\t}\n\t\t});\n\n\tplayerinfo.$on(\"change\", /*change_handler*/ ctx[9]);\n\tlet each_value = Object.entries(/*moves*/ ctx[4]);\n\tlet each_blocks = [];\n\n\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\teach_blocks[i] = create_each_block$5(get_each_context$5(ctx, each_value, i));\n\t}\n\n\tconst out = i => transition_out(each_blocks[i], 1, 1, () => {\n\t\teach_blocks[i] = null;\n\t});\n\n\tlet if_block0 = /*ctx*/ ctx[6].activePlayers && /*events*/ ctx[5].endStage && create_if_block_2$2(ctx);\n\tlet if_block1 = /*events*/ ctx[5].endTurn && create_if_block_1$2(ctx);\n\tlet if_block2 = /*ctx*/ ctx[6].phase && /*events*/ ctx[5].endPhase && create_if_block$7(ctx);\n\tjsontree0 = new Root({ props: { value: /*G*/ ctx[7] } });\n\n\tjsontree1 = new Root({\n\t\t\tprops: { value: SanitizeCtx(/*ctx*/ ctx[6]) }\n\t\t});\n\n\tclientswitcher = new ClientSwitcher({\n\t\t\tprops: { clientManager: /*clientManager*/ ctx[1] }\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tsection0 = element(\"section\");\n\t\t\th30 = element(\"h3\");\n\t\t\th30.textContent = \"Controls\";\n\t\t\tt1 = space();\n\t\t\tcreate_component(controls.$$.fragment);\n\t\t\tt2 = space();\n\t\t\tsection1 = element(\"section\");\n\t\t\th31 = element(\"h3\");\n\t\t\th31.textContent = \"Players\";\n\t\t\tt4 = space();\n\t\t\tcreate_component(playerinfo.$$.fragment);\n\t\t\tt5 = space();\n\t\t\tsection2 = element(\"section\");\n\t\t\th32 = element(\"h3\");\n\t\t\th32.textContent = \"Moves\";\n\t\t\tt7 = space();\n\t\t\tul0 = element(\"ul\");\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].c();\n\t\t\t}\n\n\t\t\tt8 = space();\n\t\t\tsection3 = element(\"section\");\n\t\t\th33 = element(\"h3\");\n\t\t\th33.textContent = \"Events\";\n\t\t\tt10 = space();\n\t\t\tul1 = element(\"ul\");\n\t\t\tif (if_block0) if_block0.c();\n\t\t\tt11 = space();\n\t\t\tif (if_block1) if_block1.c();\n\t\t\tt12 = space();\n\t\t\tif (if_block2) if_block2.c();\n\t\t\tt13 = space();\n\t\t\tsection4 = element(\"section\");\n\t\t\th34 = element(\"h3\");\n\t\t\th34.textContent = \"G\";\n\t\t\tt15 = space();\n\t\t\tcreate_component(jsontree0.$$.fragment);\n\t\t\tt16 = space();\n\t\t\tsection5 = element(\"section\");\n\t\t\th35 = element(\"h3\");\n\t\t\th35.textContent = \"ctx\";\n\t\t\tt18 = space();\n\t\t\tcreate_component(jsontree1.$$.fragment);\n\t\t\tt19 = space();\n\t\t\tcreate_component(clientswitcher.$$.fragment);\n\t\t\tattr(h30, \"class\", \"svelte-146sq5f\");\n\t\t\tattr(h31, \"class\", \"svelte-146sq5f\");\n\t\t\tattr(h32, \"class\", \"svelte-146sq5f\");\n\t\t\tattr(ul0, \"class\", \"svelte-146sq5f\");\n\t\t\tattr(h33, \"class\", \"svelte-146sq5f\");\n\t\t\tattr(ul1, \"class\", \"svelte-146sq5f\");\n\t\t\tattr(h34, \"class\", \"label svelte-146sq5f\");\n\t\t\tattr(section4, \"class\", \"tree svelte-146sq5f\");\n\t\t\tattr(h35, \"class\", \"label svelte-146sq5f\");\n\t\t\tattr(section5, \"class\", \"tree svelte-146sq5f\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, section0, anchor);\n\t\t\tappend(section0, h30);\n\t\t\tappend(section0, t1);\n\t\t\tmount_component(controls, section0, null);\n\t\t\tinsert(target, t2, anchor);\n\t\t\tinsert(target, section1, anchor);\n\t\t\tappend(section1, h31);\n\t\t\tappend(section1, t4);\n\t\t\tmount_component(playerinfo, section1, null);\n\t\t\tinsert(target, t5, anchor);\n\t\t\tinsert(target, section2, anchor);\n\t\t\tappend(section2, h32);\n\t\t\tappend(section2, t7);\n\t\t\tappend(section2, ul0);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].m(ul0, null);\n\t\t\t}\n\n\t\t\tinsert(target, t8, anchor);\n\t\t\tinsert(target, section3, anchor);\n\t\t\tappend(section3, h33);\n\t\t\tappend(section3, t10);\n\t\t\tappend(section3, ul1);\n\t\t\tif (if_block0) if_block0.m(ul1, null);\n\t\t\tappend(ul1, t11);\n\t\t\tif (if_block1) if_block1.m(ul1, null);\n\t\t\tappend(ul1, t12);\n\t\t\tif (if_block2) if_block2.m(ul1, null);\n\t\t\tinsert(target, t13, anchor);\n\t\t\tinsert(target, section4, anchor);\n\t\t\tappend(section4, h34);\n\t\t\tappend(section4, t15);\n\t\t\tmount_component(jsontree0, section4, null);\n\t\t\tinsert(target, t16, anchor);\n\t\t\tinsert(target, section5, anchor);\n\t\t\tappend(section5, h35);\n\t\t\tappend(section5, t18);\n\t\t\tmount_component(jsontree1, section5, null);\n\t\t\tinsert(target, t19, anchor);\n\t\t\tmount_component(clientswitcher, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst controls_changes = {};\n\t\t\tif (dirty & /*client*/ 1) controls_changes.client = /*client*/ ctx[0];\n\t\t\tif (dirty & /*ToggleVisibility*/ 4) controls_changes.ToggleVisibility = /*ToggleVisibility*/ ctx[2];\n\t\t\tcontrols.$set(controls_changes);\n\t\t\tconst playerinfo_changes = {};\n\t\t\tif (dirty & /*ctx*/ 64) playerinfo_changes.ctx = /*ctx*/ ctx[6];\n\t\t\tif (dirty & /*playerID*/ 8) playerinfo_changes.playerID = /*playerID*/ ctx[3];\n\t\t\tplayerinfo.$set(playerinfo_changes);\n\n\t\t\tif (dirty & /*shortcuts, Object, moves*/ 272) {\n\t\t\t\teach_value = Object.entries(/*moves*/ ctx[4]);\n\t\t\t\tlet i;\n\n\t\t\t\tfor (i = 0; i < each_value.length; i += 1) {\n\t\t\t\t\tconst child_ctx = get_each_context$5(ctx, each_value, i);\n\n\t\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\t\teach_blocks[i].p(child_ctx, dirty);\n\t\t\t\t\t\ttransition_in(each_blocks[i], 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\teach_blocks[i] = create_each_block$5(child_ctx);\n\t\t\t\t\t\teach_blocks[i].c();\n\t\t\t\t\t\ttransition_in(each_blocks[i], 1);\n\t\t\t\t\t\teach_blocks[i].m(ul0, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tgroup_outros();\n\n\t\t\t\tfor (i = each_value.length; i < each_blocks.length; i += 1) {\n\t\t\t\t\tout(i);\n\t\t\t\t}\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\n\t\t\tif (/*ctx*/ ctx[6].activePlayers && /*events*/ ctx[5].endStage) {\n\t\t\t\tif (if_block0) {\n\t\t\t\t\tif_block0.p(ctx, dirty);\n\n\t\t\t\t\tif (dirty & /*ctx, events*/ 96) {\n\t\t\t\t\t\ttransition_in(if_block0, 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif_block0 = create_if_block_2$2(ctx);\n\t\t\t\t\tif_block0.c();\n\t\t\t\t\ttransition_in(if_block0, 1);\n\t\t\t\t\tif_block0.m(ul1, t11);\n\t\t\t\t}\n\t\t\t} else if (if_block0) {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_block0, 1, 1, () => {\n\t\t\t\t\tif_block0 = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\n\t\t\tif (/*events*/ ctx[5].endTurn) {\n\t\t\t\tif (if_block1) {\n\t\t\t\t\tif_block1.p(ctx, dirty);\n\n\t\t\t\t\tif (dirty & /*events*/ 32) {\n\t\t\t\t\t\ttransition_in(if_block1, 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif_block1 = create_if_block_1$2(ctx);\n\t\t\t\t\tif_block1.c();\n\t\t\t\t\ttransition_in(if_block1, 1);\n\t\t\t\t\tif_block1.m(ul1, t12);\n\t\t\t\t}\n\t\t\t} else if (if_block1) {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_block1, 1, 1, () => {\n\t\t\t\t\tif_block1 = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\n\t\t\tif (/*ctx*/ ctx[6].phase && /*events*/ ctx[5].endPhase) {\n\t\t\t\tif (if_block2) {\n\t\t\t\t\tif_block2.p(ctx, dirty);\n\n\t\t\t\t\tif (dirty & /*ctx, events*/ 96) {\n\t\t\t\t\t\ttransition_in(if_block2, 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif_block2 = create_if_block$7(ctx);\n\t\t\t\t\tif_block2.c();\n\t\t\t\t\ttransition_in(if_block2, 1);\n\t\t\t\t\tif_block2.m(ul1, null);\n\t\t\t\t}\n\t\t\t} else if (if_block2) {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_block2, 1, 1, () => {\n\t\t\t\t\tif_block2 = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\n\t\t\tconst jsontree0_changes = {};\n\t\t\tif (dirty & /*G*/ 128) jsontree0_changes.value = /*G*/ ctx[7];\n\t\t\tjsontree0.$set(jsontree0_changes);\n\t\t\tconst jsontree1_changes = {};\n\t\t\tif (dirty & /*ctx*/ 64) jsontree1_changes.value = SanitizeCtx(/*ctx*/ ctx[6]);\n\t\t\tjsontree1.$set(jsontree1_changes);\n\t\t\tconst clientswitcher_changes = {};\n\t\t\tif (dirty & /*clientManager*/ 2) clientswitcher_changes.clientManager = /*clientManager*/ ctx[1];\n\t\t\tclientswitcher.$set(clientswitcher_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(controls.$$.fragment, local);\n\t\t\ttransition_in(playerinfo.$$.fragment, local);\n\n\t\t\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\t\t\ttransition_in(each_blocks[i]);\n\t\t\t}\n\n\t\t\ttransition_in(if_block0);\n\t\t\ttransition_in(if_block1);\n\t\t\ttransition_in(if_block2);\n\t\t\ttransition_in(jsontree0.$$.fragment, local);\n\t\t\ttransition_in(jsontree1.$$.fragment, local);\n\t\t\ttransition_in(clientswitcher.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(controls.$$.fragment, local);\n\t\t\ttransition_out(playerinfo.$$.fragment, local);\n\t\t\teach_blocks = each_blocks.filter(Boolean);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\ttransition_out(each_blocks[i]);\n\t\t\t}\n\n\t\t\ttransition_out(if_block0);\n\t\t\ttransition_out(if_block1);\n\t\t\ttransition_out(if_block2);\n\t\t\ttransition_out(jsontree0.$$.fragment, local);\n\t\t\ttransition_out(jsontree1.$$.fragment, local);\n\t\t\ttransition_out(clientswitcher.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(section0);\n\t\t\tdestroy_component(controls);\n\t\t\tif (detaching) detach(t2);\n\t\t\tif (detaching) detach(section1);\n\t\t\tdestroy_component(playerinfo);\n\t\t\tif (detaching) detach(t5);\n\t\t\tif (detaching) detach(section2);\n\t\t\tdestroy_each(each_blocks, detaching);\n\t\t\tif (detaching) detach(t8);\n\t\t\tif (detaching) detach(section3);\n\t\t\tif (if_block0) if_block0.d();\n\t\t\tif (if_block1) if_block1.d();\n\t\t\tif (if_block2) if_block2.d();\n\t\t\tif (detaching) detach(t13);\n\t\t\tif (detaching) detach(section4);\n\t\t\tdestroy_component(jsontree0);\n\t\t\tif (detaching) detach(t16);\n\t\t\tif (detaching) detach(section5);\n\t\t\tdestroy_component(jsontree1);\n\t\t\tif (detaching) detach(t19);\n\t\t\tdestroy_component(clientswitcher, detaching);\n\t\t}\n\t};\n}\n\nfunction SanitizeCtx(ctx) {\n\tlet r = {};\n\n\tfor (const key in ctx) {\n\t\tif (!key.startsWith('_')) {\n\t\t\tr[key] = ctx[key];\n\t\t}\n\t}\n\n\treturn r;\n}\n\nfunction instance$l($$self, $$props, $$invalidate) {\n\tlet { client } = $$props;\n\tlet { clientManager } = $$props;\n\tlet { ToggleVisibility } = $$props;\n\tconst shortcuts = AssignShortcuts(client.moves, 'mlia');\n\tlet { playerID, moves, events } = client;\n\tlet ctx = {};\n\tlet G = {};\n\n\tclient.subscribe(state => {\n\t\tif (state) $$invalidate(7, { G, ctx } = state, G, $$invalidate(6, ctx));\n\t\t$$invalidate(3, { playerID, moves, events } = client, playerID, $$invalidate(4, moves), $$invalidate(5, events));\n\t});\n\n\tconst change_handler = e => clientManager.switchPlayerID(e.detail.playerID);\n\n\t$$self.$$set = $$props => {\n\t\tif ('client' in $$props) $$invalidate(0, client = $$props.client);\n\t\tif ('clientManager' in $$props) $$invalidate(1, clientManager = $$props.clientManager);\n\t\tif ('ToggleVisibility' in $$props) $$invalidate(2, ToggleVisibility = $$props.ToggleVisibility);\n\t};\n\n\treturn [\n\t\tclient,\n\t\tclientManager,\n\t\tToggleVisibility,\n\t\tplayerID,\n\t\tmoves,\n\t\tevents,\n\t\tctx,\n\t\tG,\n\t\tshortcuts,\n\t\tchange_handler\n\t];\n}\n\nclass Main extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(\n\t\t\tthis,\n\t\t\toptions,\n\t\t\tinstance$l,\n\t\t\tcreate_fragment$l,\n\t\t\tsafe_not_equal,\n\t\t\t{\n\t\t\t\tclient: 0,\n\t\t\t\tclientManager: 1,\n\t\t\t\tToggleVisibility: 2\n\t\t\t},\n\t\t\tadd_css$e\n\t\t);\n\t}\n}\n\n/* src/client/debug/info/Item.svelte generated by Svelte v3.41.0 */\n\nfunction add_css$f(target) {\n\tappend_styles(target, \"svelte-13qih23\", \".item.svelte-13qih23.svelte-13qih23{padding:10px}.item.svelte-13qih23.svelte-13qih23:not(:first-child){border-top:1px dashed #aaa}.item.svelte-13qih23 div.svelte-13qih23{float:right;text-align:right}\");\n}\n\nfunction create_fragment$m(ctx) {\n\tlet div1;\n\tlet strong;\n\tlet t0;\n\tlet t1;\n\tlet div0;\n\tlet t2_value = JSON.stringify(/*value*/ ctx[1]) + \"\";\n\tlet t2;\n\n\treturn {\n\t\tc() {\n\t\t\tdiv1 = element(\"div\");\n\t\t\tstrong = element(\"strong\");\n\t\t\tt0 = text(/*name*/ ctx[0]);\n\t\t\tt1 = space();\n\t\t\tdiv0 = element(\"div\");\n\t\t\tt2 = text(t2_value);\n\t\t\tattr(div0, \"class\", \"svelte-13qih23\");\n\t\t\tattr(div1, \"class\", \"item svelte-13qih23\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div1, anchor);\n\t\t\tappend(div1, strong);\n\t\t\tappend(strong, t0);\n\t\t\tappend(div1, t1);\n\t\t\tappend(div1, div0);\n\t\t\tappend(div0, t2);\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (dirty & /*name*/ 1) set_data(t0, /*name*/ ctx[0]);\n\t\t\tif (dirty & /*value*/ 2 && t2_value !== (t2_value = JSON.stringify(/*value*/ ctx[1]) + \"\")) set_data(t2, t2_value);\n\t\t},\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div1);\n\t\t}\n\t};\n}\n\nfunction instance$m($$self, $$props, $$invalidate) {\n\tlet { name } = $$props;\n\tlet { value } = $$props;\n\n\t$$self.$$set = $$props => {\n\t\tif ('name' in $$props) $$invalidate(0, name = $$props.name);\n\t\tif ('value' in $$props) $$invalidate(1, value = $$props.value);\n\t};\n\n\treturn [name, value];\n}\n\nclass Item extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$m, create_fragment$m, safe_not_equal, { name: 0, value: 1 }, add_css$f);\n\t}\n}\n\n/* src/client/debug/info/Info.svelte generated by Svelte v3.41.0 */\n\nfunction add_css$g(target) {\n\tappend_styles(target, \"svelte-1yzq5o8\", \".gameinfo.svelte-1yzq5o8{padding:10px}\");\n}\n\n// (19:2) {#if client.multiplayer}\nfunction create_if_block$8(ctx) {\n\tlet item;\n\tlet current;\n\n\titem = new Item({\n\t\t\tprops: {\n\t\t\t\tname: \"isConnected\",\n\t\t\t\tvalue: /*$client*/ ctx[1].isConnected\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(item.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(item, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst item_changes = {};\n\t\t\tif (dirty & /*$client*/ 2) item_changes.value = /*$client*/ ctx[1].isConnected;\n\t\t\titem.$set(item_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(item.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(item.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(item, detaching);\n\t\t}\n\t};\n}\n\nfunction create_fragment$n(ctx) {\n\tlet section;\n\tlet item0;\n\tlet t0;\n\tlet item1;\n\tlet t1;\n\tlet item2;\n\tlet t2;\n\tlet current;\n\n\titem0 = new Item({\n\t\t\tprops: {\n\t\t\t\tname: \"matchID\",\n\t\t\t\tvalue: /*client*/ ctx[0].matchID\n\t\t\t}\n\t\t});\n\n\titem1 = new Item({\n\t\t\tprops: {\n\t\t\t\tname: \"playerID\",\n\t\t\t\tvalue: /*client*/ ctx[0].playerID\n\t\t\t}\n\t\t});\n\n\titem2 = new Item({\n\t\t\tprops: {\n\t\t\t\tname: \"isActive\",\n\t\t\t\tvalue: /*$client*/ ctx[1].isActive\n\t\t\t}\n\t\t});\n\n\tlet if_block = /*client*/ ctx[0].multiplayer && create_if_block$8(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tsection = element(\"section\");\n\t\t\tcreate_component(item0.$$.fragment);\n\t\t\tt0 = space();\n\t\t\tcreate_component(item1.$$.fragment);\n\t\t\tt1 = space();\n\t\t\tcreate_component(item2.$$.fragment);\n\t\t\tt2 = space();\n\t\t\tif (if_block) if_block.c();\n\t\t\tattr(section, \"class\", \"gameinfo svelte-1yzq5o8\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, section, anchor);\n\t\t\tmount_component(item0, section, null);\n\t\t\tappend(section, t0);\n\t\t\tmount_component(item1, section, null);\n\t\t\tappend(section, t1);\n\t\t\tmount_component(item2, section, null);\n\t\t\tappend(section, t2);\n\t\t\tif (if_block) if_block.m(section, null);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst item0_changes = {};\n\t\t\tif (dirty & /*client*/ 1) item0_changes.value = /*client*/ ctx[0].matchID;\n\t\t\titem0.$set(item0_changes);\n\t\t\tconst item1_changes = {};\n\t\t\tif (dirty & /*client*/ 1) item1_changes.value = /*client*/ ctx[0].playerID;\n\t\t\titem1.$set(item1_changes);\n\t\t\tconst item2_changes = {};\n\t\t\tif (dirty & /*$client*/ 2) item2_changes.value = /*$client*/ ctx[1].isActive;\n\t\t\titem2.$set(item2_changes);\n\n\t\t\tif (/*client*/ ctx[0].multiplayer) {\n\t\t\t\tif (if_block) {\n\t\t\t\t\tif_block.p(ctx, dirty);\n\n\t\t\t\t\tif (dirty & /*client*/ 1) {\n\t\t\t\t\t\ttransition_in(if_block, 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif_block = create_if_block$8(ctx);\n\t\t\t\t\tif_block.c();\n\t\t\t\t\ttransition_in(if_block, 1);\n\t\t\t\t\tif_block.m(section, null);\n\t\t\t\t}\n\t\t\t} else if (if_block) {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_block, 1, 1, () => {\n\t\t\t\t\tif_block = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(item0.$$.fragment, local);\n\t\t\ttransition_in(item1.$$.fragment, local);\n\t\t\ttransition_in(item2.$$.fragment, local);\n\t\t\ttransition_in(if_block);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(item0.$$.fragment, local);\n\t\t\ttransition_out(item1.$$.fragment, local);\n\t\t\ttransition_out(item2.$$.fragment, local);\n\t\t\ttransition_out(if_block);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(section);\n\t\t\tdestroy_component(item0);\n\t\t\tdestroy_component(item1);\n\t\t\tdestroy_component(item2);\n\t\t\tif (if_block) if_block.d();\n\t\t}\n\t};\n}\n\nfunction instance$n($$self, $$props, $$invalidate) {\n\tlet $client,\n\t\t$$unsubscribe_client = noop,\n\t\t$$subscribe_client = () => ($$unsubscribe_client(), $$unsubscribe_client = subscribe(client, $$value => $$invalidate(1, $client = $$value)), client);\n\n\t$$self.$$.on_destroy.push(() => $$unsubscribe_client());\n\tlet { client } = $$props;\n\t$$subscribe_client();\n\tlet { clientManager } = $$props;\n\tlet { ToggleVisibility } = $$props;\n\n\t$$self.$$set = $$props => {\n\t\tif ('client' in $$props) $$subscribe_client($$invalidate(0, client = $$props.client));\n\t\tif ('clientManager' in $$props) $$invalidate(2, clientManager = $$props.clientManager);\n\t\tif ('ToggleVisibility' in $$props) $$invalidate(3, ToggleVisibility = $$props.ToggleVisibility);\n\t};\n\n\treturn [client, $client, clientManager, ToggleVisibility];\n}\n\nclass Info extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(\n\t\t\tthis,\n\t\t\toptions,\n\t\t\tinstance$n,\n\t\t\tcreate_fragment$n,\n\t\t\tsafe_not_equal,\n\t\t\t{\n\t\t\t\tclient: 0,\n\t\t\t\tclientManager: 2,\n\t\t\t\tToggleVisibility: 3\n\t\t\t},\n\t\t\tadd_css$g\n\t\t);\n\t}\n}\n\n/* src/client/debug/log/TurnMarker.svelte generated by Svelte v3.41.0 */\n\nfunction add_css$h(target) {\n\tappend_styles(target, \"svelte-6eza86\", \".turn-marker.svelte-6eza86{display:flex;justify-content:center;align-items:center;grid-column:1;background:#555;color:#eee;text-align:center;font-weight:bold;border:1px solid #888}\");\n}\n\nfunction create_fragment$o(ctx) {\n\tlet div;\n\tlet t;\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tt = text(/*turn*/ ctx[0]);\n\t\t\tattr(div, \"class\", \"turn-marker svelte-6eza86\");\n\t\t\tattr(div, \"style\", /*style*/ ctx[1]);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tappend(div, t);\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (dirty & /*turn*/ 1) set_data(t, /*turn*/ ctx[0]);\n\t\t},\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\t\t}\n\t};\n}\n\nfunction instance$o($$self, $$props, $$invalidate) {\n\tlet { turn } = $$props;\n\tlet { numEvents } = $$props;\n\tconst style = `grid-row: span ${numEvents}`;\n\n\t$$self.$$set = $$props => {\n\t\tif ('turn' in $$props) $$invalidate(0, turn = $$props.turn);\n\t\tif ('numEvents' in $$props) $$invalidate(2, numEvents = $$props.numEvents);\n\t};\n\n\treturn [turn, style, numEvents];\n}\n\nclass TurnMarker extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$o, create_fragment$o, safe_not_equal, { turn: 0, numEvents: 2 }, add_css$h);\n\t}\n}\n\n/* src/client/debug/log/PhaseMarker.svelte generated by Svelte v3.41.0 */\n\nfunction add_css$i(target) {\n\tappend_styles(target, \"svelte-1t4xap\", \".phase-marker.svelte-1t4xap{grid-column:3;background:#555;border:1px solid #888;color:#eee;text-align:center;font-weight:bold;padding-top:10px;padding-bottom:10px;text-orientation:sideways;writing-mode:vertical-rl;line-height:30px;width:100%}\");\n}\n\nfunction create_fragment$p(ctx) {\n\tlet div;\n\tlet t_value = (/*phase*/ ctx[0] || '') + \"\";\n\tlet t;\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tt = text(t_value);\n\t\t\tattr(div, \"class\", \"phase-marker svelte-1t4xap\");\n\t\t\tattr(div, \"style\", /*style*/ ctx[1]);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tappend(div, t);\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (dirty & /*phase*/ 1 && t_value !== (t_value = (/*phase*/ ctx[0] || '') + \"\")) set_data(t, t_value);\n\t\t},\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\t\t}\n\t};\n}\n\nfunction instance$p($$self, $$props, $$invalidate) {\n\tlet { phase } = $$props;\n\tlet { numEvents } = $$props;\n\tconst style = `grid-row: span ${numEvents}`;\n\n\t$$self.$$set = $$props => {\n\t\tif ('phase' in $$props) $$invalidate(0, phase = $$props.phase);\n\t\tif ('numEvents' in $$props) $$invalidate(2, numEvents = $$props.numEvents);\n\t};\n\n\treturn [phase, style, numEvents];\n}\n\nclass PhaseMarker extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$p, create_fragment$p, safe_not_equal, { phase: 0, numEvents: 2 }, add_css$i);\n\t}\n}\n\n/* src/client/debug/log/LogMetadata.svelte generated by Svelte v3.41.0 */\n\nfunction create_fragment$q(ctx) {\n\tlet div;\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tdiv.textContent = `${/*renderedMetadata*/ ctx[0]}`;\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t},\n\t\tp: noop,\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\t\t}\n\t};\n}\n\nfunction instance$q($$self, $$props, $$invalidate) {\n\tlet { metadata } = $$props;\n\n\tconst renderedMetadata = metadata !== undefined\n\t? JSON.stringify(metadata, null, 4)\n\t: '';\n\n\t$$self.$$set = $$props => {\n\t\tif ('metadata' in $$props) $$invalidate(1, metadata = $$props.metadata);\n\t};\n\n\treturn [renderedMetadata, metadata];\n}\n\nclass LogMetadata extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$q, create_fragment$q, safe_not_equal, { metadata: 1 });\n\t}\n}\n\n/* src/client/debug/log/LogEvent.svelte generated by Svelte v3.41.0 */\n\nfunction add_css$j(target) {\n\tappend_styles(target, \"svelte-vajd9z\", \".log-event.svelte-vajd9z{grid-column:2;cursor:pointer;overflow:hidden;display:flex;flex-direction:column;justify-content:center;background:#fff;border:1px dotted #ccc;border-left:5px solid #ccc;padding:5px;text-align:center;color:#666;font-size:14px;min-height:25px;line-height:25px}.log-event.svelte-vajd9z:hover,.log-event.svelte-vajd9z:focus{border-style:solid;background:#eee}.log-event.pinned.svelte-vajd9z{border-style:solid;background:#eee;opacity:1}.args.svelte-vajd9z{text-align:left;white-space:pre-wrap}.player0.svelte-vajd9z{border-left-color:#ff851b}.player1.svelte-vajd9z{border-left-color:#7fdbff}.player2.svelte-vajd9z{border-left-color:#0074d9}.player3.svelte-vajd9z{border-left-color:#39cccc}.player4.svelte-vajd9z{border-left-color:#3d9970}.player5.svelte-vajd9z{border-left-color:#2ecc40}.player6.svelte-vajd9z{border-left-color:#01ff70}.player7.svelte-vajd9z{border-left-color:#ffdc00}.player8.svelte-vajd9z{border-left-color:#001f3f}.player9.svelte-vajd9z{border-left-color:#ff4136}.player10.svelte-vajd9z{border-left-color:#85144b}.player11.svelte-vajd9z{border-left-color:#f012be}.player12.svelte-vajd9z{border-left-color:#b10dc9}.player13.svelte-vajd9z{border-left-color:#111111}.player14.svelte-vajd9z{border-left-color:#aaaaaa}.player15.svelte-vajd9z{border-left-color:#dddddd}\");\n}\n\n// (146:2) {:else}\nfunction create_else_block$1(ctx) {\n\tlet logmetadata;\n\tlet current;\n\tlogmetadata = new LogMetadata({ props: { metadata: /*metadata*/ ctx[2] } });\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(logmetadata.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(logmetadata, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst logmetadata_changes = {};\n\t\t\tif (dirty & /*metadata*/ 4) logmetadata_changes.metadata = /*metadata*/ ctx[2];\n\t\t\tlogmetadata.$set(logmetadata_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(logmetadata.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(logmetadata.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(logmetadata, detaching);\n\t\t}\n\t};\n}\n\n// (144:2) {#if metadataComponent}\nfunction create_if_block$9(ctx) {\n\tlet switch_instance;\n\tlet switch_instance_anchor;\n\tlet current;\n\tvar switch_value = /*metadataComponent*/ ctx[3];\n\n\tfunction switch_props(ctx) {\n\t\treturn { props: { metadata: /*metadata*/ ctx[2] } };\n\t}\n\n\tif (switch_value) {\n\t\tswitch_instance = new switch_value(switch_props(ctx));\n\t}\n\n\treturn {\n\t\tc() {\n\t\t\tif (switch_instance) create_component(switch_instance.$$.fragment);\n\t\t\tswitch_instance_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tif (switch_instance) {\n\t\t\t\tmount_component(switch_instance, target, anchor);\n\t\t\t}\n\n\t\t\tinsert(target, switch_instance_anchor, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst switch_instance_changes = {};\n\t\t\tif (dirty & /*metadata*/ 4) switch_instance_changes.metadata = /*metadata*/ ctx[2];\n\n\t\t\tif (switch_value !== (switch_value = /*metadataComponent*/ ctx[3])) {\n\t\t\t\tif (switch_instance) {\n\t\t\t\t\tgroup_outros();\n\t\t\t\t\tconst old_component = switch_instance;\n\n\t\t\t\t\ttransition_out(old_component.$$.fragment, 1, 0, () => {\n\t\t\t\t\t\tdestroy_component(old_component, 1);\n\t\t\t\t\t});\n\n\t\t\t\t\tcheck_outros();\n\t\t\t\t}\n\n\t\t\t\tif (switch_value) {\n\t\t\t\t\tswitch_instance = new switch_value(switch_props(ctx));\n\t\t\t\t\tcreate_component(switch_instance.$$.fragment);\n\t\t\t\t\ttransition_in(switch_instance.$$.fragment, 1);\n\t\t\t\t\tmount_component(switch_instance, switch_instance_anchor.parentNode, switch_instance_anchor);\n\t\t\t\t} else {\n\t\t\t\t\tswitch_instance = null;\n\t\t\t\t}\n\t\t\t} else if (switch_value) {\n\t\t\t\tswitch_instance.$set(switch_instance_changes);\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\tif (switch_instance) transition_in(switch_instance.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\tif (switch_instance) transition_out(switch_instance.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(switch_instance_anchor);\n\t\t\tif (switch_instance) destroy_component(switch_instance, detaching);\n\t\t}\n\t};\n}\n\nfunction create_fragment$r(ctx) {\n\tlet button;\n\tlet div;\n\tlet t0;\n\tlet t1;\n\tlet t2;\n\tlet t3;\n\tlet t4;\n\tlet current_block_type_index;\n\tlet if_block;\n\tlet button_class_value;\n\tlet current;\n\tlet mounted;\n\tlet dispose;\n\tconst if_block_creators = [create_if_block$9, create_else_block$1];\n\tconst if_blocks = [];\n\n\tfunction select_block_type(ctx, dirty) {\n\t\tif (/*metadataComponent*/ ctx[3]) return 0;\n\t\treturn 1;\n\t}\n\n\tcurrent_block_type_index = select_block_type(ctx);\n\tif_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tbutton = element(\"button\");\n\t\t\tdiv = element(\"div\");\n\t\t\tt0 = text(/*actionType*/ ctx[4]);\n\t\t\tt1 = text(\"(\");\n\t\t\tt2 = text(/*renderedArgs*/ ctx[6]);\n\t\t\tt3 = text(\")\");\n\t\t\tt4 = space();\n\t\t\tif_block.c();\n\t\t\tattr(div, \"class\", \"args svelte-vajd9z\");\n\t\t\tattr(button, \"class\", button_class_value = \"log-event player\" + /*playerID*/ ctx[7] + \" svelte-vajd9z\");\n\t\t\ttoggle_class(button, \"pinned\", /*pinned*/ ctx[1]);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, button, anchor);\n\t\t\tappend(button, div);\n\t\t\tappend(div, t0);\n\t\t\tappend(div, t1);\n\t\t\tappend(div, t2);\n\t\t\tappend(div, t3);\n\t\t\tappend(button, t4);\n\t\t\tif_blocks[current_block_type_index].m(button, null);\n\t\t\tcurrent = true;\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = [\n\t\t\t\t\tlisten(button, \"click\", /*click_handler*/ ctx[9]),\n\t\t\t\t\tlisten(button, \"mouseenter\", /*mouseenter_handler*/ ctx[10]),\n\t\t\t\t\tlisten(button, \"focus\", /*focus_handler*/ ctx[11]),\n\t\t\t\t\tlisten(button, \"mouseleave\", /*mouseleave_handler*/ ctx[12]),\n\t\t\t\t\tlisten(button, \"blur\", /*blur_handler*/ ctx[13])\n\t\t\t\t];\n\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (!current || dirty & /*actionType*/ 16) set_data(t0, /*actionType*/ ctx[4]);\n\t\t\tlet previous_block_index = current_block_type_index;\n\t\t\tcurrent_block_type_index = select_block_type(ctx);\n\n\t\t\tif (current_block_type_index === previous_block_index) {\n\t\t\t\tif_blocks[current_block_type_index].p(ctx, dirty);\n\t\t\t} else {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_blocks[previous_block_index], 1, 1, () => {\n\t\t\t\t\tif_blocks[previous_block_index] = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t\tif_block = if_blocks[current_block_type_index];\n\n\t\t\t\tif (!if_block) {\n\t\t\t\t\tif_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\t\t\t\t\tif_block.c();\n\t\t\t\t} else {\n\t\t\t\t\tif_block.p(ctx, dirty);\n\t\t\t\t}\n\n\t\t\t\ttransition_in(if_block, 1);\n\t\t\t\tif_block.m(button, null);\n\t\t\t}\n\n\t\t\tif (dirty & /*pinned*/ 2) {\n\t\t\t\ttoggle_class(button, \"pinned\", /*pinned*/ ctx[1]);\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(button);\n\t\t\tif_blocks[current_block_type_index].d();\n\t\t\tmounted = false;\n\t\t\trun_all(dispose);\n\t\t}\n\t};\n}\n\nfunction instance$r($$self, $$props, $$invalidate) {\n\tlet { logIndex } = $$props;\n\tlet { action } = $$props;\n\tlet { pinned } = $$props;\n\tlet { metadata } = $$props;\n\tlet { metadataComponent } = $$props;\n\tconst dispatch = createEventDispatcher();\n\tconst args = action.payload.args;\n\n\tconst renderedArgs = Array.isArray(args)\n\t? args.map(arg => JSON.stringify(arg, null, 2)).join(',')\n\t: JSON.stringify(args, null, 2) || '';\n\n\tconst playerID = action.payload.playerID;\n\tlet actionType;\n\n\tswitch (action.type) {\n\t\tcase 'UNDO':\n\t\t\tactionType = 'undo';\n\t\t\tbreak;\n\t\tcase 'REDO':\n\t\t\tactionType = 'redo';\n\t\tcase 'GAME_EVENT':\n\t\tcase 'MAKE_MOVE':\n\t\tdefault:\n\t\t\tactionType = action.payload.type;\n\t\t\tbreak;\n\t}\n\n\tconst click_handler = () => dispatch('click', { logIndex });\n\tconst mouseenter_handler = () => dispatch('mouseenter', { logIndex });\n\tconst focus_handler = () => dispatch('mouseenter', { logIndex });\n\tconst mouseleave_handler = () => dispatch('mouseleave');\n\tconst blur_handler = () => dispatch('mouseleave');\n\n\t$$self.$$set = $$props => {\n\t\tif ('logIndex' in $$props) $$invalidate(0, logIndex = $$props.logIndex);\n\t\tif ('action' in $$props) $$invalidate(8, action = $$props.action);\n\t\tif ('pinned' in $$props) $$invalidate(1, pinned = $$props.pinned);\n\t\tif ('metadata' in $$props) $$invalidate(2, metadata = $$props.metadata);\n\t\tif ('metadataComponent' in $$props) $$invalidate(3, metadataComponent = $$props.metadataComponent);\n\t};\n\n\treturn [\n\t\tlogIndex,\n\t\tpinned,\n\t\tmetadata,\n\t\tmetadataComponent,\n\t\tactionType,\n\t\tdispatch,\n\t\trenderedArgs,\n\t\tplayerID,\n\t\taction,\n\t\tclick_handler,\n\t\tmouseenter_handler,\n\t\tfocus_handler,\n\t\tmouseleave_handler,\n\t\tblur_handler\n\t];\n}\n\nclass LogEvent extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(\n\t\t\tthis,\n\t\t\toptions,\n\t\t\tinstance$r,\n\t\t\tcreate_fragment$r,\n\t\t\tsafe_not_equal,\n\t\t\t{\n\t\t\t\tlogIndex: 0,\n\t\t\t\taction: 8,\n\t\t\t\tpinned: 1,\n\t\t\t\tmetadata: 2,\n\t\t\t\tmetadataComponent: 3\n\t\t\t},\n\t\t\tadd_css$j\n\t\t);\n\t}\n}\n\n/* node_modules/svelte-icons/fa/FaArrowAltCircleDown.svelte generated by Svelte v3.41.0 */\n\nfunction create_default_slot$1(ctx) {\n\tlet path;\n\n\treturn {\n\t\tc() {\n\t\t\tpath = svg_element(\"path\");\n\t\t\tattr(path, \"d\", \"M504 256c0 137-111 248-248 248S8 393 8 256 119 8 256 8s248 111 248 248zM212 140v116h-70.9c-10.7 0-16.1 13-8.5 20.5l114.9 114.3c4.7 4.7 12.2 4.7 16.9 0l114.9-114.3c7.6-7.6 2.2-20.5-8.5-20.5H300V140c0-6.6-5.4-12-12-12h-64c-6.6 0-12 5.4-12 12z\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, path, anchor);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(path);\n\t\t}\n\t};\n}\n\nfunction create_fragment$s(ctx) {\n\tlet iconbase;\n\tlet current;\n\tconst iconbase_spread_levels = [{ viewBox: \"0 0 512 512\" }, /*$$props*/ ctx[0]];\n\n\tlet iconbase_props = {\n\t\t$$slots: { default: [create_default_slot$1] },\n\t\t$$scope: { ctx }\n\t};\n\n\tfor (let i = 0; i < iconbase_spread_levels.length; i += 1) {\n\t\ticonbase_props = assign(iconbase_props, iconbase_spread_levels[i]);\n\t}\n\n\ticonbase = new IconBase({ props: iconbase_props });\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(iconbase.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(iconbase, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst iconbase_changes = (dirty & /*$$props*/ 1)\n\t\t\t? get_spread_update(iconbase_spread_levels, [iconbase_spread_levels[0], get_spread_object(/*$$props*/ ctx[0])])\n\t\t\t: {};\n\n\t\t\tif (dirty & /*$$scope*/ 2) {\n\t\t\t\ticonbase_changes.$$scope = { dirty, ctx };\n\t\t\t}\n\n\t\t\ticonbase.$set(iconbase_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(iconbase.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(iconbase.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(iconbase, detaching);\n\t\t}\n\t};\n}\n\nfunction instance$s($$self, $$props, $$invalidate) {\n\t$$self.$$set = $$new_props => {\n\t\t$$invalidate(0, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));\n\t};\n\n\t$$props = exclude_internal_props($$props);\n\treturn [$$props];\n}\n\nclass FaArrowAltCircleDown extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$s, create_fragment$s, safe_not_equal, {});\n\t}\n}\n\n/* src/client/debug/mcts/Action.svelte generated by Svelte v3.41.0 */\n\nfunction add_css$k(target) {\n\tappend_styles(target, \"svelte-1a7time\", \"div.svelte-1a7time{white-space:nowrap;text-overflow:ellipsis;overflow:hidden;max-width:500px}\");\n}\n\nfunction create_fragment$t(ctx) {\n\tlet div;\n\tlet t;\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tt = text(/*text*/ ctx[0]);\n\t\t\tattr(div, \"alt\", /*text*/ ctx[0]);\n\t\t\tattr(div, \"class\", \"svelte-1a7time\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tappend(div, t);\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (dirty & /*text*/ 1) set_data(t, /*text*/ ctx[0]);\n\n\t\t\tif (dirty & /*text*/ 1) {\n\t\t\t\tattr(div, \"alt\", /*text*/ ctx[0]);\n\t\t\t}\n\t\t},\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\t\t}\n\t};\n}\n\nfunction instance$t($$self, $$props, $$invalidate) {\n\tlet { action } = $$props;\n\tlet text;\n\n\t$$self.$$set = $$props => {\n\t\tif ('action' in $$props) $$invalidate(1, action = $$props.action);\n\t};\n\n\t$$self.$$.update = () => {\n\t\tif ($$self.$$.dirty & /*action*/ 2) {\n\t\t\t {\n\t\t\t\tconst { type, args } = action.payload;\n\t\t\t\tconst argsFormatted = (args || []).join(',');\n\t\t\t\t$$invalidate(0, text = `${type}(${argsFormatted})`);\n\t\t\t}\n\t\t}\n\t};\n\n\treturn [text, action];\n}\n\nclass Action extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$t, create_fragment$t, safe_not_equal, { action: 1 }, add_css$k);\n\t}\n}\n\n/* src/client/debug/mcts/Table.svelte generated by Svelte v3.41.0 */\n\nfunction add_css$l(target) {\n\tappend_styles(target, \"svelte-ztcwsu\", \"table.svelte-ztcwsu.svelte-ztcwsu{font-size:12px;border-collapse:collapse;border:1px solid #ddd;padding:0}tr.svelte-ztcwsu.svelte-ztcwsu{cursor:pointer}tr.svelte-ztcwsu:hover td.svelte-ztcwsu{background:#eee}tr.selected.svelte-ztcwsu td.svelte-ztcwsu{background:#eee}td.svelte-ztcwsu.svelte-ztcwsu{padding:10px;height:10px;line-height:10px;font-size:12px;border:none}th.svelte-ztcwsu.svelte-ztcwsu{background:#888;color:#fff;padding:10px;text-align:center}\");\n}\n\nfunction get_each_context$6(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[10] = list[i];\n\tchild_ctx[12] = i;\n\treturn child_ctx;\n}\n\n// (86:2) {#each children as child, i}\nfunction create_each_block$6(ctx) {\n\tlet tr;\n\tlet td0;\n\tlet t0_value = /*child*/ ctx[10].value + \"\";\n\tlet t0;\n\tlet t1;\n\tlet td1;\n\tlet t2_value = /*child*/ ctx[10].visits + \"\";\n\tlet t2;\n\tlet t3;\n\tlet td2;\n\tlet action;\n\tlet t4;\n\tlet current;\n\tlet mounted;\n\tlet dispose;\n\n\taction = new Action({\n\t\t\tprops: { action: /*child*/ ctx[10].parentAction }\n\t\t});\n\n\tfunction click_handler() {\n\t\treturn /*click_handler*/ ctx[6](/*child*/ ctx[10], /*i*/ ctx[12]);\n\t}\n\n\tfunction mouseout_handler() {\n\t\treturn /*mouseout_handler*/ ctx[7](/*i*/ ctx[12]);\n\t}\n\n\tfunction mouseover_handler() {\n\t\treturn /*mouseover_handler*/ ctx[8](/*child*/ ctx[10], /*i*/ ctx[12]);\n\t}\n\n\treturn {\n\t\tc() {\n\t\t\ttr = element(\"tr\");\n\t\t\ttd0 = element(\"td\");\n\t\t\tt0 = text(t0_value);\n\t\t\tt1 = space();\n\t\t\ttd1 = element(\"td\");\n\t\t\tt2 = text(t2_value);\n\t\t\tt3 = space();\n\t\t\ttd2 = element(\"td\");\n\t\t\tcreate_component(action.$$.fragment);\n\t\t\tt4 = space();\n\t\t\tattr(td0, \"class\", \"svelte-ztcwsu\");\n\t\t\tattr(td1, \"class\", \"svelte-ztcwsu\");\n\t\t\tattr(td2, \"class\", \"svelte-ztcwsu\");\n\t\t\tattr(tr, \"class\", \"svelte-ztcwsu\");\n\t\t\ttoggle_class(tr, \"clickable\", /*children*/ ctx[1].length > 0);\n\t\t\ttoggle_class(tr, \"selected\", /*i*/ ctx[12] === /*selectedIndex*/ ctx[0]);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, tr, anchor);\n\t\t\tappend(tr, td0);\n\t\t\tappend(td0, t0);\n\t\t\tappend(tr, t1);\n\t\t\tappend(tr, td1);\n\t\t\tappend(td1, t2);\n\t\t\tappend(tr, t3);\n\t\t\tappend(tr, td2);\n\t\t\tmount_component(action, td2, null);\n\t\t\tappend(tr, t4);\n\t\t\tcurrent = true;\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = [\n\t\t\t\t\tlisten(tr, \"click\", click_handler),\n\t\t\t\t\tlisten(tr, \"mouseout\", mouseout_handler),\n\t\t\t\t\tlisten(tr, \"mouseover\", mouseover_handler)\n\t\t\t\t];\n\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(new_ctx, dirty) {\n\t\t\tctx = new_ctx;\n\t\t\tif ((!current || dirty & /*children*/ 2) && t0_value !== (t0_value = /*child*/ ctx[10].value + \"\")) set_data(t0, t0_value);\n\t\t\tif ((!current || dirty & /*children*/ 2) && t2_value !== (t2_value = /*child*/ ctx[10].visits + \"\")) set_data(t2, t2_value);\n\t\t\tconst action_changes = {};\n\t\t\tif (dirty & /*children*/ 2) action_changes.action = /*child*/ ctx[10].parentAction;\n\t\t\taction.$set(action_changes);\n\n\t\t\tif (dirty & /*children*/ 2) {\n\t\t\t\ttoggle_class(tr, \"clickable\", /*children*/ ctx[1].length > 0);\n\t\t\t}\n\n\t\t\tif (dirty & /*selectedIndex*/ 1) {\n\t\t\t\ttoggle_class(tr, \"selected\", /*i*/ ctx[12] === /*selectedIndex*/ ctx[0]);\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(action.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(action.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(tr);\n\t\t\tdestroy_component(action);\n\t\t\tmounted = false;\n\t\t\trun_all(dispose);\n\t\t}\n\t};\n}\n\nfunction create_fragment$u(ctx) {\n\tlet table;\n\tlet thead;\n\tlet t5;\n\tlet tbody;\n\tlet current;\n\tlet each_value = /*children*/ ctx[1];\n\tlet each_blocks = [];\n\n\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\teach_blocks[i] = create_each_block$6(get_each_context$6(ctx, each_value, i));\n\t}\n\n\tconst out = i => transition_out(each_blocks[i], 1, 1, () => {\n\t\teach_blocks[i] = null;\n\t});\n\n\treturn {\n\t\tc() {\n\t\t\ttable = element(\"table\");\n\t\t\tthead = element(\"thead\");\n\n\t\t\tthead.innerHTML = `<th class=\"svelte-ztcwsu\">Value</th> \n    <th class=\"svelte-ztcwsu\">Visits</th> \n    <th class=\"svelte-ztcwsu\">Action</th>`;\n\n\t\t\tt5 = space();\n\t\t\ttbody = element(\"tbody\");\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].c();\n\t\t\t}\n\n\t\t\tattr(table, \"class\", \"svelte-ztcwsu\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, table, anchor);\n\t\t\tappend(table, thead);\n\t\t\tappend(table, t5);\n\t\t\tappend(table, tbody);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].m(tbody, null);\n\t\t\t}\n\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (dirty & /*children, selectedIndex, Select, Preview*/ 15) {\n\t\t\t\teach_value = /*children*/ ctx[1];\n\t\t\t\tlet i;\n\n\t\t\t\tfor (i = 0; i < each_value.length; i += 1) {\n\t\t\t\t\tconst child_ctx = get_each_context$6(ctx, each_value, i);\n\n\t\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\t\teach_blocks[i].p(child_ctx, dirty);\n\t\t\t\t\t\ttransition_in(each_blocks[i], 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\teach_blocks[i] = create_each_block$6(child_ctx);\n\t\t\t\t\t\teach_blocks[i].c();\n\t\t\t\t\t\ttransition_in(each_blocks[i], 1);\n\t\t\t\t\t\teach_blocks[i].m(tbody, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tgroup_outros();\n\n\t\t\t\tfor (i = each_value.length; i < each_blocks.length; i += 1) {\n\t\t\t\t\tout(i);\n\t\t\t\t}\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\n\t\t\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\t\t\ttransition_in(each_blocks[i]);\n\t\t\t}\n\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\teach_blocks = each_blocks.filter(Boolean);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\ttransition_out(each_blocks[i]);\n\t\t\t}\n\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(table);\n\t\t\tdestroy_each(each_blocks, detaching);\n\t\t}\n\t};\n}\n\nfunction instance$u($$self, $$props, $$invalidate) {\n\tlet { root } = $$props;\n\tlet { selectedIndex = null } = $$props;\n\tconst dispatch = createEventDispatcher();\n\tlet parents = [];\n\tlet children = [];\n\n\tfunction Select(node, i) {\n\t\tdispatch('select', { node, selectedIndex: i });\n\t}\n\n\tfunction Preview(node, i) {\n\t\tif (selectedIndex === null) {\n\t\t\tdispatch('preview', { node });\n\t\t}\n\t}\n\n\tconst click_handler = (child, i) => Select(child, i);\n\tconst mouseout_handler = i => Preview(null);\n\tconst mouseover_handler = (child, i) => Preview(child);\n\n\t$$self.$$set = $$props => {\n\t\tif ('root' in $$props) $$invalidate(4, root = $$props.root);\n\t\tif ('selectedIndex' in $$props) $$invalidate(0, selectedIndex = $$props.selectedIndex);\n\t};\n\n\t$$self.$$.update = () => {\n\t\tif ($$self.$$.dirty & /*root, parents*/ 48) {\n\t\t\t {\n\t\t\t\tlet t = root;\n\t\t\t\t$$invalidate(5, parents = []);\n\n\t\t\t\twhile (t.parent) {\n\t\t\t\t\tconst parent = t.parent;\n\t\t\t\t\tconst { type, args } = t.parentAction.payload;\n\t\t\t\t\tconst argsFormatted = (args || []).join(',');\n\t\t\t\t\tconst arrowText = `${type}(${argsFormatted})`;\n\t\t\t\t\tparents.push({ parent, arrowText });\n\t\t\t\t\tt = parent;\n\t\t\t\t}\n\n\t\t\t\tparents.reverse();\n\t\t\t\t$$invalidate(1, children = [...root.children].sort((a, b) => a.visits < b.visits ? 1 : -1).slice(0, 50));\n\t\t\t}\n\t\t}\n\t};\n\n\treturn [\n\t\tselectedIndex,\n\t\tchildren,\n\t\tSelect,\n\t\tPreview,\n\t\troot,\n\t\tparents,\n\t\tclick_handler,\n\t\tmouseout_handler,\n\t\tmouseover_handler\n\t];\n}\n\nclass Table extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$u, create_fragment$u, safe_not_equal, { root: 4, selectedIndex: 0 }, add_css$l);\n\t}\n}\n\n/* src/client/debug/mcts/MCTS.svelte generated by Svelte v3.41.0 */\n\nfunction add_css$m(target) {\n\tappend_styles(target, \"svelte-1f0amz4\", \".visualizer.svelte-1f0amz4{display:flex;flex-direction:column;align-items:center;padding:50px}.preview.svelte-1f0amz4{opacity:0.5}.icon.svelte-1f0amz4{color:#777;width:32px;height:32px;margin-bottom:20px}\");\n}\n\nfunction get_each_context$7(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[9] = list[i].node;\n\tchild_ctx[10] = list[i].selectedIndex;\n\tchild_ctx[12] = i;\n\treturn child_ctx;\n}\n\n// (50:4) {#if i !== 0}\nfunction create_if_block_2$3(ctx) {\n\tlet div;\n\tlet arrow;\n\tlet current;\n\tarrow = new FaArrowAltCircleDown({});\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tcreate_component(arrow.$$.fragment);\n\t\t\tattr(div, \"class\", \"icon svelte-1f0amz4\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tmount_component(arrow, div, null);\n\t\t\tcurrent = true;\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(arrow.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(arrow.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\t\t\tdestroy_component(arrow);\n\t\t}\n\t};\n}\n\n// (61:6) {:else}\nfunction create_else_block$2(ctx) {\n\tlet table;\n\tlet current;\n\n\tfunction select_handler_1(...args) {\n\t\treturn /*select_handler_1*/ ctx[7](/*i*/ ctx[12], ...args);\n\t}\n\n\ttable = new Table({\n\t\t\tprops: {\n\t\t\t\troot: /*node*/ ctx[9],\n\t\t\t\tselectedIndex: /*selectedIndex*/ ctx[10]\n\t\t\t}\n\t\t});\n\n\ttable.$on(\"select\", select_handler_1);\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(table.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(table, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(new_ctx, dirty) {\n\t\t\tctx = new_ctx;\n\t\t\tconst table_changes = {};\n\t\t\tif (dirty & /*nodes*/ 1) table_changes.root = /*node*/ ctx[9];\n\t\t\tif (dirty & /*nodes*/ 1) table_changes.selectedIndex = /*selectedIndex*/ ctx[10];\n\t\t\ttable.$set(table_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(table.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(table.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(table, detaching);\n\t\t}\n\t};\n}\n\n// (57:6) {#if i === nodes.length - 1}\nfunction create_if_block_1$3(ctx) {\n\tlet table;\n\tlet current;\n\n\tfunction select_handler(...args) {\n\t\treturn /*select_handler*/ ctx[5](/*i*/ ctx[12], ...args);\n\t}\n\n\tfunction preview_handler(...args) {\n\t\treturn /*preview_handler*/ ctx[6](/*i*/ ctx[12], ...args);\n\t}\n\n\ttable = new Table({ props: { root: /*node*/ ctx[9] } });\n\ttable.$on(\"select\", select_handler);\n\ttable.$on(\"preview\", preview_handler);\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(table.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(table, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(new_ctx, dirty) {\n\t\t\tctx = new_ctx;\n\t\t\tconst table_changes = {};\n\t\t\tif (dirty & /*nodes*/ 1) table_changes.root = /*node*/ ctx[9];\n\t\t\ttable.$set(table_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(table.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(table.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(table, detaching);\n\t\t}\n\t};\n}\n\n// (49:2) {#each nodes as { node, selectedIndex }\nfunction create_each_block$7(ctx) {\n\tlet t;\n\tlet section;\n\tlet current_block_type_index;\n\tlet if_block1;\n\tlet current;\n\tlet if_block0 = /*i*/ ctx[12] !== 0 && create_if_block_2$3();\n\tconst if_block_creators = [create_if_block_1$3, create_else_block$2];\n\tconst if_blocks = [];\n\n\tfunction select_block_type(ctx, dirty) {\n\t\tif (/*i*/ ctx[12] === /*nodes*/ ctx[0].length - 1) return 0;\n\t\treturn 1;\n\t}\n\n\tcurrent_block_type_index = select_block_type(ctx);\n\tif_block1 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tif (if_block0) if_block0.c();\n\t\t\tt = space();\n\t\t\tsection = element(\"section\");\n\t\t\tif_block1.c();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tif (if_block0) if_block0.m(target, anchor);\n\t\t\tinsert(target, t, anchor);\n\t\t\tinsert(target, section, anchor);\n\t\t\tif_blocks[current_block_type_index].m(section, null);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tlet previous_block_index = current_block_type_index;\n\t\t\tcurrent_block_type_index = select_block_type(ctx);\n\n\t\t\tif (current_block_type_index === previous_block_index) {\n\t\t\t\tif_blocks[current_block_type_index].p(ctx, dirty);\n\t\t\t} else {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_blocks[previous_block_index], 1, 1, () => {\n\t\t\t\t\tif_blocks[previous_block_index] = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t\tif_block1 = if_blocks[current_block_type_index];\n\n\t\t\t\tif (!if_block1) {\n\t\t\t\t\tif_block1 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\t\t\t\t\tif_block1.c();\n\t\t\t\t} else {\n\t\t\t\t\tif_block1.p(ctx, dirty);\n\t\t\t\t}\n\n\t\t\t\ttransition_in(if_block1, 1);\n\t\t\t\tif_block1.m(section, null);\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block0);\n\t\t\ttransition_in(if_block1);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block0);\n\t\t\ttransition_out(if_block1);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (if_block0) if_block0.d(detaching);\n\t\t\tif (detaching) detach(t);\n\t\t\tif (detaching) detach(section);\n\t\t\tif_blocks[current_block_type_index].d();\n\t\t}\n\t};\n}\n\n// (69:2) {#if preview}\nfunction create_if_block$a(ctx) {\n\tlet div;\n\tlet arrow;\n\tlet t;\n\tlet section;\n\tlet table;\n\tlet current;\n\tarrow = new FaArrowAltCircleDown({});\n\ttable = new Table({ props: { root: /*preview*/ ctx[1] } });\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tcreate_component(arrow.$$.fragment);\n\t\t\tt = space();\n\t\t\tsection = element(\"section\");\n\t\t\tcreate_component(table.$$.fragment);\n\t\t\tattr(div, \"class\", \"icon svelte-1f0amz4\");\n\t\t\tattr(section, \"class\", \"preview svelte-1f0amz4\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tmount_component(arrow, div, null);\n\t\t\tinsert(target, t, anchor);\n\t\t\tinsert(target, section, anchor);\n\t\t\tmount_component(table, section, null);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst table_changes = {};\n\t\t\tif (dirty & /*preview*/ 2) table_changes.root = /*preview*/ ctx[1];\n\t\t\ttable.$set(table_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(arrow.$$.fragment, local);\n\t\t\ttransition_in(table.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(arrow.$$.fragment, local);\n\t\t\ttransition_out(table.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\t\t\tdestroy_component(arrow);\n\t\t\tif (detaching) detach(t);\n\t\t\tif (detaching) detach(section);\n\t\t\tdestroy_component(table);\n\t\t}\n\t};\n}\n\nfunction create_fragment$v(ctx) {\n\tlet div;\n\tlet t;\n\tlet current;\n\tlet each_value = /*nodes*/ ctx[0];\n\tlet each_blocks = [];\n\n\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\teach_blocks[i] = create_each_block$7(get_each_context$7(ctx, each_value, i));\n\t}\n\n\tconst out = i => transition_out(each_blocks[i], 1, 1, () => {\n\t\teach_blocks[i] = null;\n\t});\n\n\tlet if_block = /*preview*/ ctx[1] && create_if_block$a(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].c();\n\t\t\t}\n\n\t\t\tt = space();\n\t\t\tif (if_block) if_block.c();\n\t\t\tattr(div, \"class\", \"visualizer svelte-1f0amz4\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].m(div, null);\n\t\t\t}\n\n\t\t\tappend(div, t);\n\t\t\tif (if_block) if_block.m(div, null);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (dirty & /*nodes, SelectNode, PreviewNode*/ 13) {\n\t\t\t\teach_value = /*nodes*/ ctx[0];\n\t\t\t\tlet i;\n\n\t\t\t\tfor (i = 0; i < each_value.length; i += 1) {\n\t\t\t\t\tconst child_ctx = get_each_context$7(ctx, each_value, i);\n\n\t\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\t\teach_blocks[i].p(child_ctx, dirty);\n\t\t\t\t\t\ttransition_in(each_blocks[i], 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\teach_blocks[i] = create_each_block$7(child_ctx);\n\t\t\t\t\t\teach_blocks[i].c();\n\t\t\t\t\t\ttransition_in(each_blocks[i], 1);\n\t\t\t\t\t\teach_blocks[i].m(div, t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tgroup_outros();\n\n\t\t\t\tfor (i = each_value.length; i < each_blocks.length; i += 1) {\n\t\t\t\t\tout(i);\n\t\t\t\t}\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\n\t\t\tif (/*preview*/ ctx[1]) {\n\t\t\t\tif (if_block) {\n\t\t\t\t\tif_block.p(ctx, dirty);\n\n\t\t\t\t\tif (dirty & /*preview*/ 2) {\n\t\t\t\t\t\ttransition_in(if_block, 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif_block = create_if_block$a(ctx);\n\t\t\t\t\tif_block.c();\n\t\t\t\t\ttransition_in(if_block, 1);\n\t\t\t\t\tif_block.m(div, null);\n\t\t\t\t}\n\t\t\t} else if (if_block) {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_block, 1, 1, () => {\n\t\t\t\t\tif_block = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\n\t\t\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\t\t\ttransition_in(each_blocks[i]);\n\t\t\t}\n\n\t\t\ttransition_in(if_block);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\teach_blocks = each_blocks.filter(Boolean);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\ttransition_out(each_blocks[i]);\n\t\t\t}\n\n\t\t\ttransition_out(if_block);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\t\t\tdestroy_each(each_blocks, detaching);\n\t\t\tif (if_block) if_block.d();\n\t\t}\n\t};\n}\n\nfunction instance$v($$self, $$props, $$invalidate) {\n\tlet { metadata } = $$props;\n\tlet nodes = [];\n\tlet preview = null;\n\n\tfunction SelectNode({ node, selectedIndex }, i) {\n\t\t$$invalidate(1, preview = null);\n\t\t$$invalidate(0, nodes[i].selectedIndex = selectedIndex, nodes);\n\t\t$$invalidate(0, nodes = [...nodes.slice(0, i + 1), { node }]);\n\t}\n\n\tfunction PreviewNode({ node }, i) {\n\t\t$$invalidate(1, preview = node);\n\t}\n\n\tconst select_handler = (i, e) => SelectNode(e.detail, i);\n\tconst preview_handler = (i, e) => PreviewNode(e.detail);\n\tconst select_handler_1 = (i, e) => SelectNode(e.detail, i);\n\n\t$$self.$$set = $$props => {\n\t\tif ('metadata' in $$props) $$invalidate(4, metadata = $$props.metadata);\n\t};\n\n\t$$self.$$.update = () => {\n\t\tif ($$self.$$.dirty & /*metadata*/ 16) {\n\t\t\t {\n\t\t\t\t$$invalidate(0, nodes = [{ node: metadata }]);\n\t\t\t}\n\t\t}\n\t};\n\n\treturn [\n\t\tnodes,\n\t\tpreview,\n\t\tSelectNode,\n\t\tPreviewNode,\n\t\tmetadata,\n\t\tselect_handler,\n\t\tpreview_handler,\n\t\tselect_handler_1\n\t];\n}\n\nclass MCTS extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$v, create_fragment$v, safe_not_equal, { metadata: 4 }, add_css$m);\n\t}\n}\n\n/* src/client/debug/log/Log.svelte generated by Svelte v3.41.0 */\n\nfunction add_css$n(target) {\n\tappend_styles(target, \"svelte-1pq5e4b\", \".gamelog.svelte-1pq5e4b{display:grid;grid-template-columns:30px 1fr 30px;grid-auto-rows:auto;grid-auto-flow:column}\");\n}\n\nfunction get_each_context$8(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[16] = list[i].phase;\n\tchild_ctx[18] = i;\n\treturn child_ctx;\n}\n\nfunction get_each_context_1(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[19] = list[i].action;\n\tchild_ctx[20] = list[i].metadata;\n\tchild_ctx[18] = i;\n\treturn child_ctx;\n}\n\nfunction get_each_context_2(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[22] = list[i].turn;\n\tchild_ctx[18] = i;\n\treturn child_ctx;\n}\n\n// (136:4) {#if i in turnBoundaries}\nfunction create_if_block_1$4(ctx) {\n\tlet turnmarker;\n\tlet current;\n\n\tturnmarker = new TurnMarker({\n\t\t\tprops: {\n\t\t\t\tturn: /*turn*/ ctx[22],\n\t\t\t\tnumEvents: /*turnBoundaries*/ ctx[3][/*i*/ ctx[18]]\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(turnmarker.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(turnmarker, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst turnmarker_changes = {};\n\t\t\tif (dirty & /*renderedLogEntries*/ 2) turnmarker_changes.turn = /*turn*/ ctx[22];\n\t\t\tif (dirty & /*turnBoundaries*/ 8) turnmarker_changes.numEvents = /*turnBoundaries*/ ctx[3][/*i*/ ctx[18]];\n\t\t\tturnmarker.$set(turnmarker_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(turnmarker.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(turnmarker.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(turnmarker, detaching);\n\t\t}\n\t};\n}\n\n// (135:2) {#each renderedLogEntries as { turn }\nfunction create_each_block_2(ctx) {\n\tlet if_block_anchor;\n\tlet current;\n\tlet if_block = /*i*/ ctx[18] in /*turnBoundaries*/ ctx[3] && create_if_block_1$4(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tif (if_block) if_block.c();\n\t\t\tif_block_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tif (if_block) if_block.m(target, anchor);\n\t\t\tinsert(target, if_block_anchor, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (/*i*/ ctx[18] in /*turnBoundaries*/ ctx[3]) {\n\t\t\t\tif (if_block) {\n\t\t\t\t\tif_block.p(ctx, dirty);\n\n\t\t\t\t\tif (dirty & /*turnBoundaries*/ 8) {\n\t\t\t\t\t\ttransition_in(if_block, 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif_block = create_if_block_1$4(ctx);\n\t\t\t\t\tif_block.c();\n\t\t\t\t\ttransition_in(if_block, 1);\n\t\t\t\t\tif_block.m(if_block_anchor.parentNode, if_block_anchor);\n\t\t\t\t}\n\t\t\t} else if (if_block) {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_block, 1, 1, () => {\n\t\t\t\t\tif_block = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (if_block) if_block.d(detaching);\n\t\t\tif (detaching) detach(if_block_anchor);\n\t\t}\n\t};\n}\n\n// (141:2) {#each renderedLogEntries as { action, metadata }\nfunction create_each_block_1(ctx) {\n\tlet logevent;\n\tlet current;\n\n\tlogevent = new LogEvent({\n\t\t\tprops: {\n\t\t\t\tpinned: /*i*/ ctx[18] === /*pinned*/ ctx[2],\n\t\t\t\tlogIndex: /*i*/ ctx[18],\n\t\t\t\taction: /*action*/ ctx[19],\n\t\t\t\tmetadata: /*metadata*/ ctx[20]\n\t\t\t}\n\t\t});\n\n\tlogevent.$on(\"click\", /*OnLogClick*/ ctx[5]);\n\tlogevent.$on(\"mouseenter\", /*OnMouseEnter*/ ctx[6]);\n\tlogevent.$on(\"mouseleave\", /*OnMouseLeave*/ ctx[7]);\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(logevent.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(logevent, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst logevent_changes = {};\n\t\t\tif (dirty & /*pinned*/ 4) logevent_changes.pinned = /*i*/ ctx[18] === /*pinned*/ ctx[2];\n\t\t\tif (dirty & /*renderedLogEntries*/ 2) logevent_changes.action = /*action*/ ctx[19];\n\t\t\tif (dirty & /*renderedLogEntries*/ 2) logevent_changes.metadata = /*metadata*/ ctx[20];\n\t\t\tlogevent.$set(logevent_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(logevent.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(logevent.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(logevent, detaching);\n\t\t}\n\t};\n}\n\n// (153:4) {#if i in phaseBoundaries}\nfunction create_if_block$b(ctx) {\n\tlet phasemarker;\n\tlet current;\n\n\tphasemarker = new PhaseMarker({\n\t\t\tprops: {\n\t\t\t\tphase: /*phase*/ ctx[16],\n\t\t\t\tnumEvents: /*phaseBoundaries*/ ctx[4][/*i*/ ctx[18]]\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(phasemarker.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(phasemarker, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst phasemarker_changes = {};\n\t\t\tif (dirty & /*renderedLogEntries*/ 2) phasemarker_changes.phase = /*phase*/ ctx[16];\n\t\t\tif (dirty & /*phaseBoundaries*/ 16) phasemarker_changes.numEvents = /*phaseBoundaries*/ ctx[4][/*i*/ ctx[18]];\n\t\t\tphasemarker.$set(phasemarker_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(phasemarker.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(phasemarker.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(phasemarker, detaching);\n\t\t}\n\t};\n}\n\n// (152:2) {#each renderedLogEntries as { phase }\nfunction create_each_block$8(ctx) {\n\tlet if_block_anchor;\n\tlet current;\n\tlet if_block = /*i*/ ctx[18] in /*phaseBoundaries*/ ctx[4] && create_if_block$b(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tif (if_block) if_block.c();\n\t\t\tif_block_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tif (if_block) if_block.m(target, anchor);\n\t\t\tinsert(target, if_block_anchor, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (/*i*/ ctx[18] in /*phaseBoundaries*/ ctx[4]) {\n\t\t\t\tif (if_block) {\n\t\t\t\t\tif_block.p(ctx, dirty);\n\n\t\t\t\t\tif (dirty & /*phaseBoundaries*/ 16) {\n\t\t\t\t\t\ttransition_in(if_block, 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif_block = create_if_block$b(ctx);\n\t\t\t\t\tif_block.c();\n\t\t\t\t\ttransition_in(if_block, 1);\n\t\t\t\t\tif_block.m(if_block_anchor.parentNode, if_block_anchor);\n\t\t\t\t}\n\t\t\t} else if (if_block) {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_block, 1, 1, () => {\n\t\t\t\t\tif_block = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (if_block) if_block.d(detaching);\n\t\t\tif (detaching) detach(if_block_anchor);\n\t\t}\n\t};\n}\n\nfunction create_fragment$w(ctx) {\n\tlet div;\n\tlet t0;\n\tlet t1;\n\tlet current;\n\tlet mounted;\n\tlet dispose;\n\tlet each_value_2 = /*renderedLogEntries*/ ctx[1];\n\tlet each_blocks_2 = [];\n\n\tfor (let i = 0; i < each_value_2.length; i += 1) {\n\t\teach_blocks_2[i] = create_each_block_2(get_each_context_2(ctx, each_value_2, i));\n\t}\n\n\tconst out = i => transition_out(each_blocks_2[i], 1, 1, () => {\n\t\teach_blocks_2[i] = null;\n\t});\n\n\tlet each_value_1 = /*renderedLogEntries*/ ctx[1];\n\tlet each_blocks_1 = [];\n\n\tfor (let i = 0; i < each_value_1.length; i += 1) {\n\t\teach_blocks_1[i] = create_each_block_1(get_each_context_1(ctx, each_value_1, i));\n\t}\n\n\tconst out_1 = i => transition_out(each_blocks_1[i], 1, 1, () => {\n\t\teach_blocks_1[i] = null;\n\t});\n\n\tlet each_value = /*renderedLogEntries*/ ctx[1];\n\tlet each_blocks = [];\n\n\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\teach_blocks[i] = create_each_block$8(get_each_context$8(ctx, each_value, i));\n\t}\n\n\tconst out_2 = i => transition_out(each_blocks[i], 1, 1, () => {\n\t\teach_blocks[i] = null;\n\t});\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\n\t\t\tfor (let i = 0; i < each_blocks_2.length; i += 1) {\n\t\t\t\teach_blocks_2[i].c();\n\t\t\t}\n\n\t\t\tt0 = space();\n\n\t\t\tfor (let i = 0; i < each_blocks_1.length; i += 1) {\n\t\t\t\teach_blocks_1[i].c();\n\t\t\t}\n\n\t\t\tt1 = space();\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].c();\n\t\t\t}\n\n\t\t\tattr(div, \"class\", \"gamelog svelte-1pq5e4b\");\n\t\t\ttoggle_class(div, \"pinned\", /*pinned*/ ctx[2]);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\n\t\t\tfor (let i = 0; i < each_blocks_2.length; i += 1) {\n\t\t\t\teach_blocks_2[i].m(div, null);\n\t\t\t}\n\n\t\t\tappend(div, t0);\n\n\t\t\tfor (let i = 0; i < each_blocks_1.length; i += 1) {\n\t\t\t\teach_blocks_1[i].m(div, null);\n\t\t\t}\n\n\t\t\tappend(div, t1);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].m(div, null);\n\t\t\t}\n\n\t\t\tcurrent = true;\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = listen(window, \"keydown\", /*OnKeyDown*/ ctx[8]);\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (dirty & /*renderedLogEntries, turnBoundaries*/ 10) {\n\t\t\t\teach_value_2 = /*renderedLogEntries*/ ctx[1];\n\t\t\t\tlet i;\n\n\t\t\t\tfor (i = 0; i < each_value_2.length; i += 1) {\n\t\t\t\t\tconst child_ctx = get_each_context_2(ctx, each_value_2, i);\n\n\t\t\t\t\tif (each_blocks_2[i]) {\n\t\t\t\t\t\teach_blocks_2[i].p(child_ctx, dirty);\n\t\t\t\t\t\ttransition_in(each_blocks_2[i], 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\teach_blocks_2[i] = create_each_block_2(child_ctx);\n\t\t\t\t\t\teach_blocks_2[i].c();\n\t\t\t\t\t\ttransition_in(each_blocks_2[i], 1);\n\t\t\t\t\t\teach_blocks_2[i].m(div, t0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tgroup_outros();\n\n\t\t\t\tfor (i = each_value_2.length; i < each_blocks_2.length; i += 1) {\n\t\t\t\t\tout(i);\n\t\t\t\t}\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\n\t\t\tif (dirty & /*pinned, renderedLogEntries, OnLogClick, OnMouseEnter, OnMouseLeave*/ 230) {\n\t\t\t\teach_value_1 = /*renderedLogEntries*/ ctx[1];\n\t\t\t\tlet i;\n\n\t\t\t\tfor (i = 0; i < each_value_1.length; i += 1) {\n\t\t\t\t\tconst child_ctx = get_each_context_1(ctx, each_value_1, i);\n\n\t\t\t\t\tif (each_blocks_1[i]) {\n\t\t\t\t\t\teach_blocks_1[i].p(child_ctx, dirty);\n\t\t\t\t\t\ttransition_in(each_blocks_1[i], 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\teach_blocks_1[i] = create_each_block_1(child_ctx);\n\t\t\t\t\t\teach_blocks_1[i].c();\n\t\t\t\t\t\ttransition_in(each_blocks_1[i], 1);\n\t\t\t\t\t\teach_blocks_1[i].m(div, t1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tgroup_outros();\n\n\t\t\t\tfor (i = each_value_1.length; i < each_blocks_1.length; i += 1) {\n\t\t\t\t\tout_1(i);\n\t\t\t\t}\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\n\t\t\tif (dirty & /*renderedLogEntries, phaseBoundaries*/ 18) {\n\t\t\t\teach_value = /*renderedLogEntries*/ ctx[1];\n\t\t\t\tlet i;\n\n\t\t\t\tfor (i = 0; i < each_value.length; i += 1) {\n\t\t\t\t\tconst child_ctx = get_each_context$8(ctx, each_value, i);\n\n\t\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\t\teach_blocks[i].p(child_ctx, dirty);\n\t\t\t\t\t\ttransition_in(each_blocks[i], 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\teach_blocks[i] = create_each_block$8(child_ctx);\n\t\t\t\t\t\teach_blocks[i].c();\n\t\t\t\t\t\ttransition_in(each_blocks[i], 1);\n\t\t\t\t\t\teach_blocks[i].m(div, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tgroup_outros();\n\n\t\t\t\tfor (i = each_value.length; i < each_blocks.length; i += 1) {\n\t\t\t\t\tout_2(i);\n\t\t\t\t}\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\n\t\t\tif (dirty & /*pinned*/ 4) {\n\t\t\t\ttoggle_class(div, \"pinned\", /*pinned*/ ctx[2]);\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\n\t\t\tfor (let i = 0; i < each_value_2.length; i += 1) {\n\t\t\t\ttransition_in(each_blocks_2[i]);\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < each_value_1.length; i += 1) {\n\t\t\t\ttransition_in(each_blocks_1[i]);\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\t\t\ttransition_in(each_blocks[i]);\n\t\t\t}\n\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\teach_blocks_2 = each_blocks_2.filter(Boolean);\n\n\t\t\tfor (let i = 0; i < each_blocks_2.length; i += 1) {\n\t\t\t\ttransition_out(each_blocks_2[i]);\n\t\t\t}\n\n\t\t\teach_blocks_1 = each_blocks_1.filter(Boolean);\n\n\t\t\tfor (let i = 0; i < each_blocks_1.length; i += 1) {\n\t\t\t\ttransition_out(each_blocks_1[i]);\n\t\t\t}\n\n\t\t\teach_blocks = each_blocks.filter(Boolean);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\ttransition_out(each_blocks[i]);\n\t\t\t}\n\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\t\t\tdestroy_each(each_blocks_2, detaching);\n\t\t\tdestroy_each(each_blocks_1, detaching);\n\t\t\tdestroy_each(each_blocks, detaching);\n\t\t\tmounted = false;\n\t\t\tdispose();\n\t\t}\n\t};\n}\n\nfunction instance$w($$self, $$props, $$invalidate) {\n\tlet $client,\n\t\t$$unsubscribe_client = noop,\n\t\t$$subscribe_client = () => ($$unsubscribe_client(), $$unsubscribe_client = subscribe(client, $$value => $$invalidate(10, $client = $$value)), client);\n\n\t$$self.$$.on_destroy.push(() => $$unsubscribe_client());\n\tlet { client } = $$props;\n\t$$subscribe_client();\n\tconst { secondaryPane } = getContext('secondaryPane');\n\tconst reducer = (0,_reducer_07c7b307_js__WEBPACK_IMPORTED_MODULE_2__.C)({ game: client.game });\n\tconst initialState = client.getInitialState();\n\tlet { log } = $client;\n\tlet pinned = null;\n\n\tfunction rewind(logIndex) {\n\t\tlet state = initialState;\n\n\t\tfor (let i = 0; i < log.length; i++) {\n\t\t\tconst { action, automatic } = log[i];\n\n\t\t\tif (!automatic) {\n\t\t\t\tstate = reducer(state, action);\n\n\t\t\t\tif (logIndex == 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlogIndex--;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tG: state.G,\n\t\t\tctx: state.ctx,\n\t\t\tplugins: state.plugins\n\t\t};\n\t}\n\n\tfunction OnLogClick(e) {\n\t\tconst { logIndex } = e.detail;\n\t\tconst state = rewind(logIndex);\n\t\tconst renderedLogEntries = log.filter(e => !e.automatic);\n\t\tclient.overrideGameState(state);\n\n\t\tif (pinned == logIndex) {\n\t\t\t$$invalidate(2, pinned = null);\n\t\t\tsecondaryPane.set(null);\n\t\t} else {\n\t\t\t$$invalidate(2, pinned = logIndex);\n\t\t\tconst { metadata } = renderedLogEntries[logIndex].action.payload;\n\n\t\t\tif (metadata) {\n\t\t\t\tsecondaryPane.set({ component: MCTS, metadata });\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction OnMouseEnter(e) {\n\t\tconst { logIndex } = e.detail;\n\n\t\tif (pinned === null) {\n\t\t\tconst state = rewind(logIndex);\n\t\t\tclient.overrideGameState(state);\n\t\t}\n\t}\n\n\tfunction OnMouseLeave() {\n\t\tif (pinned === null) {\n\t\t\tclient.overrideGameState(null);\n\t\t}\n\t}\n\n\tfunction Reset() {\n\t\t$$invalidate(2, pinned = null);\n\t\tclient.overrideGameState(null);\n\t\tsecondaryPane.set(null);\n\t}\n\n\tonDestroy(Reset);\n\n\tfunction OnKeyDown(e) {\n\t\t// ESC.\n\t\tif (e.keyCode == 27) {\n\t\t\tReset();\n\t\t}\n\t}\n\n\tlet renderedLogEntries;\n\tlet turnBoundaries = {};\n\tlet phaseBoundaries = {};\n\n\t$$self.$$set = $$props => {\n\t\tif ('client' in $$props) $$subscribe_client($$invalidate(0, client = $$props.client));\n\t};\n\n\t$$self.$$.update = () => {\n\t\tif ($$self.$$.dirty & /*$client, log, renderedLogEntries*/ 1538) {\n\t\t\t {\n\t\t\t\t$$invalidate(9, log = $client.log);\n\t\t\t\t$$invalidate(1, renderedLogEntries = log.filter(e => !e.automatic));\n\t\t\t\tlet eventsInCurrentPhase = 0;\n\t\t\t\tlet eventsInCurrentTurn = 0;\n\t\t\t\t$$invalidate(3, turnBoundaries = {});\n\t\t\t\t$$invalidate(4, phaseBoundaries = {});\n\n\t\t\t\tfor (let i = 0; i < renderedLogEntries.length; i++) {\n\t\t\t\t\tconst { action, payload, turn, phase } = renderedLogEntries[i];\n\t\t\t\t\teventsInCurrentTurn++;\n\t\t\t\t\teventsInCurrentPhase++;\n\n\t\t\t\t\tif (i == renderedLogEntries.length - 1 || renderedLogEntries[i + 1].turn != turn) {\n\t\t\t\t\t\t$$invalidate(3, turnBoundaries[i] = eventsInCurrentTurn, turnBoundaries);\n\t\t\t\t\t\teventsInCurrentTurn = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == renderedLogEntries.length - 1 || renderedLogEntries[i + 1].phase != phase) {\n\t\t\t\t\t\t$$invalidate(4, phaseBoundaries[i] = eventsInCurrentPhase, phaseBoundaries);\n\t\t\t\t\t\teventsInCurrentPhase = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\treturn [\n\t\tclient,\n\t\trenderedLogEntries,\n\t\tpinned,\n\t\tturnBoundaries,\n\t\tphaseBoundaries,\n\t\tOnLogClick,\n\t\tOnMouseEnter,\n\t\tOnMouseLeave,\n\t\tOnKeyDown,\n\t\tlog,\n\t\t$client\n\t];\n}\n\nclass Log extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$w, create_fragment$w, safe_not_equal, { client: 0 }, add_css$n);\n\t}\n}\n\n/* src/client/debug/ai/Options.svelte generated by Svelte v3.41.0 */\n\nfunction add_css$o(target) {\n\tappend_styles(target, \"svelte-1fu900w\", \"label.svelte-1fu900w{color:#666}.option.svelte-1fu900w{margin-bottom:20px}.value.svelte-1fu900w{font-weight:bold;color:#000}input[type='checkbox'].svelte-1fu900w{vertical-align:middle}\");\n}\n\nfunction get_each_context$9(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[6] = list[i][0];\n\tchild_ctx[7] = list[i][1];\n\tchild_ctx[8] = list;\n\tchild_ctx[9] = i;\n\treturn child_ctx;\n}\n\n// (44:47) \nfunction create_if_block_1$5(ctx) {\n\tlet input;\n\tlet input_id_value;\n\tlet mounted;\n\tlet dispose;\n\n\tfunction input_change_handler() {\n\t\t/*input_change_handler*/ ctx[5].call(input, /*key*/ ctx[6]);\n\t}\n\n\treturn {\n\t\tc() {\n\t\t\tinput = element(\"input\");\n\t\t\tattr(input, \"id\", input_id_value = /*makeID*/ ctx[3](/*key*/ ctx[6]));\n\t\t\tattr(input, \"type\", \"checkbox\");\n\t\t\tattr(input, \"class\", \"svelte-1fu900w\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, input, anchor);\n\t\t\tinput.checked = /*values*/ ctx[1][/*key*/ ctx[6]];\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = [\n\t\t\t\t\tlisten(input, \"change\", input_change_handler),\n\t\t\t\t\tlisten(input, \"change\", /*OnChange*/ ctx[2])\n\t\t\t\t];\n\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(new_ctx, dirty) {\n\t\t\tctx = new_ctx;\n\n\t\t\tif (dirty & /*bot*/ 1 && input_id_value !== (input_id_value = /*makeID*/ ctx[3](/*key*/ ctx[6]))) {\n\t\t\t\tattr(input, \"id\", input_id_value);\n\t\t\t}\n\n\t\t\tif (dirty & /*values, Object, bot*/ 3) {\n\t\t\t\tinput.checked = /*values*/ ctx[1][/*key*/ ctx[6]];\n\t\t\t}\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(input);\n\t\t\tmounted = false;\n\t\t\trun_all(dispose);\n\t\t}\n\t};\n}\n\n// (41:4) {#if value.range}\nfunction create_if_block$c(ctx) {\n\tlet span;\n\tlet t0_value = /*values*/ ctx[1][/*key*/ ctx[6]] + \"\";\n\tlet t0;\n\tlet t1;\n\tlet input;\n\tlet input_id_value;\n\tlet input_min_value;\n\tlet input_max_value;\n\tlet mounted;\n\tlet dispose;\n\n\tfunction input_change_input_handler() {\n\t\t/*input_change_input_handler*/ ctx[4].call(input, /*key*/ ctx[6]);\n\t}\n\n\treturn {\n\t\tc() {\n\t\t\tspan = element(\"span\");\n\t\t\tt0 = text(t0_value);\n\t\t\tt1 = space();\n\t\t\tinput = element(\"input\");\n\t\t\tattr(span, \"class\", \"value svelte-1fu900w\");\n\t\t\tattr(input, \"id\", input_id_value = /*makeID*/ ctx[3](/*key*/ ctx[6]));\n\t\t\tattr(input, \"type\", \"range\");\n\t\t\tattr(input, \"min\", input_min_value = /*value*/ ctx[7].range.min);\n\t\t\tattr(input, \"max\", input_max_value = /*value*/ ctx[7].range.max);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, span, anchor);\n\t\t\tappend(span, t0);\n\t\t\tinsert(target, t1, anchor);\n\t\t\tinsert(target, input, anchor);\n\t\t\tset_input_value(input, /*values*/ ctx[1][/*key*/ ctx[6]]);\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = [\n\t\t\t\t\tlisten(input, \"change\", input_change_input_handler),\n\t\t\t\t\tlisten(input, \"input\", input_change_input_handler),\n\t\t\t\t\tlisten(input, \"change\", /*OnChange*/ ctx[2])\n\t\t\t\t];\n\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(new_ctx, dirty) {\n\t\t\tctx = new_ctx;\n\t\t\tif (dirty & /*values, bot*/ 3 && t0_value !== (t0_value = /*values*/ ctx[1][/*key*/ ctx[6]] + \"\")) set_data(t0, t0_value);\n\n\t\t\tif (dirty & /*bot*/ 1 && input_id_value !== (input_id_value = /*makeID*/ ctx[3](/*key*/ ctx[6]))) {\n\t\t\t\tattr(input, \"id\", input_id_value);\n\t\t\t}\n\n\t\t\tif (dirty & /*bot*/ 1 && input_min_value !== (input_min_value = /*value*/ ctx[7].range.min)) {\n\t\t\t\tattr(input, \"min\", input_min_value);\n\t\t\t}\n\n\t\t\tif (dirty & /*bot*/ 1 && input_max_value !== (input_max_value = /*value*/ ctx[7].range.max)) {\n\t\t\t\tattr(input, \"max\", input_max_value);\n\t\t\t}\n\n\t\t\tif (dirty & /*values, Object, bot*/ 3) {\n\t\t\t\tset_input_value(input, /*values*/ ctx[1][/*key*/ ctx[6]]);\n\t\t\t}\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(span);\n\t\t\tif (detaching) detach(t1);\n\t\t\tif (detaching) detach(input);\n\t\t\tmounted = false;\n\t\t\trun_all(dispose);\n\t\t}\n\t};\n}\n\n// (37:0) {#each Object.entries(bot.opts()) as [key, value]}\nfunction create_each_block$9(ctx) {\n\tlet div;\n\tlet label;\n\tlet t0_value = /*key*/ ctx[6] + \"\";\n\tlet t0;\n\tlet label_for_value;\n\tlet t1;\n\tlet t2;\n\n\tfunction select_block_type(ctx, dirty) {\n\t\tif (/*value*/ ctx[7].range) return create_if_block$c;\n\t\tif (typeof /*value*/ ctx[7].value === 'boolean') return create_if_block_1$5;\n\t}\n\n\tlet current_block_type = select_block_type(ctx);\n\tlet if_block = current_block_type && current_block_type(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tlabel = element(\"label\");\n\t\t\tt0 = text(t0_value);\n\t\t\tt1 = space();\n\t\t\tif (if_block) if_block.c();\n\t\t\tt2 = space();\n\t\t\tattr(label, \"for\", label_for_value = /*makeID*/ ctx[3](/*key*/ ctx[6]));\n\t\t\tattr(label, \"class\", \"svelte-1fu900w\");\n\t\t\tattr(div, \"class\", \"option svelte-1fu900w\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tappend(div, label);\n\t\t\tappend(label, t0);\n\t\t\tappend(div, t1);\n\t\t\tif (if_block) if_block.m(div, null);\n\t\t\tappend(div, t2);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*bot*/ 1 && t0_value !== (t0_value = /*key*/ ctx[6] + \"\")) set_data(t0, t0_value);\n\n\t\t\tif (dirty & /*bot*/ 1 && label_for_value !== (label_for_value = /*makeID*/ ctx[3](/*key*/ ctx[6]))) {\n\t\t\t\tattr(label, \"for\", label_for_value);\n\t\t\t}\n\n\t\t\tif (current_block_type === (current_block_type = select_block_type(ctx)) && if_block) {\n\t\t\t\tif_block.p(ctx, dirty);\n\t\t\t} else {\n\t\t\t\tif (if_block) if_block.d(1);\n\t\t\t\tif_block = current_block_type && current_block_type(ctx);\n\n\t\t\t\tif (if_block) {\n\t\t\t\t\tif_block.c();\n\t\t\t\t\tif_block.m(div, t2);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\n\t\t\tif (if_block) {\n\t\t\t\tif_block.d();\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction create_fragment$x(ctx) {\n\tlet each_1_anchor;\n\tlet each_value = Object.entries(/*bot*/ ctx[0].opts());\n\tlet each_blocks = [];\n\n\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\teach_blocks[i] = create_each_block$9(get_each_context$9(ctx, each_value, i));\n\t}\n\n\treturn {\n\t\tc() {\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].c();\n\t\t\t}\n\n\t\t\teach_1_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].m(target, anchor);\n\t\t\t}\n\n\t\t\tinsert(target, each_1_anchor, anchor);\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (dirty & /*makeID, Object, bot, values, OnChange*/ 15) {\n\t\t\t\teach_value = Object.entries(/*bot*/ ctx[0].opts());\n\t\t\t\tlet i;\n\n\t\t\t\tfor (i = 0; i < each_value.length; i += 1) {\n\t\t\t\t\tconst child_ctx = get_each_context$9(ctx, each_value, i);\n\n\t\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\t\teach_blocks[i].p(child_ctx, dirty);\n\t\t\t\t\t} else {\n\t\t\t\t\t\teach_blocks[i] = create_each_block$9(child_ctx);\n\t\t\t\t\t\teach_blocks[i].c();\n\t\t\t\t\t\teach_blocks[i].m(each_1_anchor.parentNode, each_1_anchor);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (; i < each_blocks.length; i += 1) {\n\t\t\t\t\teach_blocks[i].d(1);\n\t\t\t\t}\n\n\t\t\t\teach_blocks.length = each_value.length;\n\t\t\t}\n\t\t},\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tdestroy_each(each_blocks, detaching);\n\t\t\tif (detaching) detach(each_1_anchor);\n\t\t}\n\t};\n}\n\nfunction instance$x($$self, $$props, $$invalidate) {\n\tlet { bot } = $$props;\n\tlet values = {};\n\n\tfor (let [key, value] of Object.entries(bot.opts())) {\n\t\tvalues[key] = value.value;\n\t}\n\n\tfunction OnChange() {\n\t\tfor (let [key, value] of Object.entries(values)) {\n\t\t\tbot.setOpt(key, value);\n\t\t}\n\t}\n\n\tconst makeID = key => 'ai-option-' + key;\n\n\tfunction input_change_input_handler(key) {\n\t\tvalues[key] = to_number(this.value);\n\t\t$$invalidate(1, values);\n\t\t$$invalidate(0, bot);\n\t}\n\n\tfunction input_change_handler(key) {\n\t\tvalues[key] = this.checked;\n\t\t$$invalidate(1, values);\n\t\t$$invalidate(0, bot);\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif ('bot' in $$props) $$invalidate(0, bot = $$props.bot);\n\t};\n\n\treturn [\n\t\tbot,\n\t\tvalues,\n\t\tOnChange,\n\t\tmakeID,\n\t\tinput_change_input_handler,\n\t\tinput_change_handler\n\t];\n}\n\nclass Options extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$x, create_fragment$x, safe_not_equal, { bot: 0 }, add_css$o);\n\t}\n}\n\n/* src/client/debug/ai/AI.svelte generated by Svelte v3.41.0 */\n\nfunction add_css$p(target) {\n\tappend_styles(target, \"svelte-lifdi8\", \"ul.svelte-lifdi8{padding-left:0}li.svelte-lifdi8{list-style:none;margin:none;margin-bottom:5px}h3.svelte-lifdi8{text-transform:uppercase}label.svelte-lifdi8{color:#666}input[type='checkbox'].svelte-lifdi8{vertical-align:middle}\");\n}\n\nfunction get_each_context$a(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[7] = list[i];\n\treturn child_ctx;\n}\n\n// (202:4) {:else}\nfunction create_else_block$3(ctx) {\n\tlet p0;\n\tlet t1;\n\tlet p1;\n\n\treturn {\n\t\tc() {\n\t\t\tp0 = element(\"p\");\n\t\t\tp0.textContent = \"No bots available.\";\n\t\t\tt1 = space();\n\t\t\tp1 = element(\"p\");\n\n\t\t\tp1.innerHTML = `Follow the instructions\n        <a href=\"https://boardgame.io/documentation/#/tutorial?id=bots\" target=\"_blank\">here</a>\n        to set up bots.`;\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, p0, anchor);\n\t\t\tinsert(target, t1, anchor);\n\t\t\tinsert(target, p1, anchor);\n\t\t},\n\t\tp: noop,\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(p0);\n\t\t\tif (detaching) detach(t1);\n\t\t\tif (detaching) detach(p1);\n\t\t}\n\t};\n}\n\n// (200:4) {#if client.multiplayer}\nfunction create_if_block_5(ctx) {\n\tlet p;\n\n\treturn {\n\t\tc() {\n\t\t\tp = element(\"p\");\n\t\t\tp.textContent = \"The bot debugger is only available in singleplayer mode.\";\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, p, anchor);\n\t\t},\n\t\tp: noop,\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(p);\n\t\t}\n\t};\n}\n\n// (150:2) {#if client.game.ai && !client.multiplayer}\nfunction create_if_block$d(ctx) {\n\tlet section0;\n\tlet h30;\n\tlet t1;\n\tlet ul;\n\tlet li0;\n\tlet hotkey0;\n\tlet t2;\n\tlet li1;\n\tlet hotkey1;\n\tlet t3;\n\tlet li2;\n\tlet hotkey2;\n\tlet t4;\n\tlet section1;\n\tlet h31;\n\tlet t6;\n\tlet select;\n\tlet t7;\n\tlet show_if = Object.keys(/*bot*/ ctx[7].opts()).length;\n\tlet t8;\n\tlet if_block1_anchor;\n\tlet current;\n\tlet mounted;\n\tlet dispose;\n\n\thotkey0 = new Hotkey({\n\t\t\tprops: {\n\t\t\t\tvalue: \"1\",\n\t\t\t\tonPress: /*Reset*/ ctx[13],\n\t\t\t\tlabel: \"reset\"\n\t\t\t}\n\t\t});\n\n\thotkey1 = new Hotkey({\n\t\t\tprops: {\n\t\t\t\tvalue: \"2\",\n\t\t\t\tonPress: /*Step*/ ctx[11],\n\t\t\t\tlabel: \"play\"\n\t\t\t}\n\t\t});\n\n\thotkey2 = new Hotkey({\n\t\t\tprops: {\n\t\t\t\tvalue: \"3\",\n\t\t\t\tonPress: /*Simulate*/ ctx[12],\n\t\t\t\tlabel: \"simulate\"\n\t\t\t}\n\t\t});\n\n\tlet each_value = Object.keys(/*bots*/ ctx[8]);\n\tlet each_blocks = [];\n\n\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\teach_blocks[i] = create_each_block$a(get_each_context$a(ctx, each_value, i));\n\t}\n\n\tlet if_block0 = show_if && create_if_block_4(ctx);\n\tlet if_block1 = (/*botAction*/ ctx[5] || /*iterationCounter*/ ctx[3]) && create_if_block_1$6(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tsection0 = element(\"section\");\n\t\t\th30 = element(\"h3\");\n\t\t\th30.textContent = \"Controls\";\n\t\t\tt1 = space();\n\t\t\tul = element(\"ul\");\n\t\t\tli0 = element(\"li\");\n\t\t\tcreate_component(hotkey0.$$.fragment);\n\t\t\tt2 = space();\n\t\t\tli1 = element(\"li\");\n\t\t\tcreate_component(hotkey1.$$.fragment);\n\t\t\tt3 = space();\n\t\t\tli2 = element(\"li\");\n\t\t\tcreate_component(hotkey2.$$.fragment);\n\t\t\tt4 = space();\n\t\t\tsection1 = element(\"section\");\n\t\t\th31 = element(\"h3\");\n\t\t\th31.textContent = \"Bot\";\n\t\t\tt6 = space();\n\t\t\tselect = element(\"select\");\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].c();\n\t\t\t}\n\n\t\t\tt7 = space();\n\t\t\tif (if_block0) if_block0.c();\n\t\t\tt8 = space();\n\t\t\tif (if_block1) if_block1.c();\n\t\t\tif_block1_anchor = empty();\n\t\t\tattr(h30, \"class\", \"svelte-lifdi8\");\n\t\t\tattr(li0, \"class\", \"svelte-lifdi8\");\n\t\t\tattr(li1, \"class\", \"svelte-lifdi8\");\n\t\t\tattr(li2, \"class\", \"svelte-lifdi8\");\n\t\t\tattr(ul, \"class\", \"svelte-lifdi8\");\n\t\t\tattr(h31, \"class\", \"svelte-lifdi8\");\n\t\t\tif (/*selectedBot*/ ctx[4] === void 0) add_render_callback(() => /*select_change_handler*/ ctx[17].call(select));\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, section0, anchor);\n\t\t\tappend(section0, h30);\n\t\t\tappend(section0, t1);\n\t\t\tappend(section0, ul);\n\t\t\tappend(ul, li0);\n\t\t\tmount_component(hotkey0, li0, null);\n\t\t\tappend(ul, t2);\n\t\t\tappend(ul, li1);\n\t\t\tmount_component(hotkey1, li1, null);\n\t\t\tappend(ul, t3);\n\t\t\tappend(ul, li2);\n\t\t\tmount_component(hotkey2, li2, null);\n\t\t\tinsert(target, t4, anchor);\n\t\t\tinsert(target, section1, anchor);\n\t\t\tappend(section1, h31);\n\t\t\tappend(section1, t6);\n\t\t\tappend(section1, select);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].m(select, null);\n\t\t\t}\n\n\t\t\tselect_option(select, /*selectedBot*/ ctx[4]);\n\t\t\tinsert(target, t7, anchor);\n\t\t\tif (if_block0) if_block0.m(target, anchor);\n\t\t\tinsert(target, t8, anchor);\n\t\t\tif (if_block1) if_block1.m(target, anchor);\n\t\t\tinsert(target, if_block1_anchor, anchor);\n\t\t\tcurrent = true;\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = [\n\t\t\t\t\tlisten(select, \"change\", /*select_change_handler*/ ctx[17]),\n\t\t\t\t\tlisten(select, \"change\", /*ChangeBot*/ ctx[10])\n\t\t\t\t];\n\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*Object, bots*/ 256) {\n\t\t\t\teach_value = Object.keys(/*bots*/ ctx[8]);\n\t\t\t\tlet i;\n\n\t\t\t\tfor (i = 0; i < each_value.length; i += 1) {\n\t\t\t\t\tconst child_ctx = get_each_context$a(ctx, each_value, i);\n\n\t\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\t\teach_blocks[i].p(child_ctx, dirty);\n\t\t\t\t\t} else {\n\t\t\t\t\t\teach_blocks[i] = create_each_block$a(child_ctx);\n\t\t\t\t\t\teach_blocks[i].c();\n\t\t\t\t\t\teach_blocks[i].m(select, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (; i < each_blocks.length; i += 1) {\n\t\t\t\t\teach_blocks[i].d(1);\n\t\t\t\t}\n\n\t\t\t\teach_blocks.length = each_value.length;\n\t\t\t}\n\n\t\t\tif (dirty & /*selectedBot, Object, bots*/ 272) {\n\t\t\t\tselect_option(select, /*selectedBot*/ ctx[4]);\n\t\t\t}\n\n\t\t\tif (dirty & /*bot*/ 128) show_if = Object.keys(/*bot*/ ctx[7].opts()).length;\n\n\t\t\tif (show_if) {\n\t\t\t\tif (if_block0) {\n\t\t\t\t\tif_block0.p(ctx, dirty);\n\n\t\t\t\t\tif (dirty & /*bot*/ 128) {\n\t\t\t\t\t\ttransition_in(if_block0, 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif_block0 = create_if_block_4(ctx);\n\t\t\t\t\tif_block0.c();\n\t\t\t\t\ttransition_in(if_block0, 1);\n\t\t\t\t\tif_block0.m(t8.parentNode, t8);\n\t\t\t\t}\n\t\t\t} else if (if_block0) {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_block0, 1, 1, () => {\n\t\t\t\t\tif_block0 = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\n\t\t\tif (/*botAction*/ ctx[5] || /*iterationCounter*/ ctx[3]) {\n\t\t\t\tif (if_block1) {\n\t\t\t\t\tif_block1.p(ctx, dirty);\n\t\t\t\t} else {\n\t\t\t\t\tif_block1 = create_if_block_1$6(ctx);\n\t\t\t\t\tif_block1.c();\n\t\t\t\t\tif_block1.m(if_block1_anchor.parentNode, if_block1_anchor);\n\t\t\t\t}\n\t\t\t} else if (if_block1) {\n\t\t\t\tif_block1.d(1);\n\t\t\t\tif_block1 = null;\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(hotkey0.$$.fragment, local);\n\t\t\ttransition_in(hotkey1.$$.fragment, local);\n\t\t\ttransition_in(hotkey2.$$.fragment, local);\n\t\t\ttransition_in(if_block0);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(hotkey0.$$.fragment, local);\n\t\t\ttransition_out(hotkey1.$$.fragment, local);\n\t\t\ttransition_out(hotkey2.$$.fragment, local);\n\t\t\ttransition_out(if_block0);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(section0);\n\t\t\tdestroy_component(hotkey0);\n\t\t\tdestroy_component(hotkey1);\n\t\t\tdestroy_component(hotkey2);\n\t\t\tif (detaching) detach(t4);\n\t\t\tif (detaching) detach(section1);\n\t\t\tdestroy_each(each_blocks, detaching);\n\t\t\tif (detaching) detach(t7);\n\t\t\tif (if_block0) if_block0.d(detaching);\n\t\t\tif (detaching) detach(t8);\n\t\t\tif (if_block1) if_block1.d(detaching);\n\t\t\tif (detaching) detach(if_block1_anchor);\n\t\t\tmounted = false;\n\t\t\trun_all(dispose);\n\t\t}\n\t};\n}\n\n// (169:8) {#each Object.keys(bots) as bot}\nfunction create_each_block$a(ctx) {\n\tlet option;\n\tlet t_value = /*bot*/ ctx[7] + \"\";\n\tlet t;\n\tlet option_value_value;\n\n\treturn {\n\t\tc() {\n\t\t\toption = element(\"option\");\n\t\t\tt = text(t_value);\n\t\t\toption.__value = option_value_value = /*bot*/ ctx[7];\n\t\t\toption.value = option.__value;\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, option, anchor);\n\t\t\tappend(option, t);\n\t\t},\n\t\tp: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(option);\n\t\t}\n\t};\n}\n\n// (175:4) {#if Object.keys(bot.opts()).length}\nfunction create_if_block_4(ctx) {\n\tlet section;\n\tlet h3;\n\tlet t1;\n\tlet label;\n\tlet t3;\n\tlet input;\n\tlet t4;\n\tlet options;\n\tlet current;\n\tlet mounted;\n\tlet dispose;\n\toptions = new Options({ props: { bot: /*bot*/ ctx[7] } });\n\n\treturn {\n\t\tc() {\n\t\t\tsection = element(\"section\");\n\t\t\th3 = element(\"h3\");\n\t\t\th3.textContent = \"Options\";\n\t\t\tt1 = space();\n\t\t\tlabel = element(\"label\");\n\t\t\tlabel.textContent = \"debug\";\n\t\t\tt3 = space();\n\t\t\tinput = element(\"input\");\n\t\t\tt4 = space();\n\t\t\tcreate_component(options.$$.fragment);\n\t\t\tattr(h3, \"class\", \"svelte-lifdi8\");\n\t\t\tattr(label, \"for\", \"ai-option-debug\");\n\t\t\tattr(label, \"class\", \"svelte-lifdi8\");\n\t\t\tattr(input, \"id\", \"ai-option-debug\");\n\t\t\tattr(input, \"type\", \"checkbox\");\n\t\t\tattr(input, \"class\", \"svelte-lifdi8\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, section, anchor);\n\t\t\tappend(section, h3);\n\t\t\tappend(section, t1);\n\t\t\tappend(section, label);\n\t\t\tappend(section, t3);\n\t\t\tappend(section, input);\n\t\t\tinput.checked = /*debug*/ ctx[1];\n\t\t\tappend(section, t4);\n\t\t\tmount_component(options, section, null);\n\t\t\tcurrent = true;\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = [\n\t\t\t\t\tlisten(input, \"change\", /*input_change_handler*/ ctx[18]),\n\t\t\t\t\tlisten(input, \"change\", /*OnDebug*/ ctx[9])\n\t\t\t\t];\n\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*debug*/ 2) {\n\t\t\t\tinput.checked = /*debug*/ ctx[1];\n\t\t\t}\n\n\t\t\tconst options_changes = {};\n\t\t\tif (dirty & /*bot*/ 128) options_changes.bot = /*bot*/ ctx[7];\n\t\t\toptions.$set(options_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(options.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(options.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(section);\n\t\t\tdestroy_component(options);\n\t\t\tmounted = false;\n\t\t\trun_all(dispose);\n\t\t}\n\t};\n}\n\n// (184:4) {#if botAction || iterationCounter}\nfunction create_if_block_1$6(ctx) {\n\tlet section;\n\tlet h3;\n\tlet t1;\n\tlet t2;\n\tlet if_block0 = /*progress*/ ctx[2] && /*progress*/ ctx[2] < 1.0 && create_if_block_3$1(ctx);\n\tlet if_block1 = /*botAction*/ ctx[5] && create_if_block_2$4(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tsection = element(\"section\");\n\t\t\th3 = element(\"h3\");\n\t\t\th3.textContent = \"Result\";\n\t\t\tt1 = space();\n\t\t\tif (if_block0) if_block0.c();\n\t\t\tt2 = space();\n\t\t\tif (if_block1) if_block1.c();\n\t\t\tattr(h3, \"class\", \"svelte-lifdi8\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, section, anchor);\n\t\t\tappend(section, h3);\n\t\t\tappend(section, t1);\n\t\t\tif (if_block0) if_block0.m(section, null);\n\t\t\tappend(section, t2);\n\t\t\tif (if_block1) if_block1.m(section, null);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (/*progress*/ ctx[2] && /*progress*/ ctx[2] < 1.0) {\n\t\t\t\tif (if_block0) {\n\t\t\t\t\tif_block0.p(ctx, dirty);\n\t\t\t\t} else {\n\t\t\t\t\tif_block0 = create_if_block_3$1(ctx);\n\t\t\t\t\tif_block0.c();\n\t\t\t\t\tif_block0.m(section, t2);\n\t\t\t\t}\n\t\t\t} else if (if_block0) {\n\t\t\t\tif_block0.d(1);\n\t\t\t\tif_block0 = null;\n\t\t\t}\n\n\t\t\tif (/*botAction*/ ctx[5]) {\n\t\t\t\tif (if_block1) {\n\t\t\t\t\tif_block1.p(ctx, dirty);\n\t\t\t\t} else {\n\t\t\t\t\tif_block1 = create_if_block_2$4(ctx);\n\t\t\t\t\tif_block1.c();\n\t\t\t\t\tif_block1.m(section, null);\n\t\t\t\t}\n\t\t\t} else if (if_block1) {\n\t\t\t\tif_block1.d(1);\n\t\t\t\tif_block1 = null;\n\t\t\t}\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(section);\n\t\t\tif (if_block0) if_block0.d();\n\t\t\tif (if_block1) if_block1.d();\n\t\t}\n\t};\n}\n\n// (187:6) {#if progress && progress < 1.0}\nfunction create_if_block_3$1(ctx) {\n\tlet progress_1;\n\n\treturn {\n\t\tc() {\n\t\t\tprogress_1 = element(\"progress\");\n\t\t\tprogress_1.value = /*progress*/ ctx[2];\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, progress_1, anchor);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*progress*/ 4) {\n\t\t\t\tprogress_1.value = /*progress*/ ctx[2];\n\t\t\t}\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(progress_1);\n\t\t}\n\t};\n}\n\n// (191:6) {#if botAction}\nfunction create_if_block_2$4(ctx) {\n\tlet ul;\n\tlet li0;\n\tlet t0;\n\tlet t1;\n\tlet t2;\n\tlet li1;\n\tlet t3;\n\tlet t4_value = JSON.stringify(/*botActionArgs*/ ctx[6]) + \"\";\n\tlet t4;\n\n\treturn {\n\t\tc() {\n\t\t\tul = element(\"ul\");\n\t\t\tli0 = element(\"li\");\n\t\t\tt0 = text(\"Action: \");\n\t\t\tt1 = text(/*botAction*/ ctx[5]);\n\t\t\tt2 = space();\n\t\t\tli1 = element(\"li\");\n\t\t\tt3 = text(\"Args: \");\n\t\t\tt4 = text(t4_value);\n\t\t\tattr(li0, \"class\", \"svelte-lifdi8\");\n\t\t\tattr(li1, \"class\", \"svelte-lifdi8\");\n\t\t\tattr(ul, \"class\", \"svelte-lifdi8\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, ul, anchor);\n\t\t\tappend(ul, li0);\n\t\t\tappend(li0, t0);\n\t\t\tappend(li0, t1);\n\t\t\tappend(ul, t2);\n\t\t\tappend(ul, li1);\n\t\t\tappend(li1, t3);\n\t\t\tappend(li1, t4);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*botAction*/ 32) set_data(t1, /*botAction*/ ctx[5]);\n\t\t\tif (dirty & /*botActionArgs*/ 64 && t4_value !== (t4_value = JSON.stringify(/*botActionArgs*/ ctx[6]) + \"\")) set_data(t4, t4_value);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(ul);\n\t\t}\n\t};\n}\n\nfunction create_fragment$y(ctx) {\n\tlet section;\n\tlet current_block_type_index;\n\tlet if_block;\n\tlet current;\n\tlet mounted;\n\tlet dispose;\n\tconst if_block_creators = [create_if_block$d, create_if_block_5, create_else_block$3];\n\tconst if_blocks = [];\n\n\tfunction select_block_type(ctx, dirty) {\n\t\tif (/*client*/ ctx[0].game.ai && !/*client*/ ctx[0].multiplayer) return 0;\n\t\tif (/*client*/ ctx[0].multiplayer) return 1;\n\t\treturn 2;\n\t}\n\n\tcurrent_block_type_index = select_block_type(ctx);\n\tif_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tsection = element(\"section\");\n\t\t\tif_block.c();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, section, anchor);\n\t\t\tif_blocks[current_block_type_index].m(section, null);\n\t\t\tcurrent = true;\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = listen(window, \"keydown\", /*OnKeyDown*/ ctx[14]);\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tlet previous_block_index = current_block_type_index;\n\t\t\tcurrent_block_type_index = select_block_type(ctx);\n\n\t\t\tif (current_block_type_index === previous_block_index) {\n\t\t\t\tif_blocks[current_block_type_index].p(ctx, dirty);\n\t\t\t} else {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_blocks[previous_block_index], 1, 1, () => {\n\t\t\t\t\tif_blocks[previous_block_index] = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t\tif_block = if_blocks[current_block_type_index];\n\n\t\t\t\tif (!if_block) {\n\t\t\t\t\tif_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\t\t\t\t\tif_block.c();\n\t\t\t\t} else {\n\t\t\t\t\tif_block.p(ctx, dirty);\n\t\t\t\t}\n\n\t\t\t\ttransition_in(if_block, 1);\n\t\t\t\tif_block.m(section, null);\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(section);\n\t\t\tif_blocks[current_block_type_index].d();\n\t\t\tmounted = false;\n\t\t\tdispose();\n\t\t}\n\t};\n}\n\nfunction instance$y($$self, $$props, $$invalidate) {\n\tlet { client } = $$props;\n\tlet { clientManager } = $$props;\n\tlet { ToggleVisibility } = $$props;\n\tconst { secondaryPane } = getContext('secondaryPane');\n\tconst bots = { 'MCTS': _ai_3099ce9a_js__WEBPACK_IMPORTED_MODULE_3__.M, 'Random': _ai_3099ce9a_js__WEBPACK_IMPORTED_MODULE_3__.R };\n\tlet debug = false;\n\tlet progress = null;\n\tlet iterationCounter = 0;\n\tlet metadata = null;\n\n\tconst iterationCallback = ({ iterationCounter: c, numIterations, metadata: m }) => {\n\t\t$$invalidate(3, iterationCounter = c);\n\t\t$$invalidate(2, progress = c / numIterations);\n\t\tmetadata = m;\n\n\t\tif (debug && metadata) {\n\t\t\tsecondaryPane.set({ component: MCTS, metadata });\n\t\t}\n\t};\n\n\tfunction OnDebug() {\n\t\tif (debug && metadata) {\n\t\t\tsecondaryPane.set({ component: MCTS, metadata });\n\t\t} else {\n\t\t\tsecondaryPane.set(null);\n\t\t}\n\t}\n\n\tlet bot;\n\n\tif (client.game.ai) {\n\t\tbot = new _ai_3099ce9a_js__WEBPACK_IMPORTED_MODULE_3__.M({\n\t\t\t\tgame: client.game,\n\t\t\t\tenumerate: client.game.ai.enumerate,\n\t\t\t\titerationCallback\n\t\t\t});\n\n\t\tbot.setOpt('async', true);\n\t}\n\n\tlet selectedBot;\n\tlet botAction;\n\tlet botActionArgs;\n\n\tfunction ChangeBot() {\n\t\tconst botConstructor = bots[selectedBot];\n\n\t\t$$invalidate(7, bot = new botConstructor({\n\t\t\t\tgame: client.game,\n\t\t\t\tenumerate: client.game.ai.enumerate,\n\t\t\t\titerationCallback\n\t\t\t}));\n\n\t\tbot.setOpt('async', true);\n\t\t$$invalidate(5, botAction = null);\n\t\tmetadata = null;\n\t\tsecondaryPane.set(null);\n\t\t$$invalidate(3, iterationCounter = 0);\n\t}\n\n\tasync function Step$1() {\n\t\t$$invalidate(5, botAction = null);\n\t\tmetadata = null;\n\t\t$$invalidate(3, iterationCounter = 0);\n\t\tconst t = await (0,_ai_3099ce9a_js__WEBPACK_IMPORTED_MODULE_3__.S)(client, bot);\n\n\t\tif (t) {\n\t\t\t$$invalidate(5, botAction = t.payload.type);\n\t\t\t$$invalidate(6, botActionArgs = t.payload.args);\n\t\t}\n\t}\n\n\tfunction Simulate(iterations = 10000, sleepTimeout = 100) {\n\t\t$$invalidate(5, botAction = null);\n\t\tmetadata = null;\n\t\t$$invalidate(3, iterationCounter = 0);\n\n\t\tconst step = async () => {\n\t\t\tfor (let i = 0; i < iterations; i++) {\n\t\t\t\tconst action = await (0,_ai_3099ce9a_js__WEBPACK_IMPORTED_MODULE_3__.S)(client, bot);\n\t\t\t\tif (!action) break;\n\t\t\t\tawait new Promise(resolve => setTimeout(resolve, sleepTimeout));\n\t\t\t}\n\t\t};\n\n\t\treturn step();\n\t}\n\n\tfunction Exit() {\n\t\tclient.overrideGameState(null);\n\t\tsecondaryPane.set(null);\n\t\t$$invalidate(1, debug = false);\n\t}\n\n\tfunction Reset() {\n\t\tclient.reset();\n\t\t$$invalidate(5, botAction = null);\n\t\tmetadata = null;\n\t\t$$invalidate(3, iterationCounter = 0);\n\t\tExit();\n\t}\n\n\tfunction OnKeyDown(e) {\n\t\t// ESC.\n\t\tif (e.keyCode == 27) {\n\t\t\tExit();\n\t\t}\n\t}\n\n\tonDestroy(Exit);\n\n\tfunction select_change_handler() {\n\t\tselectedBot = select_value(this);\n\t\t$$invalidate(4, selectedBot);\n\t\t$$invalidate(8, bots);\n\t}\n\n\tfunction input_change_handler() {\n\t\tdebug = this.checked;\n\t\t$$invalidate(1, debug);\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif ('client' in $$props) $$invalidate(0, client = $$props.client);\n\t\tif ('clientManager' in $$props) $$invalidate(15, clientManager = $$props.clientManager);\n\t\tif ('ToggleVisibility' in $$props) $$invalidate(16, ToggleVisibility = $$props.ToggleVisibility);\n\t};\n\n\treturn [\n\t\tclient,\n\t\tdebug,\n\t\tprogress,\n\t\titerationCounter,\n\t\tselectedBot,\n\t\tbotAction,\n\t\tbotActionArgs,\n\t\tbot,\n\t\tbots,\n\t\tOnDebug,\n\t\tChangeBot,\n\t\tStep$1,\n\t\tSimulate,\n\t\tReset,\n\t\tOnKeyDown,\n\t\tclientManager,\n\t\tToggleVisibility,\n\t\tselect_change_handler,\n\t\tinput_change_handler\n\t];\n}\n\nclass AI extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(\n\t\t\tthis,\n\t\t\toptions,\n\t\t\tinstance$y,\n\t\t\tcreate_fragment$y,\n\t\t\tsafe_not_equal,\n\t\t\t{\n\t\t\t\tclient: 0,\n\t\t\t\tclientManager: 15,\n\t\t\t\tToggleVisibility: 16\n\t\t\t},\n\t\t\tadd_css$p\n\t\t);\n\t}\n}\n\n/* src/client/debug/Debug.svelte generated by Svelte v3.41.0 */\n\nfunction add_css$q(target) {\n\tappend_styles(target, \"svelte-8ymctk\", \".debug-panel.svelte-8ymctk.svelte-8ymctk{position:fixed;color:#555;font-family:monospace;right:0;top:0;height:100%;font-size:14px;opacity:0.9;z-index:99999}.panel.svelte-8ymctk.svelte-8ymctk{display:flex;position:relative;flex-direction:row;height:100%}.visibility-toggle.svelte-8ymctk.svelte-8ymctk{position:absolute;box-sizing:border-box;top:7px;border:1px solid #ccc;border-radius:5px;width:48px;height:48px;padding:8px;background:white;color:#555;box-shadow:0 0 5px rgba(0, 0, 0, 0.2)}.visibility-toggle.svelte-8ymctk.svelte-8ymctk:hover,.visibility-toggle.svelte-8ymctk.svelte-8ymctk:focus{background:#eee}.opener.svelte-8ymctk.svelte-8ymctk{right:10px}.closer.svelte-8ymctk.svelte-8ymctk{left:-326px}@keyframes svelte-8ymctk-rotateFromZero{from{transform:rotateZ(0deg)}to{transform:rotateZ(180deg)}}.icon.svelte-8ymctk.svelte-8ymctk{display:flex;height:100%;animation:svelte-8ymctk-rotateFromZero 0.4s cubic-bezier(0.68, -0.55, 0.27, 1.55) 0s 1\\n      normal forwards}.closer.svelte-8ymctk .icon.svelte-8ymctk{animation-direction:reverse}.pane.svelte-8ymctk.svelte-8ymctk{flex-grow:2;overflow-x:hidden;overflow-y:scroll;background:#fefefe;padding:20px;border-left:1px solid #ccc;box-shadow:-1px 0 5px rgba(0, 0, 0, 0.2);box-sizing:border-box;width:280px}.secondary-pane.svelte-8ymctk.svelte-8ymctk{background:#fefefe;overflow-y:scroll}.debug-panel.svelte-8ymctk button,.debug-panel.svelte-8ymctk select{cursor:pointer;font-size:14px;font-family:monospace}.debug-panel.svelte-8ymctk select{background:#eee;border:1px solid #bbb;color:#555;padding:3px;border-radius:3px}.debug-panel.svelte-8ymctk section{margin-bottom:20px}.debug-panel.svelte-8ymctk .screen-reader-only{clip:rect(0 0 0 0);clip-path:inset(50%);height:1px;overflow:hidden;position:absolute;white-space:nowrap;width:1px}\");\n}\n\n// (199:2) {:else}\nfunction create_else_block$4(ctx) {\n\tlet div1;\n\tlet t0;\n\tlet menu;\n\tlet t1;\n\tlet div0;\n\tlet switch_instance;\n\tlet t2;\n\tlet div1_transition;\n\tlet current;\n\tlet if_block0 = /*showToggleButton*/ ctx[10] && create_if_block_3$2(ctx);\n\n\tmenu = new Menu({\n\t\t\tprops: {\n\t\t\t\tpanes: /*panes*/ ctx[6],\n\t\t\t\tpane: /*pane*/ ctx[2]\n\t\t\t}\n\t\t});\n\n\tmenu.$on(\"change\", /*MenuChange*/ ctx[8]);\n\tvar switch_value = /*panes*/ ctx[6][/*pane*/ ctx[2]].component;\n\n\tfunction switch_props(ctx) {\n\t\treturn {\n\t\t\tprops: {\n\t\t\t\tclient: /*client*/ ctx[4],\n\t\t\t\tclientManager: /*clientManager*/ ctx[0],\n\t\t\t\tToggleVisibility: /*ToggleVisibility*/ ctx[9]\n\t\t\t}\n\t\t};\n\t}\n\n\tif (switch_value) {\n\t\tswitch_instance = new switch_value(switch_props(ctx));\n\t}\n\n\tlet if_block1 = /*$secondaryPane*/ ctx[5] && create_if_block_2$5(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tdiv1 = element(\"div\");\n\t\t\tif (if_block0) if_block0.c();\n\t\t\tt0 = space();\n\t\t\tcreate_component(menu.$$.fragment);\n\t\t\tt1 = space();\n\t\t\tdiv0 = element(\"div\");\n\t\t\tif (switch_instance) create_component(switch_instance.$$.fragment);\n\t\t\tt2 = space();\n\t\t\tif (if_block1) if_block1.c();\n\t\t\tattr(div0, \"class\", \"pane svelte-8ymctk\");\n\t\t\tattr(div0, \"role\", \"region\");\n\t\t\tattr(div0, \"aria-label\", /*pane*/ ctx[2]);\n\t\t\tattr(div0, \"tabindex\", \"-1\");\n\t\t\tattr(div1, \"class\", \"panel svelte-8ymctk\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div1, anchor);\n\t\t\tif (if_block0) if_block0.m(div1, null);\n\t\t\tappend(div1, t0);\n\t\t\tmount_component(menu, div1, null);\n\t\t\tappend(div1, t1);\n\t\t\tappend(div1, div0);\n\n\t\t\tif (switch_instance) {\n\t\t\t\tmount_component(switch_instance, div0, null);\n\t\t\t}\n\n\t\t\t/*div0_binding*/ ctx[16](div0);\n\t\t\tappend(div1, t2);\n\t\t\tif (if_block1) if_block1.m(div1, null);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(new_ctx, dirty) {\n\t\t\tctx = new_ctx;\n\t\t\tif (/*showToggleButton*/ ctx[10]) if_block0.p(ctx, dirty);\n\t\t\tconst menu_changes = {};\n\t\t\tif (dirty & /*pane*/ 4) menu_changes.pane = /*pane*/ ctx[2];\n\t\t\tmenu.$set(menu_changes);\n\t\t\tconst switch_instance_changes = {};\n\t\t\tif (dirty & /*client*/ 16) switch_instance_changes.client = /*client*/ ctx[4];\n\t\t\tif (dirty & /*clientManager*/ 1) switch_instance_changes.clientManager = /*clientManager*/ ctx[0];\n\n\t\t\tif (switch_value !== (switch_value = /*panes*/ ctx[6][/*pane*/ ctx[2]].component)) {\n\t\t\t\tif (switch_instance) {\n\t\t\t\t\tgroup_outros();\n\t\t\t\t\tconst old_component = switch_instance;\n\n\t\t\t\t\ttransition_out(old_component.$$.fragment, 1, 0, () => {\n\t\t\t\t\t\tdestroy_component(old_component, 1);\n\t\t\t\t\t});\n\n\t\t\t\t\tcheck_outros();\n\t\t\t\t}\n\n\t\t\t\tif (switch_value) {\n\t\t\t\t\tswitch_instance = new switch_value(switch_props(ctx));\n\t\t\t\t\tcreate_component(switch_instance.$$.fragment);\n\t\t\t\t\ttransition_in(switch_instance.$$.fragment, 1);\n\t\t\t\t\tmount_component(switch_instance, div0, null);\n\t\t\t\t} else {\n\t\t\t\t\tswitch_instance = null;\n\t\t\t\t}\n\t\t\t} else if (switch_value) {\n\t\t\t\tswitch_instance.$set(switch_instance_changes);\n\t\t\t}\n\n\t\t\tif (!current || dirty & /*pane*/ 4) {\n\t\t\t\tattr(div0, \"aria-label\", /*pane*/ ctx[2]);\n\t\t\t}\n\n\t\t\tif (/*$secondaryPane*/ ctx[5]) {\n\t\t\t\tif (if_block1) {\n\t\t\t\t\tif_block1.p(ctx, dirty);\n\n\t\t\t\t\tif (dirty & /*$secondaryPane*/ 32) {\n\t\t\t\t\t\ttransition_in(if_block1, 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif_block1 = create_if_block_2$5(ctx);\n\t\t\t\t\tif_block1.c();\n\t\t\t\t\ttransition_in(if_block1, 1);\n\t\t\t\t\tif_block1.m(div1, null);\n\t\t\t\t}\n\t\t\t} else if (if_block1) {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_block1, 1, 1, () => {\n\t\t\t\t\tif_block1 = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block0);\n\t\t\ttransition_in(menu.$$.fragment, local);\n\t\t\tif (switch_instance) transition_in(switch_instance.$$.fragment, local);\n\t\t\ttransition_in(if_block1);\n\n\t\t\tadd_render_callback(() => {\n\t\t\t\tif (!div1_transition) div1_transition = create_bidirectional_transition(div1, fly, { x: 400, .../*transitionOpts*/ ctx[12] }, true);\n\t\t\t\tdiv1_transition.run(1);\n\t\t\t});\n\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block0);\n\t\t\ttransition_out(menu.$$.fragment, local);\n\t\t\tif (switch_instance) transition_out(switch_instance.$$.fragment, local);\n\t\t\ttransition_out(if_block1);\n\t\t\tif (!div1_transition) div1_transition = create_bidirectional_transition(div1, fly, { x: 400, .../*transitionOpts*/ ctx[12] }, false);\n\t\t\tdiv1_transition.run(0);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div1);\n\t\t\tif (if_block0) if_block0.d();\n\t\t\tdestroy_component(menu);\n\t\t\tif (switch_instance) destroy_component(switch_instance);\n\t\t\t/*div0_binding*/ ctx[16](null);\n\t\t\tif (if_block1) if_block1.d();\n\t\t\tif (detaching && div1_transition) div1_transition.end();\n\t\t}\n\t};\n}\n\n// (185:2) {#if !visible}\nfunction create_if_block$e(ctx) {\n\tlet if_block_anchor;\n\tlet current;\n\tlet if_block = /*showToggleButton*/ ctx[10] && create_if_block_1$7(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tif (if_block) if_block.c();\n\t\t\tif_block_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tif (if_block) if_block.m(target, anchor);\n\t\t\tinsert(target, if_block_anchor, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (/*showToggleButton*/ ctx[10]) if_block.p(ctx, dirty);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (if_block) if_block.d(detaching);\n\t\t\tif (detaching) detach(if_block_anchor);\n\t\t}\n\t};\n}\n\n// (201:6) {#if showToggleButton}\nfunction create_if_block_3$2(ctx) {\n\tlet button;\n\tlet span;\n\tlet chevron;\n\tlet button_intro;\n\tlet button_outro;\n\tlet current;\n\tlet mounted;\n\tlet dispose;\n\tchevron = new FaChevronRight({});\n\n\treturn {\n\t\tc() {\n\t\t\tbutton = element(\"button\");\n\t\t\tspan = element(\"span\");\n\t\t\tcreate_component(chevron.$$.fragment);\n\t\t\tattr(span, \"class\", \"icon svelte-8ymctk\");\n\t\t\tattr(span, \"aria-hidden\", \"true\");\n\t\t\tattr(button, \"class\", \"visibility-toggle closer svelte-8ymctk\");\n\t\t\tattr(button, \"title\", \"Hide Debug Panel\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, button, anchor);\n\t\t\tappend(button, span);\n\t\t\tmount_component(chevron, span, null);\n\t\t\tcurrent = true;\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = listen(button, \"click\", /*ToggleVisibility*/ ctx[9]);\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp: noop,\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(chevron.$$.fragment, local);\n\n\t\t\tadd_render_callback(() => {\n\t\t\t\tif (button_outro) button_outro.end(1);\n\t\t\t\tbutton_intro = create_in_transition(button, /*receive*/ ctx[14], { key: 'toggle' });\n\t\t\t\tbutton_intro.start();\n\t\t\t});\n\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(chevron.$$.fragment, local);\n\t\t\tif (button_intro) button_intro.invalidate();\n\t\t\tbutton_outro = create_out_transition(button, /*send*/ ctx[13], { key: 'toggle' });\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(button);\n\t\t\tdestroy_component(chevron);\n\t\t\tif (detaching && button_outro) button_outro.end();\n\t\t\tmounted = false;\n\t\t\tdispose();\n\t\t}\n\t};\n}\n\n// (229:6) {#if $secondaryPane}\nfunction create_if_block_2$5(ctx) {\n\tlet div;\n\tlet switch_instance;\n\tlet current;\n\tvar switch_value = /*$secondaryPane*/ ctx[5].component;\n\n\tfunction switch_props(ctx) {\n\t\treturn {\n\t\t\tprops: {\n\t\t\t\tmetadata: /*$secondaryPane*/ ctx[5].metadata\n\t\t\t}\n\t\t};\n\t}\n\n\tif (switch_value) {\n\t\tswitch_instance = new switch_value(switch_props(ctx));\n\t}\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tif (switch_instance) create_component(switch_instance.$$.fragment);\n\t\t\tattr(div, \"class\", \"secondary-pane svelte-8ymctk\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\n\t\t\tif (switch_instance) {\n\t\t\t\tmount_component(switch_instance, div, null);\n\t\t\t}\n\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tconst switch_instance_changes = {};\n\t\t\tif (dirty & /*$secondaryPane*/ 32) switch_instance_changes.metadata = /*$secondaryPane*/ ctx[5].metadata;\n\n\t\t\tif (switch_value !== (switch_value = /*$secondaryPane*/ ctx[5].component)) {\n\t\t\t\tif (switch_instance) {\n\t\t\t\t\tgroup_outros();\n\t\t\t\t\tconst old_component = switch_instance;\n\n\t\t\t\t\ttransition_out(old_component.$$.fragment, 1, 0, () => {\n\t\t\t\t\t\tdestroy_component(old_component, 1);\n\t\t\t\t\t});\n\n\t\t\t\t\tcheck_outros();\n\t\t\t\t}\n\n\t\t\t\tif (switch_value) {\n\t\t\t\t\tswitch_instance = new switch_value(switch_props(ctx));\n\t\t\t\t\tcreate_component(switch_instance.$$.fragment);\n\t\t\t\t\ttransition_in(switch_instance.$$.fragment, 1);\n\t\t\t\t\tmount_component(switch_instance, div, null);\n\t\t\t\t} else {\n\t\t\t\t\tswitch_instance = null;\n\t\t\t\t}\n\t\t\t} else if (switch_value) {\n\t\t\t\tswitch_instance.$set(switch_instance_changes);\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\tif (switch_instance) transition_in(switch_instance.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\tif (switch_instance) transition_out(switch_instance.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\t\t\tif (switch_instance) destroy_component(switch_instance);\n\t\t}\n\t};\n}\n\n// (186:4) {#if showToggleButton}\nfunction create_if_block_1$7(ctx) {\n\tlet button;\n\tlet span;\n\tlet chevron;\n\tlet button_intro;\n\tlet button_outro;\n\tlet current;\n\tlet mounted;\n\tlet dispose;\n\tchevron = new FaChevronRight({});\n\n\treturn {\n\t\tc() {\n\t\t\tbutton = element(\"button\");\n\t\t\tspan = element(\"span\");\n\t\t\tcreate_component(chevron.$$.fragment);\n\t\t\tattr(span, \"class\", \"icon svelte-8ymctk\");\n\t\t\tattr(span, \"aria-hidden\", \"true\");\n\t\t\tattr(button, \"class\", \"visibility-toggle opener svelte-8ymctk\");\n\t\t\tattr(button, \"title\", \"Show Debug Panel\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, button, anchor);\n\t\t\tappend(button, span);\n\t\t\tmount_component(chevron, span, null);\n\t\t\tcurrent = true;\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = listen(button, \"click\", /*ToggleVisibility*/ ctx[9]);\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp: noop,\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(chevron.$$.fragment, local);\n\n\t\t\tadd_render_callback(() => {\n\t\t\t\tif (button_outro) button_outro.end(1);\n\t\t\t\tbutton_intro = create_in_transition(button, /*receive*/ ctx[14], { key: 'toggle' });\n\t\t\t\tbutton_intro.start();\n\t\t\t});\n\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(chevron.$$.fragment, local);\n\t\t\tif (button_intro) button_intro.invalidate();\n\t\t\tbutton_outro = create_out_transition(button, /*send*/ ctx[13], { key: 'toggle' });\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(button);\n\t\t\tdestroy_component(chevron);\n\t\t\tif (detaching && button_outro) button_outro.end();\n\t\t\tmounted = false;\n\t\t\tdispose();\n\t\t}\n\t};\n}\n\nfunction create_fragment$z(ctx) {\n\tlet section;\n\tlet current_block_type_index;\n\tlet if_block;\n\tlet current;\n\tlet mounted;\n\tlet dispose;\n\tconst if_block_creators = [create_if_block$e, create_else_block$4];\n\tconst if_blocks = [];\n\n\tfunction select_block_type(ctx, dirty) {\n\t\tif (!/*visible*/ ctx[3]) return 0;\n\t\treturn 1;\n\t}\n\n\tcurrent_block_type_index = select_block_type(ctx);\n\tif_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tsection = element(\"section\");\n\t\t\tif_block.c();\n\t\t\tattr(section, \"aria-label\", \"boardgame.io Debug Panel\");\n\t\t\tattr(section, \"class\", \"debug-panel svelte-8ymctk\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, section, anchor);\n\t\t\tif_blocks[current_block_type_index].m(section, null);\n\t\t\tcurrent = true;\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = listen(window, \"keypress\", /*Keypress*/ ctx[11]);\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tlet previous_block_index = current_block_type_index;\n\t\t\tcurrent_block_type_index = select_block_type(ctx);\n\n\t\t\tif (current_block_type_index === previous_block_index) {\n\t\t\t\tif_blocks[current_block_type_index].p(ctx, dirty);\n\t\t\t} else {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_blocks[previous_block_index], 1, 1, () => {\n\t\t\t\t\tif_blocks[previous_block_index] = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t\tif_block = if_blocks[current_block_type_index];\n\n\t\t\t\tif (!if_block) {\n\t\t\t\t\tif_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\t\t\t\t\tif_block.c();\n\t\t\t\t} else {\n\t\t\t\t\tif_block.p(ctx, dirty);\n\t\t\t\t}\n\n\t\t\t\ttransition_in(if_block, 1);\n\t\t\t\tif_block.m(section, null);\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(section);\n\t\t\tif_blocks[current_block_type_index].d();\n\t\t\tmounted = false;\n\t\t\tdispose();\n\t\t}\n\t};\n}\n\nfunction instance$z($$self, $$props, $$invalidate) {\n\tlet client;\n\n\tlet $clientManager,\n\t\t$$unsubscribe_clientManager = noop,\n\t\t$$subscribe_clientManager = () => ($$unsubscribe_clientManager(), $$unsubscribe_clientManager = subscribe(clientManager, $$value => $$invalidate(15, $clientManager = $$value)), clientManager);\n\n\tlet $secondaryPane;\n\t$$self.$$.on_destroy.push(() => $$unsubscribe_clientManager());\n\tlet { clientManager } = $$props;\n\t$$subscribe_clientManager();\n\n\tconst panes = {\n\t\tmain: {\n\t\t\tlabel: 'Main',\n\t\t\tshortcut: 'm',\n\t\t\tcomponent: Main\n\t\t},\n\t\tlog: {\n\t\t\tlabel: 'Log',\n\t\t\tshortcut: 'l',\n\t\t\tcomponent: Log\n\t\t},\n\t\tinfo: {\n\t\t\tlabel: 'Info',\n\t\t\tshortcut: 'i',\n\t\t\tcomponent: Info\n\t\t},\n\t\tai: {\n\t\t\tlabel: 'AI',\n\t\t\tshortcut: 'a',\n\t\t\tcomponent: AI\n\t\t}\n\t};\n\n\tconst disableHotkeys = writable(false);\n\tconst secondaryPane = writable(null);\n\tcomponent_subscribe($$self, secondaryPane, value => $$invalidate(5, $secondaryPane = value));\n\tsetContext('hotkeys', { disableHotkeys });\n\tsetContext('secondaryPane', { secondaryPane });\n\tlet paneDiv;\n\tlet pane = 'main';\n\n\tfunction MenuChange(e) {\n\t\t$$invalidate(2, pane = e.detail);\n\t\tpaneDiv.focus();\n\t}\n\n\t// Toggle debugger visibilty\n\tfunction ToggleVisibility() {\n\t\t$$invalidate(3, visible = !visible);\n\t}\n\n\tconst debugOpt = $clientManager.client.debugOpt;\n\tlet visible = !debugOpt || !debugOpt.collapseOnLoad;\n\tconst showToggleButton = !debugOpt || !debugOpt.hideToggleButton;\n\n\tfunction Keypress(e) {\n\t\tif (e.key == '.') {\n\t\t\tToggleVisibility();\n\t\t\treturn;\n\t\t}\n\n\t\t// Set displayed pane\n\t\tif (!visible) return;\n\n\t\tObject.entries(panes).forEach(([key, { shortcut }]) => {\n\t\t\tif (e.key == shortcut) {\n\t\t\t\t$$invalidate(2, pane = key);\n\t\t\t}\n\t\t});\n\t}\n\n\tconst transitionOpts = { duration: 150, easing: cubicOut };\n\tconst [send, receive] = crossfade(transitionOpts);\n\n\tfunction div0_binding($$value) {\n\t\tbinding_callbacks[$$value ? 'unshift' : 'push'](() => {\n\t\t\tpaneDiv = $$value;\n\t\t\t$$invalidate(1, paneDiv);\n\t\t});\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif ('clientManager' in $$props) $$subscribe_clientManager($$invalidate(0, clientManager = $$props.clientManager));\n\t};\n\n\t$$self.$$.update = () => {\n\t\tif ($$self.$$.dirty & /*$clientManager*/ 32768) {\n\t\t\t $$invalidate(4, client = $clientManager.client);\n\t\t}\n\t};\n\n\treturn [\n\t\tclientManager,\n\t\tpaneDiv,\n\t\tpane,\n\t\tvisible,\n\t\tclient,\n\t\t$secondaryPane,\n\t\tpanes,\n\t\tsecondaryPane,\n\t\tMenuChange,\n\t\tToggleVisibility,\n\t\tshowToggleButton,\n\t\tKeypress,\n\t\ttransitionOpts,\n\t\tsend,\n\t\treceive,\n\t\t$clientManager,\n\t\tdiv0_binding\n\t];\n}\n\nclass Debug extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$z, create_fragment$z, safe_not_equal, { clientManager: 0 }, add_css$q);\n\t}\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/boardgame.io/dist/esm/Debug-fd09b8bc.js\n"));

/***/ }),

/***/ "./node_modules/boardgame.io/dist/esm/ai-3099ce9a.js":
/*!***********************************************************!*\
  !*** ./node_modules/boardgame.io/dist/esm/ai-3099ce9a.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"B\": function() { return /* binding */ Bot; },\n/* harmony export */   \"M\": function() { return /* binding */ MCTSBot; },\n/* harmony export */   \"R\": function() { return /* binding */ RandomBot; },\n/* harmony export */   \"S\": function() { return /* binding */ Step; },\n/* harmony export */   \"a\": function() { return /* binding */ Simulate; }\n/* harmony export */ });\n/* harmony import */ var _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./turn-order-0b7dce3d.js */ \"./node_modules/boardgame.io/dist/esm/turn-order-0b7dce3d.js\");\n/* harmony import */ var _plugin_random_087f861e_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./plugin-random-087f861e.js */ \"./node_modules/boardgame.io/dist/esm/plugin-random-087f861e.js\");\n/* harmony import */ var _reducer_07c7b307_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./reducer-07c7b307.js */ \"./node_modules/boardgame.io/dist/esm/reducer-07c7b307.js\");\n/* harmony import */ var setimmediate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! setimmediate */ \"./node_modules/next/dist/compiled/setimmediate/setImmediate.js\");\n/* harmony import */ var setimmediate__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(setimmediate__WEBPACK_IMPORTED_MODULE_0__);\n\n\n\n\n\n/*\r\n * Copyright 2018 The boardgame.io Authors\r\n *\r\n * Use of this source code is governed by a MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n */\r\n/**\r\n * Base class that bots can extend.\r\n */\r\nclass Bot {\r\n    constructor({ enumerate, seed, }) {\r\n        this.enumerateFn = enumerate;\r\n        this.seed = seed;\r\n        this.iterationCounter = 0;\r\n        this._opts = {};\r\n    }\r\n    addOpt({ key, range, initial, }) {\r\n        this._opts[key] = {\r\n            range,\r\n            value: initial,\r\n        };\r\n    }\r\n    getOpt(key) {\r\n        return this._opts[key].value;\r\n    }\r\n    setOpt(key, value) {\r\n        if (key in this._opts) {\r\n            this._opts[key].value = value;\r\n        }\r\n    }\r\n    opts() {\r\n        return this._opts;\r\n    }\r\n    enumerate(G, ctx, playerID) {\r\n        const actions = this.enumerateFn(G, ctx, playerID);\r\n        return actions.map((a) => {\r\n            if ('payload' in a) {\r\n                return a;\r\n            }\r\n            if ('move' in a) {\r\n                return (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.B)(a.move, a.args, playerID);\r\n            }\r\n            if ('event' in a) {\r\n                return (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.g)(a.event, a.args, playerID);\r\n            }\r\n        });\r\n    }\r\n    random(arg) {\r\n        let number;\r\n        if (this.seed !== undefined) {\r\n            const seed = this.prngstate ? '' : this.seed;\r\n            const rand = (0,_plugin_random_087f861e_js__WEBPACK_IMPORTED_MODULE_2__.a)(seed, this.prngstate);\r\n            number = rand();\r\n            this.prngstate = rand.state();\r\n        }\r\n        else {\r\n            number = Math.random();\r\n        }\r\n        if (arg) {\r\n            if (Array.isArray(arg)) {\r\n                const id = Math.floor(number * arg.length);\r\n                return arg[id];\r\n            }\r\n            else {\r\n                return Math.floor(number * arg);\r\n            }\r\n        }\r\n        return number;\r\n    }\r\n}\n\n/*\r\n * Copyright 2018 The boardgame.io Authors\r\n *\r\n * Use of this source code is governed by a MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n */\r\n/**\r\n * The number of iterations to run before yielding to\r\n * the JS event loop (in async mode).\r\n */\r\nconst CHUNK_SIZE = 25;\r\n/**\r\n * Bot that uses Monte-Carlo Tree Search to find promising moves.\r\n */\r\nclass MCTSBot extends Bot {\r\n    constructor({ enumerate, seed, objectives, game, iterations, playoutDepth, iterationCallback, }) {\r\n        super({ enumerate, seed });\r\n        if (objectives === undefined) {\r\n            objectives = () => ({});\r\n        }\r\n        this.objectives = objectives;\r\n        this.iterationCallback = iterationCallback || (() => { });\r\n        this.reducer = (0,_reducer_07c7b307_js__WEBPACK_IMPORTED_MODULE_3__.C)({ game });\r\n        this.iterations = iterations;\r\n        this.playoutDepth = playoutDepth;\r\n        this.addOpt({\r\n            key: 'async',\r\n            initial: false,\r\n        });\r\n        this.addOpt({\r\n            key: 'iterations',\r\n            initial: typeof iterations === 'number' ? iterations : 1000,\r\n            range: { min: 1, max: 2000 },\r\n        });\r\n        this.addOpt({\r\n            key: 'playoutDepth',\r\n            initial: typeof playoutDepth === 'number' ? playoutDepth : 50,\r\n            range: { min: 1, max: 100 },\r\n        });\r\n    }\r\n    createNode({ state, parentAction, parent, playerID, }) {\r\n        const { G, ctx } = state;\r\n        let actions = [];\r\n        let objectives = [];\r\n        if (playerID !== undefined) {\r\n            actions = this.enumerate(G, ctx, playerID);\r\n            objectives = this.objectives(G, ctx, playerID);\r\n        }\r\n        else if (ctx.activePlayers) {\r\n            for (const playerID in ctx.activePlayers) {\r\n                actions.push(...this.enumerate(G, ctx, playerID));\r\n                objectives.push(this.objectives(G, ctx, playerID));\r\n            }\r\n        }\r\n        else {\r\n            actions = this.enumerate(G, ctx, ctx.currentPlayer);\r\n            objectives = this.objectives(G, ctx, ctx.currentPlayer);\r\n        }\r\n        return {\r\n            state,\r\n            parent,\r\n            parentAction,\r\n            actions,\r\n            objectives,\r\n            children: [],\r\n            visits: 0,\r\n            value: 0,\r\n        };\r\n    }\r\n    select(node) {\r\n        // This node has unvisited children.\r\n        if (node.actions.length > 0) {\r\n            return node;\r\n        }\r\n        // This is a terminal node.\r\n        if (node.children.length === 0) {\r\n            return node;\r\n        }\r\n        let selectedChild = null;\r\n        let best = 0;\r\n        for (const child of node.children) {\r\n            const childVisits = child.visits + Number.EPSILON;\r\n            const uct = child.value / childVisits +\r\n                Math.sqrt((2 * Math.log(node.visits)) / childVisits);\r\n            if (selectedChild == null || uct > best) {\r\n                best = uct;\r\n                selectedChild = child;\r\n            }\r\n        }\r\n        return this.select(selectedChild);\r\n    }\r\n    expand(node) {\r\n        const actions = node.actions;\r\n        if (actions.length === 0 || node.state.ctx.gameover !== undefined) {\r\n            return node;\r\n        }\r\n        const id = this.random(actions.length);\r\n        const action = actions[id];\r\n        node.actions.splice(id, 1);\r\n        const childState = this.reducer(node.state, action);\r\n        const childNode = this.createNode({\r\n            state: childState,\r\n            parentAction: action,\r\n            parent: node,\r\n        });\r\n        node.children.push(childNode);\r\n        return childNode;\r\n    }\r\n    playout({ state }) {\r\n        let playoutDepth = this.getOpt('playoutDepth');\r\n        if (typeof this.playoutDepth === 'function') {\r\n            playoutDepth = this.playoutDepth(state.G, state.ctx);\r\n        }\r\n        for (let i = 0; i < playoutDepth && state.ctx.gameover === undefined; i++) {\r\n            const { G, ctx } = state;\r\n            let playerID = ctx.currentPlayer;\r\n            if (ctx.activePlayers) {\r\n                playerID = Object.keys(ctx.activePlayers)[0];\r\n            }\r\n            const moves = this.enumerate(G, ctx, playerID);\r\n            // Check if any objectives are met.\r\n            const objectives = this.objectives(G, ctx, playerID);\r\n            const score = Object.keys(objectives).reduce((score, key) => {\r\n                const objective = objectives[key];\r\n                if (objective.checker(G, ctx)) {\r\n                    return score + objective.weight;\r\n                }\r\n                return score;\r\n            }, 0);\r\n            // If so, stop and return the score.\r\n            if (score > 0) {\r\n                return { score };\r\n            }\r\n            if (!moves || moves.length === 0) {\r\n                return undefined;\r\n            }\r\n            const id = this.random(moves.length);\r\n            const childState = this.reducer(state, moves[id]);\r\n            state = childState;\r\n        }\r\n        return state.ctx.gameover;\r\n    }\r\n    backpropagate(node, result = {}) {\r\n        node.visits++;\r\n        if (result.score !== undefined) {\r\n            node.value += result.score;\r\n        }\r\n        if (result.draw === true) {\r\n            node.value += 0.5;\r\n        }\r\n        if (node.parentAction &&\r\n            result.winner === node.parentAction.payload.playerID) {\r\n            node.value++;\r\n        }\r\n        if (node.parent) {\r\n            this.backpropagate(node.parent, result);\r\n        }\r\n    }\r\n    play(state, playerID) {\r\n        const root = this.createNode({ state, playerID });\r\n        let numIterations = this.getOpt('iterations');\r\n        if (typeof this.iterations === 'function') {\r\n            numIterations = this.iterations(state.G, state.ctx);\r\n        }\r\n        const getResult = () => {\r\n            let selectedChild = null;\r\n            for (const child of root.children) {\r\n                if (selectedChild == null || child.visits > selectedChild.visits) {\r\n                    selectedChild = child;\r\n                }\r\n            }\r\n            const action = selectedChild && selectedChild.parentAction;\r\n            const metadata = root;\r\n            return { action, metadata };\r\n        };\r\n        return new Promise((resolve) => {\r\n            const iteration = () => {\r\n                for (let i = 0; i < CHUNK_SIZE && this.iterationCounter < numIterations; i++) {\r\n                    const leaf = this.select(root);\r\n                    const child = this.expand(leaf);\r\n                    const result = this.playout(child);\r\n                    this.backpropagate(child, result);\r\n                    this.iterationCounter++;\r\n                }\r\n                this.iterationCallback({\r\n                    iterationCounter: this.iterationCounter,\r\n                    numIterations,\r\n                    metadata: root,\r\n                });\r\n            };\r\n            this.iterationCounter = 0;\r\n            if (this.getOpt('async')) {\r\n                const asyncIteration = () => {\r\n                    if (this.iterationCounter < numIterations) {\r\n                        iteration();\r\n                        setImmediate(asyncIteration);\r\n                    }\r\n                    else {\r\n                        resolve(getResult());\r\n                    }\r\n                };\r\n                asyncIteration();\r\n            }\r\n            else {\r\n                while (this.iterationCounter < numIterations) {\r\n                    iteration();\r\n                }\r\n                resolve(getResult());\r\n            }\r\n        });\r\n    }\r\n}\n\n/*\r\n * Copyright 2018 The boardgame.io Authors\r\n *\r\n * Use of this source code is governed by a MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n */\r\n/**\r\n * Bot that picks a move at random.\r\n */\r\nclass RandomBot extends Bot {\r\n    play({ G, ctx }, playerID) {\r\n        const moves = this.enumerate(G, ctx, playerID);\r\n        return Promise.resolve({ action: this.random(moves) });\r\n    }\r\n}\n\n/*\r\n * Copyright 2018 The boardgame.io Authors\r\n *\r\n * Use of this source code is governed by a MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n */\r\n/**\r\n * Make a single move on the client with a bot.\r\n *\r\n * @param {...object} client - The game client.\r\n * @param {...object} bot - The bot.\r\n */\r\nasync function Step(client, bot) {\r\n    const state = client.store.getState();\r\n    let playerID = state.ctx.currentPlayer;\r\n    if (state.ctx.activePlayers) {\r\n        playerID = Object.keys(state.ctx.activePlayers)[0];\r\n    }\r\n    const { action, metadata } = await bot.play(state, playerID);\r\n    if (action) {\r\n        const a = {\r\n            ...action,\r\n            payload: {\r\n                ...action.payload,\r\n                metadata,\r\n            },\r\n        };\r\n        client.store.dispatch(a);\r\n        return a;\r\n    }\r\n}\r\n/**\r\n * Simulates the game till the end or a max depth.\r\n *\r\n * @param {...object} game - The game object.\r\n * @param {...object} bots - An array of bots.\r\n * @param {...object} state - The game state to start from.\r\n */\r\nasync function Simulate({ game, bots, state, depth, }) {\r\n    if (depth === undefined)\r\n        depth = 10000;\r\n    const reducer = (0,_reducer_07c7b307_js__WEBPACK_IMPORTED_MODULE_3__.C)({ game });\r\n    let metadata = null;\r\n    let iter = 0;\r\n    while (state.ctx.gameover === undefined && iter < depth) {\r\n        let playerID = state.ctx.currentPlayer;\r\n        if (state.ctx.activePlayers) {\r\n            playerID = Object.keys(state.ctx.activePlayers)[0];\r\n        }\r\n        const bot = bots instanceof Bot ? bots : bots[playerID];\r\n        const t = await bot.play(state, playerID);\r\n        if (!t.action) {\r\n            break;\r\n        }\r\n        metadata = t.metadata;\r\n        state = reducer(state, t.action);\r\n        iter++;\r\n    }\r\n    return { state, metadata };\r\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/boardgame.io/dist/esm/ai-3099ce9a.js\n"));

/***/ }),

/***/ "./node_modules/boardgame.io/dist/esm/client-5f57c3f2.js":
/*!***************************************************************!*\
  !*** ./node_modules/boardgame.io/dist/esm/client-5f57c3f2.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"L\": function() { return /* binding */ LobbyClient; },\n/* harmony export */   \"a\": function() { return /* binding */ LobbyClientError; }\n/* harmony export */ });\nconst assertString = (str, label) => {\r\n    if (!str || typeof str !== 'string') {\r\n        throw new Error(`Expected ${label} string, got \"${str}\".`);\r\n    }\r\n};\r\nconst assertGameName = (name) => assertString(name, 'game name');\r\nconst assertMatchID = (id) => assertString(id, 'match ID');\r\nconst validateBody = (body, schema) => {\r\n    if (!body)\r\n        throw new Error(`Expected body, got “${body}”.`);\r\n    for (const key in schema) {\r\n        const propSchema = schema[key];\r\n        const types = Array.isArray(propSchema) ? propSchema : [propSchema];\r\n        const received = body[key];\r\n        if (!types.includes(typeof received)) {\r\n            const union = types.join('|');\r\n            throw new TypeError(`Expected body.${key} to be of type ${union}, got “${received}”.`);\r\n        }\r\n    }\r\n};\r\nclass LobbyClientError extends Error {\r\n    constructor(message, details) {\r\n        super(message);\r\n        this.details = details;\r\n    }\r\n}\r\n/**\r\n * Create a boardgame.io Lobby API client.\r\n * @param server The API’s base URL, e.g. `http://localhost:8000`.\r\n */\r\nclass LobbyClient {\r\n    constructor({ server = '' } = {}) {\r\n        // strip trailing slash if passed\r\n        this.server = server.replace(/\\/$/, '');\r\n    }\r\n    async request(route, init) {\r\n        const response = await fetch(this.server + route, init);\r\n        if (!response.ok) {\r\n            let details;\r\n            try {\r\n                details = await response.clone().json();\r\n            }\r\n            catch {\r\n                try {\r\n                    details = await response.text();\r\n                }\r\n                catch (error) {\r\n                    details = error.message;\r\n                }\r\n            }\r\n            throw new LobbyClientError(`HTTP status ${response.status}`, details);\r\n        }\r\n        return response.json();\r\n    }\r\n    async post(route, opts) {\r\n        let init = {\r\n            method: 'post',\r\n            body: JSON.stringify(opts.body),\r\n            headers: { 'Content-Type': 'application/json' },\r\n        };\r\n        if (opts.init)\r\n            init = {\r\n                ...init,\r\n                ...opts.init,\r\n                headers: { ...init.headers, ...opts.init.headers },\r\n            };\r\n        return this.request(route, init);\r\n    }\r\n    /**\r\n     * Get a list of the game names available on this server.\r\n     * @param  init Optional RequestInit interface to override defaults.\r\n     * @return Array of game names.\r\n     *\r\n     * @example\r\n     * lobbyClient.listGames()\r\n     *   .then(console.log); // => ['chess', 'tic-tac-toe']\r\n     */\r\n    async listGames(init) {\r\n        return this.request('/games', init);\r\n    }\r\n    /**\r\n     * Get a list of the matches for a specific game type on the server.\r\n     * @param  gameName The game to list for, e.g. 'tic-tac-toe'.\r\n     * @param  where    Options to filter matches by update time or gameover state\r\n     * @param  init     Optional RequestInit interface to override defaults.\r\n     * @return Array of match metadata objects.\r\n     *\r\n     * @example\r\n     * lobbyClient.listMatches('tic-tac-toe', where: { isGameover: false })\r\n     *   .then(data => console.log(data.matches));\r\n     * // => [\r\n     * //   {\r\n     * //     matchID: 'xyz',\r\n     * //     gameName: 'tic-tac-toe',\r\n     * //     players: [{ id: 0, name: 'Alice' }, { id: 1 }]\r\n     * //   },\r\n     * //   ...\r\n     * // ]\r\n     */\r\n    async listMatches(gameName, where, init) {\r\n        assertGameName(gameName);\r\n        let query = '';\r\n        if (where) {\r\n            const queries = [];\r\n            const { isGameover, updatedBefore, updatedAfter } = where;\r\n            if (isGameover !== undefined)\r\n                queries.push(`isGameover=${isGameover}`);\r\n            if (updatedBefore)\r\n                queries.push(`updatedBefore=${updatedBefore}`);\r\n            if (updatedAfter)\r\n                queries.push(`updatedAfter=${updatedAfter}`);\r\n            if (queries.length > 0)\r\n                query = '?' + queries.join('&');\r\n        }\r\n        return this.request(`/games/${gameName}${query}`, init);\r\n    }\r\n    /**\r\n     * Get metadata for a specific match.\r\n     * @param  gameName The match’s game type, e.g. 'tic-tac-toe'.\r\n     * @param  matchID  Match ID for the match to fetch.\r\n     * @param  init     Optional RequestInit interface to override defaults.\r\n     * @return A match metadata object.\r\n     *\r\n     * @example\r\n     * lobbyClient.getMatch('tic-tac-toe', 'xyz').then(console.log);\r\n     * // => {\r\n     * //   matchID: 'xyz',\r\n     * //   gameName: 'tic-tac-toe',\r\n     * //   players: [{ id: 0, name: 'Alice' }, { id: 1 }]\r\n     * // }\r\n     */\r\n    async getMatch(gameName, matchID, init) {\r\n        assertGameName(gameName);\r\n        assertMatchID(matchID);\r\n        return this.request(`/games/${gameName}/${matchID}`, init);\r\n    }\r\n    /**\r\n     * Create a new match for a specific game type.\r\n     * @param  gameName The game to create a match for, e.g. 'tic-tac-toe'.\r\n     * @param  body     Options required to configure match creation.\r\n     * @param  init     Optional RequestInit interface to override defaults.\r\n     * @return An object containing the created `matchID`.\r\n     *\r\n     * @example\r\n     * lobbyClient.createMatch('tic-tac-toe', { numPlayers: 2 })\r\n     *   .then(console.log);\r\n     * // => { matchID: 'xyz' }\r\n     */\r\n    async createMatch(gameName, body, init) {\r\n        assertGameName(gameName);\r\n        validateBody(body, { numPlayers: 'number' });\r\n        return this.post(`/games/${gameName}/create`, { body, init });\r\n    }\r\n    /**\r\n     * Join a match using its matchID.\r\n     * @param  gameName The match’s game type, e.g. 'tic-tac-toe'.\r\n     * @param  matchID  Match ID for the match to join.\r\n     * @param  body     Options required to join match.\r\n     * @param  init     Optional RequestInit interface to override defaults.\r\n     * @return Object containing `playerCredentials` for the player who joined.\r\n     *\r\n     * @example\r\n     * lobbyClient.joinMatch('tic-tac-toe', 'xyz', {\r\n     *   playerID: '1',\r\n     *   playerName: 'Bob',\r\n     * }).then(console.log);\r\n     * // => { playerID: '1', playerCredentials: 'random-string' }\r\n     */\r\n    async joinMatch(gameName, matchID, body, init) {\r\n        assertGameName(gameName);\r\n        assertMatchID(matchID);\r\n        validateBody(body, {\r\n            playerID: ['string', 'undefined'],\r\n            playerName: 'string',\r\n        });\r\n        return this.post(`/games/${gameName}/${matchID}/join`, { body, init });\r\n    }\r\n    /**\r\n     * Leave a previously joined match.\r\n     * @param  gameName The match’s game type, e.g. 'tic-tac-toe'.\r\n     * @param  matchID  Match ID for the match to leave.\r\n     * @param  body     Options required to leave match.\r\n     * @param  init     Optional RequestInit interface to override defaults.\r\n     * @return Promise resolves if successful.\r\n     *\r\n     * @example\r\n     * lobbyClient.leaveMatch('tic-tac-toe', 'xyz', {\r\n     *   playerID: '1',\r\n     *   credentials: 'credentials-returned-when-joining',\r\n     * })\r\n     *   .then(() => console.log('Left match.'))\r\n     *   .catch(error => console.error('Error leaving match', error));\r\n     */\r\n    async leaveMatch(gameName, matchID, body, init) {\r\n        assertGameName(gameName);\r\n        assertMatchID(matchID);\r\n        validateBody(body, { playerID: 'string', credentials: 'string' });\r\n        await this.post(`/games/${gameName}/${matchID}/leave`, { body, init });\r\n    }\r\n    /**\r\n     * Update a player’s name or custom metadata.\r\n     * @param  gameName The match’s game type, e.g. 'tic-tac-toe'.\r\n     * @param  matchID  Match ID for the match to update.\r\n     * @param  body     Options required to update player.\r\n     * @param  init     Optional RequestInit interface to override defaults.\r\n     * @return Promise resolves if successful.\r\n     *\r\n     * @example\r\n     * lobbyClient.updatePlayer('tic-tac-toe', 'xyz', {\r\n     *   playerID: '0',\r\n     *   credentials: 'credentials-returned-when-joining',\r\n     *   newName: 'Al',\r\n     * })\r\n     *   .then(() => console.log('Updated player data.'))\r\n     *   .catch(error => console.error('Error updating data', error));\r\n     */\r\n    async updatePlayer(gameName, matchID, body, init) {\r\n        assertGameName(gameName);\r\n        assertMatchID(matchID);\r\n        validateBody(body, { playerID: 'string', credentials: 'string' });\r\n        await this.post(`/games/${gameName}/${matchID}/update`, { body, init });\r\n    }\r\n    /**\r\n     * Create a new match based on the configuration of the current match.\r\n     * @param  gameName The match’s game type, e.g. 'tic-tac-toe'.\r\n     * @param  matchID  Match ID for the match to play again.\r\n     * @param  body     Options required to configure match.\r\n     * @param  init     Optional RequestInit interface to override defaults.\r\n     * @return Object containing `nextMatchID`.\r\n     *\r\n     * @example\r\n     * lobbyClient.playAgain('tic-tac-toe', 'xyz', {\r\n     *   playerID: '0',\r\n     *   credentials: 'credentials-returned-when-joining',\r\n     * })\r\n     *   .then(({ nextMatchID }) => {\r\n     *     return lobbyClient.joinMatch('tic-tac-toe', nextMatchID, {\r\n     *       playerID: '0',\r\n     *       playerName: 'Al',\r\n     *     })\r\n     *   })\r\n     *   .then({ playerCredentials } => {\r\n     *     console.log(playerCredentials);\r\n     *   })\r\n     *   .catch(console.error);\r\n     */\r\n    async playAgain(gameName, matchID, body, init) {\r\n        assertGameName(gameName);\r\n        assertMatchID(matchID);\r\n        validateBody(body, { playerID: 'string', credentials: 'string' });\r\n        return this.post(`/games/${gameName}/${matchID}/playAgain`, { body, init });\r\n    }\r\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/boardgame.io/dist/esm/client-5f57c3f2.js\n"));

/***/ }),

/***/ "./node_modules/boardgame.io/dist/esm/client-fa36c03a.js":
/*!***************************************************************!*\
  !*** ./node_modules/boardgame.io/dist/esm/client-fa36c03a.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"C\": function() { return /* binding */ Client; }\n/* harmony export */ });\n/* harmony import */ var nanoid_non_secure__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! nanoid/non-secure */ \"./node_modules/nanoid/non-secure/index.js\");\n/* harmony import */ var _Debug_fd09b8bc_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Debug-fd09b8bc.js */ \"./node_modules/boardgame.io/dist/esm/Debug-fd09b8bc.js\");\n/* harmony import */ var redux__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! redux */ \"./node_modules/redux/es/redux.js\");\n/* harmony import */ var _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./turn-order-0b7dce3d.js */ \"./node_modules/boardgame.io/dist/esm/turn-order-0b7dce3d.js\");\n/* harmony import */ var _reducer_07c7b307_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./reducer-07c7b307.js */ \"./node_modules/boardgame.io/dist/esm/reducer-07c7b307.js\");\n/* harmony import */ var _initialize_9ac1bbf5_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./initialize-9ac1bbf5.js */ \"./node_modules/boardgame.io/dist/esm/initialize-9ac1bbf5.js\");\n/* harmony import */ var _transport_ce07b771_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transport-ce07b771.js */ \"./node_modules/boardgame.io/dist/esm/transport-ce07b771.js\");\n\n\n\n\n\n\n\n\n/**\r\n * This class doesn’t do anything, but simplifies the client class by providing\r\n * dummy functions to call, so we don’t need to mock them in the client.\r\n */\r\nclass DummyImpl extends _transport_ce07b771_js__WEBPACK_IMPORTED_MODULE_1__.T {\r\n    connect() { }\r\n    disconnect() { }\r\n    sendAction() { }\r\n    sendChatMessage() { }\r\n    requestSync() { }\r\n    updateCredentials() { }\r\n    updateMatchID() { }\r\n    updatePlayerID() { }\r\n}\r\nconst DummyTransport = (opts) => new DummyImpl(opts);\n\n/**\r\n * Class to manage boardgame.io clients and limit debug panel rendering.\r\n */\r\nclass ClientManager {\r\n    constructor() {\r\n        this.debugPanel = null;\r\n        this.currentClient = null;\r\n        this.clients = new Map();\r\n        this.subscribers = new Map();\r\n    }\r\n    /**\r\n     * Register a client with the client manager.\r\n     */\r\n    register(client) {\r\n        // Add client to clients map.\r\n        this.clients.set(client, client);\r\n        // Mount debug for this client (no-op if another debug is already mounted).\r\n        this.mountDebug(client);\r\n        this.notifySubscribers();\r\n    }\r\n    /**\r\n     * Unregister a client from the client manager.\r\n     */\r\n    unregister(client) {\r\n        // Remove client from clients map.\r\n        this.clients.delete(client);\r\n        if (this.currentClient === client) {\r\n            // If the removed client owned the debug panel, unmount it.\r\n            this.unmountDebug();\r\n            // Mount debug panel for next available client.\r\n            for (const [client] of this.clients) {\r\n                if (this.debugPanel)\r\n                    break;\r\n                this.mountDebug(client);\r\n            }\r\n        }\r\n        this.notifySubscribers();\r\n    }\r\n    /**\r\n     * Subscribe to the client manager state.\r\n     * Calls the passed callback each time the current client changes or a client\r\n     * registers/unregisters.\r\n     * Returns a function to unsubscribe from the state updates.\r\n     */\r\n    subscribe(callback) {\r\n        const id = Symbol();\r\n        this.subscribers.set(id, callback);\r\n        callback(this.getState());\r\n        return () => {\r\n            this.subscribers.delete(id);\r\n        };\r\n    }\r\n    /**\r\n     * Switch to a client with a matching playerID.\r\n     */\r\n    switchPlayerID(playerID) {\r\n        // For multiplayer clients, try switching control to a different client\r\n        // that is using the same transport layer.\r\n        if (this.currentClient.multiplayer) {\r\n            for (const [client] of this.clients) {\r\n                if (client.playerID === playerID &&\r\n                    client.debugOpt !== false &&\r\n                    client.multiplayer === this.currentClient.multiplayer) {\r\n                    this.switchToClient(client);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        // If no client matches, update the playerID for the current client.\r\n        this.currentClient.updatePlayerID(playerID);\r\n        this.notifySubscribers();\r\n    }\r\n    /**\r\n     * Set the passed client as the active client for debugging.\r\n     */\r\n    switchToClient(client) {\r\n        if (client === this.currentClient)\r\n            return;\r\n        this.unmountDebug();\r\n        this.mountDebug(client);\r\n        this.notifySubscribers();\r\n    }\r\n    /**\r\n     * Notify all subscribers of changes to the client manager state.\r\n     */\r\n    notifySubscribers() {\r\n        const arg = this.getState();\r\n        this.subscribers.forEach((cb) => {\r\n            cb(arg);\r\n        });\r\n    }\r\n    /**\r\n     * Get the client manager state.\r\n     */\r\n    getState() {\r\n        return {\r\n            client: this.currentClient,\r\n            debuggableClients: this.getDebuggableClients(),\r\n        };\r\n    }\r\n    /**\r\n     * Get an array of the registered clients that haven’t disabled the debug panel.\r\n     */\r\n    getDebuggableClients() {\r\n        return [...this.clients.values()].filter((client) => client.debugOpt !== false);\r\n    }\r\n    /**\r\n     * Mount the debug panel using the passed client.\r\n     */\r\n    mountDebug(client) {\r\n        if (client.debugOpt === false ||\r\n            this.debugPanel !== null ||\r\n            typeof document === 'undefined') {\r\n            return;\r\n        }\r\n        let DebugImpl;\r\n        let target = document.body;\r\n        if (true) {\r\n            DebugImpl = _Debug_fd09b8bc_js__WEBPACK_IMPORTED_MODULE_2__.D;\r\n        }\r\n        if (client.debugOpt && client.debugOpt !== true) {\r\n            DebugImpl = client.debugOpt.impl || DebugImpl;\r\n            target = client.debugOpt.target || target;\r\n        }\r\n        if (DebugImpl) {\r\n            this.currentClient = client;\r\n            this.debugPanel = new DebugImpl({\r\n                target,\r\n                props: { clientManager: this },\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Unmount the debug panel.\r\n     */\r\n    unmountDebug() {\r\n        this.debugPanel.$destroy();\r\n        this.debugPanel = null;\r\n        this.currentClient = null;\r\n    }\r\n}\n\n/*\r\n * Copyright 2017 The boardgame.io Authors\r\n *\r\n * Use of this source code is governed by a MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n */\r\n/**\r\n * Global client manager instance that all clients register with.\r\n */\r\nconst GlobalClientManager = new ClientManager();\r\n/**\r\n * Standardise the passed playerID, using currentPlayer if appropriate.\r\n */\r\nfunction assumedPlayerID(playerID, store, multiplayer) {\r\n    // In singleplayer mode, if the client does not have a playerID\r\n    // associated with it, we attach the currentPlayer as playerID.\r\n    if (!multiplayer && (playerID === null || playerID === undefined)) {\r\n        const state = store.getState();\r\n        playerID = state.ctx.currentPlayer;\r\n    }\r\n    return playerID;\r\n}\r\n/**\r\n * createDispatchers\r\n *\r\n * Create action dispatcher wrappers with bound playerID and credentials\r\n */\r\nfunction createDispatchers(storeActionType, innerActionNames, store, playerID, credentials, multiplayer) {\r\n    const dispatchers = {};\r\n    for (const name of innerActionNames) {\r\n        dispatchers[name] = (...args) => {\r\n            const action = _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_3__.A[storeActionType](name, args, assumedPlayerID(playerID, store, multiplayer), credentials);\r\n            store.dispatch(action);\r\n        };\r\n    }\r\n    return dispatchers;\r\n}\r\n// Creates a set of dispatchers to make moves.\r\nconst createMoveDispatchers = createDispatchers.bind(null, 'makeMove');\r\n// Creates a set of dispatchers to dispatch game flow events.\r\nconst createEventDispatchers = createDispatchers.bind(null, 'gameEvent');\r\n// Creates a set of dispatchers to dispatch actions to plugins.\r\nconst createPluginDispatchers = createDispatchers.bind(null, 'plugin');\r\n/**\r\n * Implementation of Client (see below).\r\n */\r\nclass _ClientImpl {\r\n    constructor({ game, debug, numPlayers, multiplayer, matchID: matchID, playerID, credentials, enhancer, }) {\r\n        this.game = (0,_reducer_07c7b307_js__WEBPACK_IMPORTED_MODULE_4__.P)(game);\r\n        this.playerID = playerID;\r\n        this.matchID = matchID || 'default';\r\n        this.credentials = credentials;\r\n        this.multiplayer = multiplayer;\r\n        this.debugOpt = debug;\r\n        this.manager = GlobalClientManager;\r\n        this.gameStateOverride = null;\r\n        this.subscribers = {};\r\n        this._running = false;\r\n        this.reducer = (0,_reducer_07c7b307_js__WEBPACK_IMPORTED_MODULE_4__.C)({\r\n            game: this.game,\r\n            isClient: multiplayer !== undefined,\r\n        });\r\n        this.initialState = null;\r\n        if (!multiplayer) {\r\n            this.initialState = (0,_initialize_9ac1bbf5_js__WEBPACK_IMPORTED_MODULE_5__.I)({ game: this.game, numPlayers });\r\n        }\r\n        this.reset = () => {\r\n            this.store.dispatch((0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_3__.u)(this.initialState));\r\n        };\r\n        this.undo = () => {\r\n            const undo$1 = (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_3__.v)(assumedPlayerID(this.playerID, this.store, this.multiplayer), this.credentials);\r\n            this.store.dispatch(undo$1);\r\n        };\r\n        this.redo = () => {\r\n            const redo$1 = (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_3__.w)(assumedPlayerID(this.playerID, this.store, this.multiplayer), this.credentials);\r\n            this.store.dispatch(redo$1);\r\n        };\r\n        this.log = [];\r\n        /**\r\n         * Middleware that manages the log object.\r\n         * Reducers generate deltalogs, which are log events\r\n         * that are the result of application of a single action.\r\n         * The master may also send back a deltalog or the entire\r\n         * log depending on the type of request.\r\n         * The middleware below takes care of all these cases while\r\n         * managing the log object.\r\n         */\r\n        const LogMiddleware = (store) => (next) => (action) => {\r\n            const result = next(action);\r\n            const state = store.getState();\r\n            switch (action.type) {\r\n                case _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_3__.M:\r\n                case _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_3__.o:\r\n                case _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_3__.h:\r\n                case _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_3__.R: {\r\n                    const deltalog = state.deltalog;\r\n                    this.log = [...this.log, ...deltalog];\r\n                    break;\r\n                }\r\n                case _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_3__.l: {\r\n                    this.log = [];\r\n                    break;\r\n                }\r\n                case _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_3__.P:\r\n                case _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_3__.k: {\r\n                    let id = -1;\r\n                    if (this.log.length > 0) {\r\n                        id = this.log[this.log.length - 1]._stateID;\r\n                    }\r\n                    let deltalog = action.deltalog || [];\r\n                    // Filter out actions that are already present\r\n                    // in the current log. This may occur when the\r\n                    // client adds an entry to the log followed by\r\n                    // the update from the master here.\r\n                    deltalog = deltalog.filter((l) => l._stateID > id);\r\n                    this.log = [...this.log, ...deltalog];\r\n                    break;\r\n                }\r\n                case _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_3__.j: {\r\n                    this.initialState = action.initialState;\r\n                    this.log = action.log || [];\r\n                    break;\r\n                }\r\n            }\r\n            return result;\r\n        };\r\n        /**\r\n         * Middleware that intercepts actions and sends them to the master,\r\n         * which keeps the authoritative version of the state.\r\n         */\r\n        const TransportMiddleware = (store) => (next) => (action) => {\r\n            const baseState = store.getState();\r\n            const result = next(action);\r\n            if (!('clientOnly' in action) &&\r\n                action.type !== _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_3__.p) {\r\n                this.transport.sendAction(baseState, action);\r\n            }\r\n            return result;\r\n        };\r\n        /**\r\n         * Middleware that intercepts actions and invokes the subscription callback.\r\n         */\r\n        const SubscriptionMiddleware = () => (next) => (action) => {\r\n            const result = next(action);\r\n            this.notifySubscribers();\r\n            return result;\r\n        };\r\n        const middleware = (0,redux__WEBPACK_IMPORTED_MODULE_6__.applyMiddleware)(_reducer_07c7b307_js__WEBPACK_IMPORTED_MODULE_4__.T, SubscriptionMiddleware, TransportMiddleware, LogMiddleware);\r\n        enhancer =\r\n            enhancer !== undefined ? (0,redux__WEBPACK_IMPORTED_MODULE_6__.compose)(middleware, enhancer) : middleware;\r\n        this.store = (0,redux__WEBPACK_IMPORTED_MODULE_6__.createStore)(this.reducer, this.initialState, enhancer);\r\n        if (!multiplayer)\r\n            multiplayer = DummyTransport;\r\n        this.transport = multiplayer({\r\n            transportDataCallback: (data) => this.receiveTransportData(data),\r\n            gameKey: game,\r\n            game: this.game,\r\n            matchID,\r\n            playerID,\r\n            credentials,\r\n            gameName: this.game.name,\r\n            numPlayers,\r\n        });\r\n        this.createDispatchers();\r\n        this.chatMessages = [];\r\n        this.sendChatMessage = (payload) => {\r\n            this.transport.sendChatMessage(this.matchID, {\r\n                id: (0,nanoid_non_secure__WEBPACK_IMPORTED_MODULE_0__.nanoid)(7),\r\n                sender: this.playerID,\r\n                payload: payload,\r\n            });\r\n        };\r\n    }\r\n    /** Handle incoming match data from a multiplayer transport. */\r\n    receiveMatchData(matchData) {\r\n        this.matchData = matchData;\r\n        this.notifySubscribers();\r\n    }\r\n    /** Handle an incoming chat message from a multiplayer transport. */\r\n    receiveChatMessage(message) {\r\n        this.chatMessages = [...this.chatMessages, message];\r\n        this.notifySubscribers();\r\n    }\r\n    /** Handle all incoming updates from a multiplayer transport. */\r\n    receiveTransportData(data) {\r\n        const [matchID] = data.args;\r\n        if (matchID !== this.matchID)\r\n            return;\r\n        switch (data.type) {\r\n            case 'sync': {\r\n                const [, syncInfo] = data.args;\r\n                const action = (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_3__.s)(syncInfo);\r\n                this.receiveMatchData(syncInfo.filteredMetadata);\r\n                this.store.dispatch(action);\r\n                break;\r\n            }\r\n            case 'update': {\r\n                const [, state, deltalog] = data.args;\r\n                const currentState = this.store.getState();\r\n                if (state._stateID >= currentState._stateID) {\r\n                    const action = (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_3__.z)(state, deltalog);\r\n                    this.store.dispatch(action);\r\n                }\r\n                break;\r\n            }\r\n            case 'patch': {\r\n                const [, prevStateID, stateID, patch$1, deltalog] = data.args;\r\n                const currentStateID = this.store.getState()._stateID;\r\n                if (prevStateID !== currentStateID)\r\n                    break;\r\n                const action = (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_3__.y)(prevStateID, stateID, patch$1, deltalog);\r\n                this.store.dispatch(action);\r\n                // Emit sync if patch apply failed.\r\n                if (this.store.getState()._stateID === currentStateID) {\r\n                    this.transport.requestSync();\r\n                }\r\n                break;\r\n            }\r\n            case 'matchData': {\r\n                const [, matchData] = data.args;\r\n                this.receiveMatchData(matchData);\r\n                break;\r\n            }\r\n            case 'chat': {\r\n                const [, chatMessage] = data.args;\r\n                this.receiveChatMessage(chatMessage);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    notifySubscribers() {\r\n        Object.values(this.subscribers).forEach((fn) => fn(this.getState()));\r\n    }\r\n    overrideGameState(state) {\r\n        this.gameStateOverride = state;\r\n        this.notifySubscribers();\r\n    }\r\n    start() {\r\n        this.transport.connect();\r\n        this._running = true;\r\n        this.manager.register(this);\r\n    }\r\n    stop() {\r\n        this.transport.disconnect();\r\n        this._running = false;\r\n        this.manager.unregister(this);\r\n    }\r\n    subscribe(fn) {\r\n        const id = Object.keys(this.subscribers).length;\r\n        this.subscribers[id] = fn;\r\n        this.transport.subscribeToConnectionStatus(() => this.notifySubscribers());\r\n        if (this._running || !this.multiplayer) {\r\n            fn(this.getState());\r\n        }\r\n        // Return a handle that allows the caller to unsubscribe.\r\n        return () => {\r\n            delete this.subscribers[id];\r\n        };\r\n    }\r\n    getInitialState() {\r\n        return this.initialState;\r\n    }\r\n    getState() {\r\n        let state = this.store.getState();\r\n        if (this.gameStateOverride !== null) {\r\n            state = this.gameStateOverride;\r\n        }\r\n        // This is the state before a sync with the game master.\r\n        if (state === null) {\r\n            return state;\r\n        }\r\n        // isActive.\r\n        let isActive = true;\r\n        const isPlayerActive = this.game.flow.isPlayerActive(state.G, state.ctx, this.playerID);\r\n        if (this.multiplayer && !isPlayerActive) {\r\n            isActive = false;\r\n        }\r\n        if (!this.multiplayer &&\r\n            this.playerID !== null &&\r\n            this.playerID !== undefined &&\r\n            !isPlayerActive) {\r\n            isActive = false;\r\n        }\r\n        if (state.ctx.gameover !== undefined) {\r\n            isActive = false;\r\n        }\r\n        // Secrets are normally stripped on the server,\r\n        // but we also strip them here so that game developers\r\n        // can see their effects while prototyping.\r\n        // Do not strip again if this is a multiplayer game\r\n        // since the server has already stripped secret info. (issue #818)\r\n        if (!this.multiplayer) {\r\n            state = {\r\n                ...state,\r\n                G: this.game.playerView(state.G, state.ctx, this.playerID),\r\n                plugins: (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_3__.x)(state, this),\r\n            };\r\n        }\r\n        // Combine into return value.\r\n        return {\r\n            ...state,\r\n            log: this.log,\r\n            isActive,\r\n            isConnected: this.transport.isConnected,\r\n        };\r\n    }\r\n    createDispatchers() {\r\n        this.moves = createMoveDispatchers(this.game.moveNames, this.store, this.playerID, this.credentials, this.multiplayer);\r\n        this.events = createEventDispatchers(this.game.flow.enabledEventNames, this.store, this.playerID, this.credentials, this.multiplayer);\r\n        this.plugins = createPluginDispatchers(this.game.pluginNames, this.store, this.playerID, this.credentials, this.multiplayer);\r\n    }\r\n    updatePlayerID(playerID) {\r\n        this.playerID = playerID;\r\n        this.createDispatchers();\r\n        this.transport.updatePlayerID(playerID);\r\n        this.notifySubscribers();\r\n    }\r\n    updateMatchID(matchID) {\r\n        this.matchID = matchID;\r\n        this.createDispatchers();\r\n        this.transport.updateMatchID(matchID);\r\n        this.notifySubscribers();\r\n    }\r\n    updateCredentials(credentials) {\r\n        this.credentials = credentials;\r\n        this.createDispatchers();\r\n        this.transport.updateCredentials(credentials);\r\n        this.notifySubscribers();\r\n    }\r\n}\r\n/**\r\n * Client\r\n *\r\n * boardgame.io JS client.\r\n *\r\n * @param {...object} game - The return value of `Game`.\r\n * @param {...object} numPlayers - The number of players.\r\n * @param {...object} multiplayer - Set to a falsy value or a transportFactory, e.g., SocketIO()\r\n * @param {...object} matchID - The matchID that you want to connect to.\r\n * @param {...object} playerID - The playerID associated with this client.\r\n * @param {...string} credentials - The authentication credentials associated with this client.\r\n *\r\n * Returns:\r\n *   A JS object that provides an API to interact with the\r\n *   game by dispatching moves and events.\r\n */\r\nfunction Client(opts) {\r\n    return new _ClientImpl(opts);\r\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/boardgame.io/dist/esm/client-fa36c03a.js\n"));

/***/ }),

/***/ "./node_modules/boardgame.io/dist/esm/core.js":
/*!****************************************************!*\
  !*** ./node_modules/boardgame.io/dist/esm/core.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ActivePlayers\": function() { return /* reexport safe */ _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_0__.C; },\n/* harmony export */   \"GameMethod\": function() { return /* reexport safe */ _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_0__.G; },\n/* harmony export */   \"INVALID_MOVE\": function() { return /* reexport safe */ _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_0__.n; },\n/* harmony export */   \"PlayerView\": function() { return /* binding */ PlayerView; },\n/* harmony export */   \"Stage\": function() { return /* reexport safe */ _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_0__.S; },\n/* harmony export */   \"TurnOrder\": function() { return /* reexport safe */ _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_0__.T; }\n/* harmony export */ });\n/* harmony import */ var _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./turn-order-0b7dce3d.js */ \"./node_modules/boardgame.io/dist/esm/turn-order-0b7dce3d.js\");\n/* harmony import */ var lodash_isplainobject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash.isplainobject */ \"./node_modules/lodash.isplainobject/index.js\");\n/* harmony import */ var lodash_isplainobject__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_isplainobject__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\n\n\n/*\r\n * Copyright 2018 The boardgame.io Authors\r\n *\r\n * Use of this source code is governed by a MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n */\r\n/**\r\n * PlayerView reducers.\r\n */\r\nconst PlayerView = {\r\n    /**\r\n     * STRIP_SECRETS\r\n     *\r\n     * Reducer which removes a key named `secret` and\r\n     * removes all the keys in `players`, except for the one\r\n     * corresponding to the current playerID.\r\n     */\r\n    STRIP_SECRETS: (G, ctx, playerID) => {\r\n        const r = { ...G };\r\n        if (r.secret !== undefined) {\r\n            delete r.secret;\r\n        }\r\n        if (r.players) {\r\n            r.players = playerID\r\n                ? {\r\n                    [playerID]: r.players[playerID],\r\n                }\r\n                : {};\r\n        }\r\n        return r;\r\n    },\r\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYm9hcmRnYW1lLmlvL2Rpc3QvZXNtL2NvcmUuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQThIO0FBQy9HO0FBQ3NCO0FBQ1A7O0FBRTlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRXNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9ib2FyZGdhbWUuaW8vZGlzdC9lc20vY29yZS5qcz85ZmNhIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IEMgYXMgQWN0aXZlUGxheWVycywgRyBhcyBHYW1lTWV0aG9kLCBuIGFzIElOVkFMSURfTU9WRSwgUyBhcyBTdGFnZSwgVCBhcyBUdXJuT3JkZXIgfSBmcm9tICcuL3R1cm4tb3JkZXItMGI3ZGNlM2QuanMnO1xuaW1wb3J0ICdpbW1lcic7XG5pbXBvcnQgJy4vcGx1Z2luLXJhbmRvbS0wODdmODYxZS5qcyc7XG5pbXBvcnQgJ2xvZGFzaC5pc3BsYWlub2JqZWN0JztcblxuLypcclxuICogQ29weXJpZ2h0IDIwMTggVGhlIGJvYXJkZ2FtZS5pbyBBdXRob3JzXHJcbiAqXHJcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGEgTUlULXN0eWxlXHJcbiAqIGxpY2Vuc2UgdGhhdCBjYW4gYmUgZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBvciBhdFxyXG4gKiBodHRwczovL29wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL01JVC5cclxuICovXHJcbi8qKlxyXG4gKiBQbGF5ZXJWaWV3IHJlZHVjZXJzLlxyXG4gKi9cclxuY29uc3QgUGxheWVyVmlldyA9IHtcclxuICAgIC8qKlxyXG4gICAgICogU1RSSVBfU0VDUkVUU1xyXG4gICAgICpcclxuICAgICAqIFJlZHVjZXIgd2hpY2ggcmVtb3ZlcyBhIGtleSBuYW1lZCBgc2VjcmV0YCBhbmRcclxuICAgICAqIHJlbW92ZXMgYWxsIHRoZSBrZXlzIGluIGBwbGF5ZXJzYCwgZXhjZXB0IGZvciB0aGUgb25lXHJcbiAgICAgKiBjb3JyZXNwb25kaW5nIHRvIHRoZSBjdXJyZW50IHBsYXllcklELlxyXG4gICAgICovXHJcbiAgICBTVFJJUF9TRUNSRVRTOiAoRywgY3R4LCBwbGF5ZXJJRCkgPT4ge1xyXG4gICAgICAgIGNvbnN0IHIgPSB7IC4uLkcgfTtcclxuICAgICAgICBpZiAoci5zZWNyZXQgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICBkZWxldGUgci5zZWNyZXQ7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChyLnBsYXllcnMpIHtcclxuICAgICAgICAgICAgci5wbGF5ZXJzID0gcGxheWVySURcclxuICAgICAgICAgICAgICAgID8ge1xyXG4gICAgICAgICAgICAgICAgICAgIFtwbGF5ZXJJRF06IHIucGxheWVyc1twbGF5ZXJJRF0sXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICA6IHt9O1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gcjtcclxuICAgIH0sXHJcbn07XG5cbmV4cG9ydCB7IFBsYXllclZpZXcgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/boardgame.io/dist/esm/core.js\n"));

/***/ }),

/***/ "./node_modules/boardgame.io/dist/esm/filter-player-view-c30cdfbf.js":
/*!***************************************************************************!*\
  !*** ./node_modules/boardgame.io/dist/esm/filter-player-view-c30cdfbf.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"g\": function() { return /* binding */ getFilterPlayerView; }\n/* harmony export */ });\n/* harmony import */ var _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./turn-order-0b7dce3d.js */ \"./node_modules/boardgame.io/dist/esm/turn-order-0b7dce3d.js\");\n/* harmony import */ var rfc6902__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rfc6902 */ \"./node_modules/rfc6902/index.js\");\n\n\n\nconst applyPlayerView = (game, playerID, state) => ({\r\n    ...state,\r\n    G: game.playerView(state.G, state.ctx, playerID),\r\n    plugins: (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.x)(state, { playerID, game }),\r\n    deltalog: undefined,\r\n    _undo: [],\r\n    _redo: [],\r\n});\r\n/** Gets a function that filters the TransportData for a given player and game. */\r\nconst getFilterPlayerView = (game) => (playerID, payload) => {\r\n    switch (payload.type) {\r\n        case 'patch': {\r\n            const [matchID, stateID, prevState, state] = payload.args;\r\n            const log = redactLog(state.deltalog, playerID);\r\n            const filteredState = applyPlayerView(game, playerID, state);\r\n            const newStateID = state._stateID;\r\n            const prevFilteredState = applyPlayerView(game, playerID, prevState);\r\n            const patch = (0,rfc6902__WEBPACK_IMPORTED_MODULE_0__.createPatch)(prevFilteredState, filteredState);\r\n            return {\r\n                type: 'patch',\r\n                args: [matchID, stateID, newStateID, patch, log],\r\n            };\r\n        }\r\n        case 'update': {\r\n            const [matchID, state] = payload.args;\r\n            const log = redactLog(state.deltalog, playerID);\r\n            const filteredState = applyPlayerView(game, playerID, state);\r\n            return {\r\n                type: 'update',\r\n                args: [matchID, filteredState, log],\r\n            };\r\n        }\r\n        case 'sync': {\r\n            const [matchID, syncInfo] = payload.args;\r\n            const filteredState = applyPlayerView(game, playerID, syncInfo.state);\r\n            const log = redactLog(syncInfo.log, playerID);\r\n            const newSyncInfo = {\r\n                ...syncInfo,\r\n                state: filteredState,\r\n                log,\r\n            };\r\n            return {\r\n                type: 'sync',\r\n                args: [matchID, newSyncInfo],\r\n            };\r\n        }\r\n        default: {\r\n            return payload;\r\n        }\r\n    }\r\n};\r\n/**\r\n * Redact the log.\r\n *\r\n * @param {Array} log - The game log (or deltalog).\r\n * @param {String} playerID - The playerID that this log is\r\n *                            to be sent to.\r\n */\r\nfunction redactLog(log, playerID) {\r\n    if (log === undefined) {\r\n        return log;\r\n    }\r\n    return log.map((logEvent) => {\r\n        // filter for all other players and spectators.\r\n        if (playerID !== null && +playerID === +logEvent.action.payload.playerID) {\r\n            return logEvent;\r\n        }\r\n        if (logEvent.redact !== true) {\r\n            return logEvent;\r\n        }\r\n        const payload = {\r\n            ...logEvent.action.payload,\r\n            args: null,\r\n        };\r\n        const filteredEvent = {\r\n            ...logEvent,\r\n            action: { ...logEvent.action, payload },\r\n        };\r\n        const { redact, ...remaining } = filteredEvent;\r\n        return remaining;\r\n    });\r\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYm9hcmRnYW1lLmlvL2Rpc3QvZXNtL2ZpbHRlci1wbGF5ZXItdmlldy1jMzBjZGZiZi5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBMkQ7QUFDckI7O0FBRXRDO0FBQ0E7QUFDQTtBQUNBLGFBQWEsMERBQVUsVUFBVSxnQkFBZ0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixvREFBVztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsNkJBQTZCO0FBQ25EO0FBQ0EsZ0JBQWdCLHVCQUF1QjtBQUN2QztBQUNBLEtBQUs7QUFDTDs7QUFFb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2JvYXJkZ2FtZS5pby9kaXN0L2VzbS9maWx0ZXItcGxheWVyLXZpZXctYzMwY2RmYmYuanM/YTVhMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB4IGFzIFBsYXllclZpZXcgfSBmcm9tICcuL3R1cm4tb3JkZXItMGI3ZGNlM2QuanMnO1xuaW1wb3J0IHsgY3JlYXRlUGF0Y2ggfSBmcm9tICdyZmM2OTAyJztcblxuY29uc3QgYXBwbHlQbGF5ZXJWaWV3ID0gKGdhbWUsIHBsYXllcklELCBzdGF0ZSkgPT4gKHtcclxuICAgIC4uLnN0YXRlLFxyXG4gICAgRzogZ2FtZS5wbGF5ZXJWaWV3KHN0YXRlLkcsIHN0YXRlLmN0eCwgcGxheWVySUQpLFxyXG4gICAgcGx1Z2luczogUGxheWVyVmlldyhzdGF0ZSwgeyBwbGF5ZXJJRCwgZ2FtZSB9KSxcclxuICAgIGRlbHRhbG9nOiB1bmRlZmluZWQsXHJcbiAgICBfdW5kbzogW10sXHJcbiAgICBfcmVkbzogW10sXHJcbn0pO1xyXG4vKiogR2V0cyBhIGZ1bmN0aW9uIHRoYXQgZmlsdGVycyB0aGUgVHJhbnNwb3J0RGF0YSBmb3IgYSBnaXZlbiBwbGF5ZXIgYW5kIGdhbWUuICovXHJcbmNvbnN0IGdldEZpbHRlclBsYXllclZpZXcgPSAoZ2FtZSkgPT4gKHBsYXllcklELCBwYXlsb2FkKSA9PiB7XHJcbiAgICBzd2l0Y2ggKHBheWxvYWQudHlwZSkge1xyXG4gICAgICAgIGNhc2UgJ3BhdGNoJzoge1xyXG4gICAgICAgICAgICBjb25zdCBbbWF0Y2hJRCwgc3RhdGVJRCwgcHJldlN0YXRlLCBzdGF0ZV0gPSBwYXlsb2FkLmFyZ3M7XHJcbiAgICAgICAgICAgIGNvbnN0IGxvZyA9IHJlZGFjdExvZyhzdGF0ZS5kZWx0YWxvZywgcGxheWVySUQpO1xyXG4gICAgICAgICAgICBjb25zdCBmaWx0ZXJlZFN0YXRlID0gYXBwbHlQbGF5ZXJWaWV3KGdhbWUsIHBsYXllcklELCBzdGF0ZSk7XHJcbiAgICAgICAgICAgIGNvbnN0IG5ld1N0YXRlSUQgPSBzdGF0ZS5fc3RhdGVJRDtcclxuICAgICAgICAgICAgY29uc3QgcHJldkZpbHRlcmVkU3RhdGUgPSBhcHBseVBsYXllclZpZXcoZ2FtZSwgcGxheWVySUQsIHByZXZTdGF0ZSk7XHJcbiAgICAgICAgICAgIGNvbnN0IHBhdGNoID0gY3JlYXRlUGF0Y2gocHJldkZpbHRlcmVkU3RhdGUsIGZpbHRlcmVkU3RhdGUpO1xyXG4gICAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAgICAgdHlwZTogJ3BhdGNoJyxcclxuICAgICAgICAgICAgICAgIGFyZ3M6IFttYXRjaElELCBzdGF0ZUlELCBuZXdTdGF0ZUlELCBwYXRjaCwgbG9nXSxcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY2FzZSAndXBkYXRlJzoge1xyXG4gICAgICAgICAgICBjb25zdCBbbWF0Y2hJRCwgc3RhdGVdID0gcGF5bG9hZC5hcmdzO1xyXG4gICAgICAgICAgICBjb25zdCBsb2cgPSByZWRhY3RMb2coc3RhdGUuZGVsdGFsb2csIHBsYXllcklEKTtcclxuICAgICAgICAgICAgY29uc3QgZmlsdGVyZWRTdGF0ZSA9IGFwcGx5UGxheWVyVmlldyhnYW1lLCBwbGF5ZXJJRCwgc3RhdGUpO1xyXG4gICAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAgICAgdHlwZTogJ3VwZGF0ZScsXHJcbiAgICAgICAgICAgICAgICBhcmdzOiBbbWF0Y2hJRCwgZmlsdGVyZWRTdGF0ZSwgbG9nXSxcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY2FzZSAnc3luYyc6IHtcclxuICAgICAgICAgICAgY29uc3QgW21hdGNoSUQsIHN5bmNJbmZvXSA9IHBheWxvYWQuYXJncztcclxuICAgICAgICAgICAgY29uc3QgZmlsdGVyZWRTdGF0ZSA9IGFwcGx5UGxheWVyVmlldyhnYW1lLCBwbGF5ZXJJRCwgc3luY0luZm8uc3RhdGUpO1xyXG4gICAgICAgICAgICBjb25zdCBsb2cgPSByZWRhY3RMb2coc3luY0luZm8ubG9nLCBwbGF5ZXJJRCk7XHJcbiAgICAgICAgICAgIGNvbnN0IG5ld1N5bmNJbmZvID0ge1xyXG4gICAgICAgICAgICAgICAgLi4uc3luY0luZm8sXHJcbiAgICAgICAgICAgICAgICBzdGF0ZTogZmlsdGVyZWRTdGF0ZSxcclxuICAgICAgICAgICAgICAgIGxvZyxcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgICAgIHR5cGU6ICdzeW5jJyxcclxuICAgICAgICAgICAgICAgIGFyZ3M6IFttYXRjaElELCBuZXdTeW5jSW5mb10sXHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGRlZmF1bHQ6IHtcclxuICAgICAgICAgICAgcmV0dXJuIHBheWxvYWQ7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59O1xyXG4vKipcclxuICogUmVkYWN0IHRoZSBsb2cuXHJcbiAqXHJcbiAqIEBwYXJhbSB7QXJyYXl9IGxvZyAtIFRoZSBnYW1lIGxvZyAob3IgZGVsdGFsb2cpLlxyXG4gKiBAcGFyYW0ge1N0cmluZ30gcGxheWVySUQgLSBUaGUgcGxheWVySUQgdGhhdCB0aGlzIGxvZyBpc1xyXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0byBiZSBzZW50IHRvLlxyXG4gKi9cclxuZnVuY3Rpb24gcmVkYWN0TG9nKGxvZywgcGxheWVySUQpIHtcclxuICAgIGlmIChsb2cgPT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgIHJldHVybiBsb2c7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gbG9nLm1hcCgobG9nRXZlbnQpID0+IHtcclxuICAgICAgICAvLyBmaWx0ZXIgZm9yIGFsbCBvdGhlciBwbGF5ZXJzIGFuZCBzcGVjdGF0b3JzLlxyXG4gICAgICAgIGlmIChwbGF5ZXJJRCAhPT0gbnVsbCAmJiArcGxheWVySUQgPT09ICtsb2dFdmVudC5hY3Rpb24ucGF5bG9hZC5wbGF5ZXJJRCkge1xyXG4gICAgICAgICAgICByZXR1cm4gbG9nRXZlbnQ7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChsb2dFdmVudC5yZWRhY3QgIT09IHRydWUpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGxvZ0V2ZW50O1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zdCBwYXlsb2FkID0ge1xyXG4gICAgICAgICAgICAuLi5sb2dFdmVudC5hY3Rpb24ucGF5bG9hZCxcclxuICAgICAgICAgICAgYXJnczogbnVsbCxcclxuICAgICAgICB9O1xyXG4gICAgICAgIGNvbnN0IGZpbHRlcmVkRXZlbnQgPSB7XHJcbiAgICAgICAgICAgIC4uLmxvZ0V2ZW50LFxyXG4gICAgICAgICAgICBhY3Rpb246IHsgLi4ubG9nRXZlbnQuYWN0aW9uLCBwYXlsb2FkIH0sXHJcbiAgICAgICAgfTtcclxuICAgICAgICBjb25zdCB7IHJlZGFjdCwgLi4ucmVtYWluaW5nIH0gPSBmaWx0ZXJlZEV2ZW50O1xyXG4gICAgICAgIHJldHVybiByZW1haW5pbmc7XHJcbiAgICB9KTtcclxufVxuXG5leHBvcnQgeyBnZXRGaWx0ZXJQbGF5ZXJWaWV3IGFzIGcgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/boardgame.io/dist/esm/filter-player-view-c30cdfbf.js\n"));

/***/ }),

/***/ "./node_modules/boardgame.io/dist/esm/initialize-9ac1bbf5.js":
/*!*******************************************************************!*\
  !*** ./node_modules/boardgame.io/dist/esm/initialize-9ac1bbf5.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"I\": function() { return /* binding */ InitializeGame; }\n/* harmony export */ });\n/* harmony import */ var _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./turn-order-0b7dce3d.js */ \"./node_modules/boardgame.io/dist/esm/turn-order-0b7dce3d.js\");\n/* harmony import */ var _reducer_07c7b307_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./reducer-07c7b307.js */ \"./node_modules/boardgame.io/dist/esm/reducer-07c7b307.js\");\n\n\n\n/*\r\n * Copyright 2020 The boardgame.io Authors\r\n *\r\n * Use of this source code is governed by a MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n */\r\n/**\r\n * Creates the initial game state.\r\n */\r\nfunction InitializeGame({ game, numPlayers, setupData, }) {\r\n    game = (0,_reducer_07c7b307_js__WEBPACK_IMPORTED_MODULE_0__.P)(game);\r\n    if (!numPlayers) {\r\n        numPlayers = 2;\r\n    }\r\n    const ctx = game.flow.ctx(numPlayers);\r\n    let state = {\r\n        // User managed state.\r\n        G: {},\r\n        // Framework managed state.\r\n        ctx,\r\n        // Plugin related state.\r\n        plugins: {},\r\n    };\r\n    // Run plugins over initial state.\r\n    state = (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.t)(state, { game });\r\n    state = (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.m)(state, { game, playerID: undefined });\r\n    const enhancedCtx = (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.E)(state);\r\n    state.G = game.setup(enhancedCtx, setupData);\r\n    let initial = {\r\n        ...state,\r\n        // List of {G, ctx} pairs that can be undone.\r\n        _undo: [],\r\n        // List of {G, ctx} pairs that can be redone.\r\n        _redo: [],\r\n        // A monotonically non-decreasing ID to ensure that\r\n        // state updates are only allowed from clients that\r\n        // are at the same version that the server.\r\n        _stateID: 0,\r\n    };\r\n    initial = game.flow.init(initial);\r\n    [initial] = (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.q)(initial, { game });\r\n    // Initialize undo stack.\r\n    if (!game.disableUndo) {\r\n        initial._undo = [\r\n            {\r\n                G: initial.G,\r\n                ctx: initial.ctx,\r\n                plugins: initial.plugins,\r\n            },\r\n        ];\r\n    }\r\n    return initial;\r\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYm9hcmRnYW1lLmlvL2Rpc3QvZXNtL2luaXRpYWxpemUtOWFjMWJiZjUuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTRHO0FBQzdDOztBQUUvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQiw4QkFBOEI7QUFDeEQsV0FBVyx1REFBaUI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0EsWUFBWSwwREFBSyxVQUFVLE1BQU07QUFDakMsWUFBWSwwREFBTyxVQUFVLDJCQUEyQjtBQUN4RCx3QkFBd0IsMERBQVU7QUFDbEM7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLFFBQVE7QUFDNUI7QUFDQSxvQkFBb0IsUUFBUTtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiwwREFBZ0IsWUFBWSxNQUFNO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBOztBQUUrQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYm9hcmRnYW1lLmlvL2Rpc3QvZXNtL2luaXRpYWxpemUtOWFjMWJiZjUuanM/NDZhYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0IGFzIFNldHVwLCBtIGFzIEVuaGFuY2UsIEUgYXMgRW5oYW5jZUN0eCwgcSBhcyBGbHVzaEFuZFZhbGlkYXRlIH0gZnJvbSAnLi90dXJuLW9yZGVyLTBiN2RjZTNkLmpzJztcbmltcG9ydCB7IFAgYXMgUHJvY2Vzc0dhbWVDb25maWcgfSBmcm9tICcuL3JlZHVjZXItMDdjN2IzMDcuanMnO1xuXG4vKlxyXG4gKiBDb3B5cmlnaHQgMjAyMCBUaGUgYm9hcmRnYW1lLmlvIEF1dGhvcnNcclxuICpcclxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYSBNSVQtc3R5bGVcclxuICogbGljZW5zZSB0aGF0IGNhbiBiZSBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIG9yIGF0XHJcbiAqIGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlULlxyXG4gKi9cclxuLyoqXHJcbiAqIENyZWF0ZXMgdGhlIGluaXRpYWwgZ2FtZSBzdGF0ZS5cclxuICovXHJcbmZ1bmN0aW9uIEluaXRpYWxpemVHYW1lKHsgZ2FtZSwgbnVtUGxheWVycywgc2V0dXBEYXRhLCB9KSB7XHJcbiAgICBnYW1lID0gUHJvY2Vzc0dhbWVDb25maWcoZ2FtZSk7XHJcbiAgICBpZiAoIW51bVBsYXllcnMpIHtcclxuICAgICAgICBudW1QbGF5ZXJzID0gMjtcclxuICAgIH1cclxuICAgIGNvbnN0IGN0eCA9IGdhbWUuZmxvdy5jdHgobnVtUGxheWVycyk7XHJcbiAgICBsZXQgc3RhdGUgPSB7XHJcbiAgICAgICAgLy8gVXNlciBtYW5hZ2VkIHN0YXRlLlxyXG4gICAgICAgIEc6IHt9LFxyXG4gICAgICAgIC8vIEZyYW1ld29yayBtYW5hZ2VkIHN0YXRlLlxyXG4gICAgICAgIGN0eCxcclxuICAgICAgICAvLyBQbHVnaW4gcmVsYXRlZCBzdGF0ZS5cclxuICAgICAgICBwbHVnaW5zOiB7fSxcclxuICAgIH07XHJcbiAgICAvLyBSdW4gcGx1Z2lucyBvdmVyIGluaXRpYWwgc3RhdGUuXHJcbiAgICBzdGF0ZSA9IFNldHVwKHN0YXRlLCB7IGdhbWUgfSk7XHJcbiAgICBzdGF0ZSA9IEVuaGFuY2Uoc3RhdGUsIHsgZ2FtZSwgcGxheWVySUQ6IHVuZGVmaW5lZCB9KTtcclxuICAgIGNvbnN0IGVuaGFuY2VkQ3R4ID0gRW5oYW5jZUN0eChzdGF0ZSk7XHJcbiAgICBzdGF0ZS5HID0gZ2FtZS5zZXR1cChlbmhhbmNlZEN0eCwgc2V0dXBEYXRhKTtcclxuICAgIGxldCBpbml0aWFsID0ge1xyXG4gICAgICAgIC4uLnN0YXRlLFxyXG4gICAgICAgIC8vIExpc3Qgb2Yge0csIGN0eH0gcGFpcnMgdGhhdCBjYW4gYmUgdW5kb25lLlxyXG4gICAgICAgIF91bmRvOiBbXSxcclxuICAgICAgICAvLyBMaXN0IG9mIHtHLCBjdHh9IHBhaXJzIHRoYXQgY2FuIGJlIHJlZG9uZS5cclxuICAgICAgICBfcmVkbzogW10sXHJcbiAgICAgICAgLy8gQSBtb25vdG9uaWNhbGx5IG5vbi1kZWNyZWFzaW5nIElEIHRvIGVuc3VyZSB0aGF0XHJcbiAgICAgICAgLy8gc3RhdGUgdXBkYXRlcyBhcmUgb25seSBhbGxvd2VkIGZyb20gY2xpZW50cyB0aGF0XHJcbiAgICAgICAgLy8gYXJlIGF0IHRoZSBzYW1lIHZlcnNpb24gdGhhdCB0aGUgc2VydmVyLlxyXG4gICAgICAgIF9zdGF0ZUlEOiAwLFxyXG4gICAgfTtcclxuICAgIGluaXRpYWwgPSBnYW1lLmZsb3cuaW5pdChpbml0aWFsKTtcclxuICAgIFtpbml0aWFsXSA9IEZsdXNoQW5kVmFsaWRhdGUoaW5pdGlhbCwgeyBnYW1lIH0pO1xyXG4gICAgLy8gSW5pdGlhbGl6ZSB1bmRvIHN0YWNrLlxyXG4gICAgaWYgKCFnYW1lLmRpc2FibGVVbmRvKSB7XHJcbiAgICAgICAgaW5pdGlhbC5fdW5kbyA9IFtcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgRzogaW5pdGlhbC5HLFxyXG4gICAgICAgICAgICAgICAgY3R4OiBpbml0aWFsLmN0eCxcclxuICAgICAgICAgICAgICAgIHBsdWdpbnM6IGluaXRpYWwucGx1Z2lucyxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICBdO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGluaXRpYWw7XHJcbn1cblxuZXhwb3J0IHsgSW5pdGlhbGl6ZUdhbWUgYXMgSSB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/boardgame.io/dist/esm/initialize-9ac1bbf5.js\n"));

/***/ }),

/***/ "./node_modules/boardgame.io/dist/esm/master-be1abdd0.js":
/*!***************************************************************!*\
  !*** ./node_modules/boardgame.io/dist/esm/master-be1abdd0.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"M\": function() { return /* binding */ Master; }\n/* harmony export */ });\n/* harmony import */ var redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! redux */ \"./node_modules/redux/es/redux.js\");\n/* harmony import */ var _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./turn-order-0b7dce3d.js */ \"./node_modules/boardgame.io/dist/esm/turn-order-0b7dce3d.js\");\n/* harmony import */ var _reducer_07c7b307_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./reducer-07c7b307.js */ \"./node_modules/boardgame.io/dist/esm/reducer-07c7b307.js\");\n/* harmony import */ var _util_b1699aa1_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util-b1699aa1.js */ \"./node_modules/boardgame.io/dist/esm/util-b1699aa1.js\");\n\n\n\n\n\n/*\r\n * Copyright 2018 The boardgame.io Authors\r\n *\r\n * Use of this source code is governed by a MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n */\r\n/**\r\n * Filter match data to get a player metadata object with credentials stripped.\r\n */\r\nconst filterMatchData = (matchData) => Object.values(matchData.players).map((player) => {\r\n    const { credentials, ...filteredData } = player;\r\n    return filteredData;\r\n});\r\n/**\r\n * Remove player credentials from action payload\r\n */\r\nconst stripCredentialsFromAction = (action) => {\r\n    const { credentials, ...payload } = action.payload;\r\n    return { ...action, payload };\r\n};\r\n/**\r\n * Master\r\n *\r\n * Class that runs the game and maintains the authoritative state.\r\n * It uses the transportAPI to communicate with clients and the\r\n * storageAPI to communicate with the database.\r\n */\r\nclass Master {\r\n    constructor(game, storageAPI, transportAPI, auth) {\r\n        this.game = (0,_reducer_07c7b307_js__WEBPACK_IMPORTED_MODULE_0__.P)(game);\r\n        this.storageAPI = storageAPI;\r\n        this.transportAPI = transportAPI;\r\n        this.subscribeCallback = () => { };\r\n        this.auth = auth;\r\n    }\r\n    subscribe(fn) {\r\n        this.subscribeCallback = fn;\r\n    }\r\n    /**\r\n     * Called on each move / event made by the client.\r\n     * Computes the new value of the game state and returns it\r\n     * along with a deltalog.\r\n     */\r\n    async onUpdate(credAction, stateID, matchID, playerID) {\r\n        if (!credAction || !credAction.payload) {\r\n            return { error: 'missing action or action payload' };\r\n        }\r\n        let metadata;\r\n        if ((0,_util_b1699aa1_js__WEBPACK_IMPORTED_MODULE_1__.i)(this.storageAPI)) {\r\n            ({ metadata } = this.storageAPI.fetch(matchID, { metadata: true }));\r\n        }\r\n        else {\r\n            ({ metadata } = await this.storageAPI.fetch(matchID, { metadata: true }));\r\n        }\r\n        if (this.auth) {\r\n            const isAuthentic = await this.auth.authenticateCredentials({\r\n                playerID,\r\n                credentials: credAction.payload.credentials,\r\n                metadata,\r\n            });\r\n            if (!isAuthentic) {\r\n                return { error: 'unauthorized action' };\r\n            }\r\n        }\r\n        const action = stripCredentialsFromAction(credAction);\r\n        const key = matchID;\r\n        let state;\r\n        if ((0,_util_b1699aa1_js__WEBPACK_IMPORTED_MODULE_1__.i)(this.storageAPI)) {\r\n            ({ state } = this.storageAPI.fetch(key, { state: true }));\r\n        }\r\n        else {\r\n            ({ state } = await this.storageAPI.fetch(key, { state: true }));\r\n        }\r\n        if (state === undefined) {\r\n            (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_2__.e)(`game not found, matchID=[${key}]`);\r\n            return { error: 'game not found' };\r\n        }\r\n        if (state.ctx.gameover !== undefined) {\r\n            (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_2__.e)(`game over - matchID=[${key}] - playerID=[${playerID}]` +\r\n                ` - action[${action.payload.type}]`);\r\n            return;\r\n        }\r\n        const reducer = (0,_reducer_07c7b307_js__WEBPACK_IMPORTED_MODULE_0__.C)({\r\n            game: this.game,\r\n        });\r\n        const middleware = (0,redux__WEBPACK_IMPORTED_MODULE_3__.applyMiddleware)(_reducer_07c7b307_js__WEBPACK_IMPORTED_MODULE_0__.T);\r\n        const store = (0,redux__WEBPACK_IMPORTED_MODULE_3__.createStore)(reducer, state, middleware);\r\n        // Only allow UNDO / REDO if there is exactly one player\r\n        // that can make moves right now and the person doing the\r\n        // action is that player.\r\n        if (action.type == _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_2__.h || action.type == _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_2__.R) {\r\n            const hasActivePlayers = state.ctx.activePlayers !== null;\r\n            const isCurrentPlayer = state.ctx.currentPlayer === playerID;\r\n            if (\r\n            // If activePlayers is empty, non-current players can’t undo.\r\n            (!hasActivePlayers && !isCurrentPlayer) ||\r\n                // If player is not active or multiple players are active, can’t undo.\r\n                (hasActivePlayers &&\r\n                    (state.ctx.activePlayers[playerID] === undefined ||\r\n                        Object.keys(state.ctx.activePlayers).length > 1))) {\r\n                (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_2__.e)(`playerID=[${playerID}] cannot undo / redo right now`);\r\n                return;\r\n            }\r\n        }\r\n        // Check whether the player is active.\r\n        if (!this.game.flow.isPlayerActive(state.G, state.ctx, playerID)) {\r\n            (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_2__.e)(`player not active - playerID=[${playerID}]` +\r\n                ` - action[${action.payload.type}]`);\r\n            return;\r\n        }\r\n        // Get move for further checks\r\n        const move = action.type == _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_2__.M\r\n            ? this.game.flow.getMove(state.ctx, action.payload.type, playerID)\r\n            : null;\r\n        // Check whether the player is allowed to make the move.\r\n        if (action.type == _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_2__.M && !move) {\r\n            (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_2__.e)(`move not processed - canPlayerMakeMove=false - playerID=[${playerID}]` +\r\n                ` - action[${action.payload.type}]`);\r\n            return;\r\n        }\r\n        // Check if action's stateID is different than store's stateID\r\n        // and if move does not have ignoreStaleStateID truthy.\r\n        if (state._stateID !== stateID &&\r\n            !(move && (0,_reducer_07c7b307_js__WEBPACK_IMPORTED_MODULE_0__.I)(move) && move.ignoreStaleStateID)) {\r\n            (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_2__.e)(`invalid stateID, was=[${stateID}], expected=[${state._stateID}]` +\r\n                ` - playerID=[${playerID}] - action[${action.payload.type}]`);\r\n            return;\r\n        }\r\n        const prevState = store.getState();\r\n        // Update server's version of the store.\r\n        store.dispatch(action);\r\n        state = store.getState();\r\n        this.subscribeCallback({\r\n            state,\r\n            action,\r\n            matchID,\r\n        });\r\n        if (this.game.deltaState) {\r\n            this.transportAPI.sendAll({\r\n                type: 'patch',\r\n                args: [matchID, stateID, prevState, state],\r\n            });\r\n        }\r\n        else {\r\n            this.transportAPI.sendAll({\r\n                type: 'update',\r\n                args: [matchID, state],\r\n            });\r\n        }\r\n        const { deltalog, ...stateWithoutDeltalog } = state;\r\n        let newMetadata;\r\n        if (metadata &&\r\n            (metadata.gameover === undefined || metadata.gameover === null)) {\r\n            newMetadata = {\r\n                ...metadata,\r\n                updatedAt: Date.now(),\r\n            };\r\n            if (state.ctx.gameover !== undefined) {\r\n                newMetadata.gameover = state.ctx.gameover;\r\n            }\r\n        }\r\n        if ((0,_util_b1699aa1_js__WEBPACK_IMPORTED_MODULE_1__.i)(this.storageAPI)) {\r\n            this.storageAPI.setState(key, stateWithoutDeltalog, deltalog);\r\n            if (newMetadata)\r\n                this.storageAPI.setMetadata(key, newMetadata);\r\n        }\r\n        else {\r\n            const writes = [\r\n                this.storageAPI.setState(key, stateWithoutDeltalog, deltalog),\r\n            ];\r\n            if (newMetadata) {\r\n                writes.push(this.storageAPI.setMetadata(key, newMetadata));\r\n            }\r\n            await Promise.all(writes);\r\n        }\r\n    }\r\n    /**\r\n     * Called when the client connects / reconnects.\r\n     * Returns the latest game state and the entire log.\r\n     */\r\n    async onSync(matchID, playerID, credentials, numPlayers = 2) {\r\n        const key = matchID;\r\n        const fetchOpts = {\r\n            state: true,\r\n            metadata: true,\r\n            log: true,\r\n            initialState: true,\r\n        };\r\n        const fetchResult = (0,_util_b1699aa1_js__WEBPACK_IMPORTED_MODULE_1__.i)(this.storageAPI)\r\n            ? this.storageAPI.fetch(key, fetchOpts)\r\n            : await this.storageAPI.fetch(key, fetchOpts);\r\n        let { state, initialState, log, metadata } = fetchResult;\r\n        if (this.auth && playerID !== undefined && playerID !== null) {\r\n            const isAuthentic = await this.auth.authenticateCredentials({\r\n                playerID,\r\n                credentials,\r\n                metadata,\r\n            });\r\n            if (!isAuthentic) {\r\n                return { error: 'unauthorized' };\r\n            }\r\n        }\r\n        // If the game doesn't exist, then create one on demand.\r\n        // TODO: Move this out of the sync call.\r\n        if (state === undefined) {\r\n            const match = (0,_util_b1699aa1_js__WEBPACK_IMPORTED_MODULE_1__.c)({\r\n                game: this.game,\r\n                unlisted: true,\r\n                numPlayers,\r\n                setupData: undefined,\r\n            });\r\n            if ('setupDataError' in match) {\r\n                return { error: 'game requires setupData' };\r\n            }\r\n            initialState = state = match.initialState;\r\n            metadata = match.metadata;\r\n            this.subscribeCallback({ state, matchID });\r\n            if ((0,_util_b1699aa1_js__WEBPACK_IMPORTED_MODULE_1__.i)(this.storageAPI)) {\r\n                this.storageAPI.createMatch(key, { initialState, metadata });\r\n            }\r\n            else {\r\n                await this.storageAPI.createMatch(key, { initialState, metadata });\r\n            }\r\n        }\r\n        const filteredMetadata = metadata ? filterMatchData(metadata) : undefined;\r\n        const syncInfo = {\r\n            state,\r\n            log,\r\n            filteredMetadata,\r\n            initialState,\r\n        };\r\n        this.transportAPI.send({\r\n            playerID,\r\n            type: 'sync',\r\n            args: [matchID, syncInfo],\r\n        });\r\n        return;\r\n    }\r\n    /**\r\n     * Called when a client connects or disconnects.\r\n     * Updates and sends out metadata to reflect the player’s connection status.\r\n     */\r\n    async onConnectionChange(matchID, playerID, credentials, connected) {\r\n        const key = matchID;\r\n        // Ignore changes for clients without a playerID, e.g. spectators.\r\n        if (playerID === undefined || playerID === null) {\r\n            return;\r\n        }\r\n        let metadata;\r\n        if ((0,_util_b1699aa1_js__WEBPACK_IMPORTED_MODULE_1__.i)(this.storageAPI)) {\r\n            ({ metadata } = this.storageAPI.fetch(key, { metadata: true }));\r\n        }\r\n        else {\r\n            ({ metadata } = await this.storageAPI.fetch(key, { metadata: true }));\r\n        }\r\n        if (metadata === undefined) {\r\n            (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_2__.e)(`metadata not found for matchID=[${key}]`);\r\n            return { error: 'metadata not found' };\r\n        }\r\n        if (metadata.players[playerID] === undefined) {\r\n            (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_2__.e)(`Player not in the match, matchID=[${key}] playerID=[${playerID}]`);\r\n            return { error: 'player not in the match' };\r\n        }\r\n        if (this.auth) {\r\n            const isAuthentic = await this.auth.authenticateCredentials({\r\n                playerID,\r\n                credentials,\r\n                metadata,\r\n            });\r\n            if (!isAuthentic) {\r\n                return { error: 'unauthorized' };\r\n            }\r\n        }\r\n        metadata.players[playerID].isConnected = connected;\r\n        const filteredMetadata = filterMatchData(metadata);\r\n        this.transportAPI.sendAll({\r\n            type: 'matchData',\r\n            args: [matchID, filteredMetadata],\r\n        });\r\n        if ((0,_util_b1699aa1_js__WEBPACK_IMPORTED_MODULE_1__.i)(this.storageAPI)) {\r\n            this.storageAPI.setMetadata(key, metadata);\r\n        }\r\n        else {\r\n            await this.storageAPI.setMetadata(key, metadata);\r\n        }\r\n    }\r\n    async onChatMessage(matchID, chatMessage, credentials) {\r\n        const key = matchID;\r\n        if (this.auth) {\r\n            const { metadata } = await this.storageAPI.fetch(key, {\r\n                metadata: true,\r\n            });\r\n            if (!(chatMessage && typeof chatMessage.sender === 'string')) {\r\n                return { error: 'unauthorized' };\r\n            }\r\n            const isAuthentic = await this.auth.authenticateCredentials({\r\n                playerID: chatMessage.sender,\r\n                credentials,\r\n                metadata,\r\n            });\r\n            if (!isAuthentic) {\r\n                return { error: 'unauthorized' };\r\n            }\r\n        }\r\n        this.transportAPI.sendAll({\r\n            type: 'chat',\r\n            args: [matchID, chatMessage],\r\n        });\r\n    }\r\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/boardgame.io/dist/esm/master-be1abdd0.js\n"));

/***/ }),

/***/ "./node_modules/boardgame.io/dist/esm/multiplayer.js":
/*!***********************************************************!*\
  !*** ./node_modules/boardgame.io/dist/esm/multiplayer.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Local\": function() { return /* reexport safe */ _socketio_e4fb268a_js__WEBPACK_IMPORTED_MODULE_2__.L; },\n/* harmony export */   \"SocketIO\": function() { return /* reexport safe */ _socketio_e4fb268a_js__WEBPACK_IMPORTED_MODULE_2__.S; }\n/* harmony export */ });\n/* harmony import */ var lodash_isplainobject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash.isplainobject */ \"./node_modules/lodash.isplainobject/index.js\");\n/* harmony import */ var lodash_isplainobject__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_isplainobject__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var rfc6902__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rfc6902 */ \"./node_modules/rfc6902/index.js\");\n/* harmony import */ var _socketio_e4fb268a_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./socketio-e4fb268a.js */ \"./node_modules/boardgame.io/dist/esm/socketio-e4fb268a.js\");\n/* harmony import */ var socket_io_client__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! socket.io-client */ \"./node_modules/socket.io-client/build/esm/index.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYm9hcmRnYW1lLmlvL2Rpc3QvZXNtL211bHRpcGxheWVyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBZTtBQUNtQjtBQUNuQjtBQUNzQjtBQUNQO0FBQ0M7QUFDZDtBQUNpQjtBQUNEO0FBQ0w7QUFDdUM7QUFDckM7QUFDWTtBQUNoQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYm9hcmRnYW1lLmlvL2Rpc3QvZXNtL211bHRpcGxheWVyLmpzPzIwMmQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICdyZWR1eCc7XG5pbXBvcnQgJy4vdHVybi1vcmRlci0wYjdkY2UzZC5qcyc7XG5pbXBvcnQgJ2ltbWVyJztcbmltcG9ydCAnLi9wbHVnaW4tcmFuZG9tLTA4N2Y4NjFlLmpzJztcbmltcG9ydCAnbG9kYXNoLmlzcGxhaW5vYmplY3QnO1xuaW1wb3J0ICcuL3JlZHVjZXItMDdjN2IzMDcuanMnO1xuaW1wb3J0ICdyZmM2OTAyJztcbmltcG9ydCAnLi9pbml0aWFsaXplLTlhYzFiYmY1LmpzJztcbmltcG9ydCAnLi90cmFuc3BvcnQtY2UwN2I3NzEuanMnO1xuaW1wb3J0ICcuL3V0aWwtYjE2OTlhYTEuanMnO1xuZXhwb3J0IHsgTCBhcyBMb2NhbCwgUyBhcyBTb2NrZXRJTyB9IGZyb20gJy4vc29ja2V0aW8tZTRmYjI2OGEuanMnO1xuaW1wb3J0ICcuL21hc3Rlci1iZTFhYmRkMC5qcyc7XG5pbXBvcnQgJy4vZmlsdGVyLXBsYXllci12aWV3LWMzMGNkZmJmLmpzJztcbmltcG9ydCAnc29ja2V0LmlvLWNsaWVudCc7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/boardgame.io/dist/esm/multiplayer.js\n"));

/***/ }),

/***/ "./node_modules/boardgame.io/dist/esm/plugin-random-087f861e.js":
/*!**********************************************************************!*\
  !*** ./node_modules/boardgame.io/dist/esm/plugin-random-087f861e.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"R\": function() { return /* binding */ RandomPlugin; },\n/* harmony export */   \"a\": function() { return /* binding */ alea; }\n/* harmony export */ });\n// Inlined version of Alea from https://github.com/davidbau/seedrandom.\r\n// Converted to Typescript October 2020.\r\nclass Alea {\r\n    constructor(seed) {\r\n        const mash = Mash();\r\n        // Apply the seeding algorithm from Baagoe.\r\n        this.c = 1;\r\n        this.s0 = mash(' ');\r\n        this.s1 = mash(' ');\r\n        this.s2 = mash(' ');\r\n        this.s0 -= mash(seed);\r\n        if (this.s0 < 0) {\r\n            this.s0 += 1;\r\n        }\r\n        this.s1 -= mash(seed);\r\n        if (this.s1 < 0) {\r\n            this.s1 += 1;\r\n        }\r\n        this.s2 -= mash(seed);\r\n        if (this.s2 < 0) {\r\n            this.s2 += 1;\r\n        }\r\n    }\r\n    next() {\r\n        const t = 2091639 * this.s0 + this.c * 2.3283064365386963e-10; // 2^-32\r\n        this.s0 = this.s1;\r\n        this.s1 = this.s2;\r\n        return (this.s2 = t - (this.c = Math.trunc(t)));\r\n    }\r\n}\r\nfunction Mash() {\r\n    let n = 0xefc8249d;\r\n    const mash = function (data) {\r\n        const str = data.toString();\r\n        for (let i = 0; i < str.length; i++) {\r\n            n += str.charCodeAt(i);\r\n            let h = 0.02519603282416938 * n;\r\n            n = h >>> 0;\r\n            h -= n;\r\n            h *= n;\r\n            n = h >>> 0;\r\n            h -= n;\r\n            n += h * 0x100000000; // 2^32\r\n        }\r\n        return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\r\n    };\r\n    return mash;\r\n}\r\nfunction copy(f, t) {\r\n    t.c = f.c;\r\n    t.s0 = f.s0;\r\n    t.s1 = f.s1;\r\n    t.s2 = f.s2;\r\n    return t;\r\n}\r\nfunction alea(seed, state) {\r\n    const xg = new Alea(seed);\r\n    const prng = xg.next.bind(xg);\r\n    if (state)\r\n        copy(state, xg);\r\n    prng.state = () => copy(xg, {});\r\n    return prng;\r\n}\n\n/*\r\n * Copyright 2017 The boardgame.io Authors\r\n *\r\n * Use of this source code is governed by a MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n */\r\n/**\r\n * Random\r\n *\r\n * Calls that require a pseudorandom number generator.\r\n * Uses a seed from ctx, and also persists the PRNG\r\n * state in ctx so that moves can stay pure.\r\n */\r\nclass Random {\r\n    /**\r\n     * constructor\r\n     * @param {object} ctx - The ctx object to initialize from.\r\n     */\r\n    constructor(state) {\r\n        // If we are on the client, the seed is not present.\r\n        // Just use a temporary seed to execute the move without\r\n        // crashing it. The move state itself is discarded,\r\n        // so the actual value doesn't matter.\r\n        this.state = state || { seed: '0' };\r\n        this.used = false;\r\n    }\r\n    /**\r\n     * Generates a new seed from the current date / time.\r\n     */\r\n    static seed() {\r\n        return Date.now().toString(36).slice(-10);\r\n    }\r\n    isUsed() {\r\n        return this.used;\r\n    }\r\n    getState() {\r\n        return this.state;\r\n    }\r\n    /**\r\n     * Generate a random number.\r\n     */\r\n    _random() {\r\n        this.used = true;\r\n        const R = this.state;\r\n        const seed = R.prngstate ? '' : R.seed;\r\n        const rand = alea(seed, R.prngstate);\r\n        const number = rand();\r\n        this.state = {\r\n            ...R,\r\n            prngstate: rand.state(),\r\n        };\r\n        return number;\r\n    }\r\n    api() {\r\n        const random = this._random.bind(this);\r\n        const SpotValue = {\r\n            D4: 4,\r\n            D6: 6,\r\n            D8: 8,\r\n            D10: 10,\r\n            D12: 12,\r\n            D20: 20,\r\n        };\r\n        // Generate functions for predefined dice values D4 - D20.\r\n        const predefined = {};\r\n        for (const key in SpotValue) {\r\n            const spotvalue = SpotValue[key];\r\n            predefined[key] = (diceCount) => {\r\n                return diceCount === undefined\r\n                    ? Math.floor(random() * spotvalue) + 1\r\n                    : Array.from({ length: diceCount }).map(() => Math.floor(random() * spotvalue) + 1);\r\n            };\r\n        }\r\n        function Die(spotvalue = 6, diceCount) {\r\n            return diceCount === undefined\r\n                ? Math.floor(random() * spotvalue) + 1\r\n                : Array.from({ length: diceCount }).map(() => Math.floor(random() * spotvalue) + 1);\r\n        }\r\n        return {\r\n            /**\r\n             * Similar to Die below, but with fixed spot values.\r\n             * Supports passing a diceCount\r\n             *    if not defined, defaults to 1 and returns the value directly.\r\n             *    if defined, returns an array containing the random dice values.\r\n             *\r\n             * D4: (diceCount) => value\r\n             * D6: (diceCount) => value\r\n             * D8: (diceCount) => value\r\n             * D10: (diceCount) => value\r\n             * D12: (diceCount) => value\r\n             * D20: (diceCount) => value\r\n             */\r\n            ...predefined,\r\n            /**\r\n             * Roll a die of specified spot value.\r\n             *\r\n             * @param {number} spotvalue - The die dimension (default: 6).\r\n             * @param {number} diceCount - number of dice to throw.\r\n             *                             if not defined, defaults to 1 and returns the value directly.\r\n             *                             if defined, returns an array containing the random dice values.\r\n             */\r\n            Die,\r\n            /**\r\n             * Generate a random number between 0 and 1.\r\n             */\r\n            Number: () => {\r\n                return random();\r\n            },\r\n            /**\r\n             * Shuffle an array.\r\n             *\r\n             * @param {Array} deck - The array to shuffle. Does not mutate\r\n             *                       the input, but returns the shuffled array.\r\n             */\r\n            Shuffle: (deck) => {\r\n                const clone = [...deck];\r\n                let sourceIndex = deck.length;\r\n                let destinationIndex = 0;\r\n                const shuffled = Array.from({ length: sourceIndex });\r\n                while (sourceIndex) {\r\n                    const randomIndex = Math.trunc(sourceIndex * random());\r\n                    shuffled[destinationIndex++] = clone[randomIndex];\r\n                    clone[randomIndex] = clone[--sourceIndex];\r\n                }\r\n                return shuffled;\r\n            },\r\n            _private: this,\r\n        };\r\n    }\r\n}\n\n/*\r\n * Copyright 2018 The boardgame.io Authors\r\n *\r\n * Use of this source code is governed by a MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n */\r\nconst RandomPlugin = {\r\n    name: 'random',\r\n    noClient: ({ api }) => {\r\n        return api._private.isUsed();\r\n    },\r\n    flush: ({ api }) => {\r\n        return api._private.getState();\r\n    },\r\n    api: ({ data }) => {\r\n        const random = new Random(data);\r\n        return random.api();\r\n    },\r\n    setup: ({ game }) => {\r\n        let { seed } = game;\r\n        if (seed === undefined) {\r\n            seed = Random.seed();\r\n        }\r\n        return { seed };\r\n    },\r\n    playerView: () => undefined,\r\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/boardgame.io/dist/esm/plugin-random-087f861e.js\n"));

/***/ }),

/***/ "./node_modules/boardgame.io/dist/esm/react.js":
/*!*****************************************************!*\
  !*** ./node_modules/boardgame.io/dist/esm/react.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Client\": function() { return /* binding */ Client; },\n/* harmony export */   \"Lobby\": function() { return /* binding */ Lobby; }\n/* harmony export */ });\n/* harmony import */ var nanoid_non_secure__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! nanoid/non-secure */ \"./node_modules/nanoid/non-secure/index.js\");\n/* harmony import */ var lodash_isplainobject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash.isplainobject */ \"./node_modules/lodash.isplainobject/index.js\");\n/* harmony import */ var lodash_isplainobject__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_isplainobject__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var rfc6902__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rfc6902 */ \"./node_modules/rfc6902/index.js\");\n/* harmony import */ var _client_fa36c03a_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./client-fa36c03a.js */ \"./node_modules/boardgame.io/dist/esm/client-fa36c03a.js\");\n/* harmony import */ var flatted__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! flatted */ \"./node_modules/flatted/esm/index.js\");\n/* harmony import */ var setimmediate__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! setimmediate */ \"./node_modules/next/dist/compiled/setimmediate/setImmediate.js\");\n/* harmony import */ var setimmediate__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(setimmediate__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _ai_3099ce9a_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./ai-3099ce9a.js */ \"./node_modules/boardgame.io/dist/esm/ai-3099ce9a.js\");\n/* harmony import */ var _client_5f57c3f2_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./client-5f57c3f2.js */ \"./node_modules/boardgame.io/dist/esm/client-5f57c3f2.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var react_cookies__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-cookies */ \"./node_modules/react-cookies/build/cookie.js\");\n/* harmony import */ var _socketio_e4fb268a_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./socketio-e4fb268a.js */ \"./node_modules/boardgame.io/dist/esm/socketio-e4fb268a.js\");\n/* harmony import */ var socket_io_client__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! socket.io-client */ \"./node_modules/socket.io-client/build/esm/index.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\r\n * Copyright 2017 The boardgame.io Authors\r\n *\r\n * Use of this source code is governed by a MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n */\r\n/**\r\n * Client\r\n *\r\n * boardgame.io React client.\r\n *\r\n * @param {...object} game - The return value of `Game`.\r\n * @param {...object} numPlayers - The number of players.\r\n * @param {...object} board - The React component for the game.\r\n * @param {...object} loading - (optional) The React component for the loading state.\r\n * @param {...object} multiplayer - Set to a falsy value or a transportFactory, e.g., SocketIO()\r\n * @param {...object} debug - Enables the Debug UI.\r\n * @param {...object} enhancer - Optional enhancer to send to the Redux store\r\n *\r\n * Returns:\r\n *   A React component that wraps board and provides an\r\n *   API through props for it to interact with the framework\r\n *   and dispatch actions such as MAKE_MOVE, GAME_EVENT, RESET,\r\n *   UNDO and REDO.\r\n */\r\nfunction Client(opts) {\r\n    var _a;\r\n    const { game, numPlayers, board, multiplayer, enhancer } = opts;\r\n    let { loading, debug } = opts;\r\n    // Component that is displayed before the client has synced\r\n    // with the game master.\r\n    if (loading === undefined) {\r\n        const Loading = () => react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"div\", { className: \"bgio-loading\" }, \"connecting...\");\r\n        loading = Loading;\r\n    }\r\n    /*\r\n     * WrappedBoard\r\n     *\r\n     * The main React component that wraps the passed in\r\n     * board component and adds the API to its props.\r\n     */\r\n    return _a = class WrappedBoard extends (react__WEBPACK_IMPORTED_MODULE_5___default().Component) {\r\n            constructor(props) {\r\n                super(props);\r\n                if (debug === undefined) {\r\n                    debug = props.debug;\r\n                }\r\n                this.client = (0,_client_fa36c03a_js__WEBPACK_IMPORTED_MODULE_8__.C)({\r\n                    game,\r\n                    debug,\r\n                    numPlayers,\r\n                    multiplayer,\r\n                    matchID: props.matchID,\r\n                    playerID: props.playerID,\r\n                    credentials: props.credentials,\r\n                    enhancer,\r\n                });\r\n            }\r\n            componentDidMount() {\r\n                this.unsubscribe = this.client.subscribe(() => this.forceUpdate());\r\n                this.client.start();\r\n            }\r\n            componentWillUnmount() {\r\n                this.client.stop();\r\n                this.unsubscribe();\r\n            }\r\n            componentDidUpdate(prevProps) {\r\n                if (this.props.matchID != prevProps.matchID) {\r\n                    this.client.updateMatchID(this.props.matchID);\r\n                }\r\n                if (this.props.playerID != prevProps.playerID) {\r\n                    this.client.updatePlayerID(this.props.playerID);\r\n                }\r\n                if (this.props.credentials != prevProps.credentials) {\r\n                    this.client.updateCredentials(this.props.credentials);\r\n                }\r\n            }\r\n            render() {\r\n                const state = this.client.getState();\r\n                if (state === null) {\r\n                    return react__WEBPACK_IMPORTED_MODULE_5___default().createElement(loading);\r\n                }\r\n                let _board = null;\r\n                if (board) {\r\n                    _board = react__WEBPACK_IMPORTED_MODULE_5___default().createElement(board, {\r\n                        ...state,\r\n                        ...this.props,\r\n                        isMultiplayer: !!multiplayer,\r\n                        moves: this.client.moves,\r\n                        events: this.client.events,\r\n                        matchID: this.client.matchID,\r\n                        playerID: this.client.playerID,\r\n                        reset: this.client.reset,\r\n                        undo: this.client.undo,\r\n                        redo: this.client.redo,\r\n                        log: this.client.log,\r\n                        matchData: this.client.matchData,\r\n                        sendChatMessage: this.client.sendChatMessage,\r\n                        chatMessages: this.client.chatMessages,\r\n                    });\r\n                }\r\n                return react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"div\", { className: \"bgio-client\" }, _board);\r\n            }\r\n        },\r\n        _a.propTypes = {\r\n            // The ID of a game to connect to.\r\n            // Only relevant in multiplayer.\r\n            matchID: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().string),\r\n            // The ID of the player associated with this client.\r\n            // Only relevant in multiplayer.\r\n            playerID: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().string),\r\n            // This client's authentication credentials.\r\n            // Only relevant in multiplayer.\r\n            credentials: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().string),\r\n            // Enable / disable the Debug UI.\r\n            debug: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().any),\r\n        },\r\n        _a.defaultProps = {\r\n            matchID: 'default',\r\n            playerID: null,\r\n            credentials: null,\r\n            debug: true,\r\n        },\r\n        _a;\r\n}\n\n/*\r\n * Copyright 2018 The boardgame.io Authors\r\n *\r\n * Use of this source code is governed by a MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n */\r\nclass _LobbyConnectionImpl {\r\n    constructor({ server, gameComponents, playerName, playerCredentials, }) {\r\n        this.client = new _client_5f57c3f2_js__WEBPACK_IMPORTED_MODULE_10__.L({ server });\r\n        this.gameComponents = gameComponents;\r\n        this.playerName = playerName || 'Visitor';\r\n        this.playerCredentials = playerCredentials;\r\n        this.matches = [];\r\n    }\r\n    async refresh() {\r\n        try {\r\n            this.matches = [];\r\n            const games = await this.client.listGames();\r\n            for (const game of games) {\r\n                if (!this._getGameComponents(game))\r\n                    continue;\r\n                const { matches } = await this.client.listMatches(game);\r\n                this.matches.push(...matches);\r\n            }\r\n        }\r\n        catch (error) {\r\n            throw new Error('failed to retrieve list of matches (' + error + ')');\r\n        }\r\n    }\r\n    _getMatchInstance(matchID) {\r\n        for (const inst of this.matches) {\r\n            if (inst['matchID'] === matchID)\r\n                return inst;\r\n        }\r\n    }\r\n    _getGameComponents(gameName) {\r\n        for (const comp of this.gameComponents) {\r\n            if (comp.game.name === gameName)\r\n                return comp;\r\n        }\r\n    }\r\n    _findPlayer(playerName) {\r\n        for (const inst of this.matches) {\r\n            if (inst.players.some((player) => player.name === playerName))\r\n                return inst;\r\n        }\r\n    }\r\n    async join(gameName, matchID, playerID) {\r\n        try {\r\n            let inst = this._findPlayer(this.playerName);\r\n            if (inst) {\r\n                throw new Error('player has already joined ' + inst.matchID);\r\n            }\r\n            inst = this._getMatchInstance(matchID);\r\n            if (!inst) {\r\n                throw new Error('game instance ' + matchID + ' not found');\r\n            }\r\n            const json = await this.client.joinMatch(gameName, matchID, {\r\n                playerID,\r\n                playerName: this.playerName,\r\n            });\r\n            inst.players[Number.parseInt(playerID)].name = this.playerName;\r\n            this.playerCredentials = json.playerCredentials;\r\n        }\r\n        catch (error) {\r\n            throw new Error('failed to join match ' + matchID + ' (' + error + ')');\r\n        }\r\n    }\r\n    async leave(gameName, matchID) {\r\n        try {\r\n            const inst = this._getMatchInstance(matchID);\r\n            if (!inst)\r\n                throw new Error('match instance not found');\r\n            for (const player of inst.players) {\r\n                if (player.name === this.playerName) {\r\n                    await this.client.leaveMatch(gameName, matchID, {\r\n                        playerID: player.id.toString(),\r\n                        credentials: this.playerCredentials,\r\n                    });\r\n                    delete player.name;\r\n                    delete this.playerCredentials;\r\n                    return;\r\n                }\r\n            }\r\n            throw new Error('player not found in match');\r\n        }\r\n        catch (error) {\r\n            throw new Error('failed to leave match ' + matchID + ' (' + error + ')');\r\n        }\r\n    }\r\n    async disconnect() {\r\n        const inst = this._findPlayer(this.playerName);\r\n        if (inst) {\r\n            await this.leave(inst.gameName, inst.matchID);\r\n        }\r\n        this.matches = [];\r\n        this.playerName = 'Visitor';\r\n    }\r\n    async create(gameName, numPlayers) {\r\n        try {\r\n            const comp = this._getGameComponents(gameName);\r\n            if (!comp)\r\n                throw new Error('game not found');\r\n            if (numPlayers < comp.game.minPlayers ||\r\n                numPlayers > comp.game.maxPlayers)\r\n                throw new Error('invalid number of players ' + numPlayers);\r\n            await this.client.createMatch(gameName, { numPlayers });\r\n        }\r\n        catch (error) {\r\n            throw new Error('failed to create match for ' + gameName + ' (' + error + ')');\r\n        }\r\n    }\r\n}\r\n/**\r\n * LobbyConnection\r\n *\r\n * Lobby model.\r\n *\r\n * @param {string}   server - '<host>:<port>' of the server.\r\n * @param {Array}    gameComponents - A map of Board and Game objects for the supported games.\r\n * @param {string}   playerName - The name of the player.\r\n * @param {string}   playerCredentials - The credentials currently used by the player, if any.\r\n *\r\n * Returns:\r\n *   A JS object that synchronizes the list of running game instances with the server and provides an API to create/join/start instances.\r\n */\r\nfunction LobbyConnection(opts) {\r\n    return new _LobbyConnectionImpl(opts);\r\n}\n\n/*\r\n * Copyright 2018 The boardgame.io Authors.\r\n *\r\n * Use of this source code is governed by a MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n */\r\nclass LobbyLoginForm extends (react__WEBPACK_IMPORTED_MODULE_5___default().Component) {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.state = {\r\n            playerName: this.props.playerName,\r\n            nameErrorMsg: '',\r\n        };\r\n        this.onClickEnter = () => {\r\n            if (this.state.playerName === '')\r\n                return;\r\n            this.props.onEnter(this.state.playerName);\r\n        };\r\n        this.onKeyPress = (event) => {\r\n            if (event.key === 'Enter') {\r\n                this.onClickEnter();\r\n            }\r\n        };\r\n        this.onChangePlayerName = (event) => {\r\n            const name = event.target.value.trim();\r\n            this.setState({\r\n                playerName: name,\r\n                nameErrorMsg: name.length > 0 ? '' : 'empty player name',\r\n            });\r\n        };\r\n    }\r\n    render() {\r\n        return (react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"div\", null,\r\n            react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"p\", { className: \"phase-title\" }, \"Choose a player name:\"),\r\n            react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"input\", { type: \"text\", value: this.state.playerName, onChange: this.onChangePlayerName, onKeyPress: this.onKeyPress }),\r\n            react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"span\", { className: \"buttons\" },\r\n                react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"button\", { className: \"buttons\", onClick: this.onClickEnter }, \"Enter\")),\r\n            react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"br\", null),\r\n            react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"span\", { className: \"error-msg\" },\r\n                this.state.nameErrorMsg,\r\n                react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"br\", null))));\r\n    }\r\n}\r\nLobbyLoginForm.defaultProps = {\r\n    playerName: '',\r\n};\n\n/*\r\n * Copyright 2018 The boardgame.io Authors.\r\n *\r\n * Use of this source code is governed by a MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n */\r\nclass LobbyMatchInstance extends (react__WEBPACK_IMPORTED_MODULE_5___default().Component) {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._createSeat = (player) => {\r\n            return player.name || '[free]';\r\n        };\r\n        this._createButtonJoin = (inst, seatId) => (react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"button\", { key: 'button-join-' + inst.matchID, onClick: () => this.props.onClickJoin(inst.gameName, inst.matchID, '' + seatId) }, \"Join\"));\r\n        this._createButtonLeave = (inst) => (react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"button\", { key: 'button-leave-' + inst.matchID, onClick: () => this.props.onClickLeave(inst.gameName, inst.matchID) }, \"Leave\"));\r\n        this._createButtonPlay = (inst, seatId) => (react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"button\", { key: 'button-play-' + inst.matchID, onClick: () => this.props.onClickPlay(inst.gameName, {\r\n                matchID: inst.matchID,\r\n                playerID: '' + seatId,\r\n                numPlayers: inst.players.length,\r\n            }) }, \"Play\"));\r\n        this._createButtonSpectate = (inst) => (react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"button\", { key: 'button-spectate-' + inst.matchID, onClick: () => this.props.onClickPlay(inst.gameName, {\r\n                matchID: inst.matchID,\r\n                numPlayers: inst.players.length,\r\n            }) }, \"Spectate\"));\r\n        this._createInstanceButtons = (inst) => {\r\n            const playerSeat = inst.players.find((player) => player.name === this.props.playerName);\r\n            const freeSeat = inst.players.find((player) => !player.name);\r\n            if (playerSeat && freeSeat) {\r\n                // already seated: waiting for match to start\r\n                return this._createButtonLeave(inst);\r\n            }\r\n            if (freeSeat) {\r\n                // at least 1 seat is available\r\n                return this._createButtonJoin(inst, freeSeat.id);\r\n            }\r\n            // match is full\r\n            if (playerSeat) {\r\n                return (react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"div\", null, [\r\n                    this._createButtonPlay(inst, playerSeat.id),\r\n                    this._createButtonLeave(inst),\r\n                ]));\r\n            }\r\n            // allow spectating\r\n            return this._createButtonSpectate(inst);\r\n        };\r\n    }\r\n    render() {\r\n        const match = this.props.match;\r\n        let status = 'OPEN';\r\n        if (!match.players.some((player) => !player.name)) {\r\n            status = 'RUNNING';\r\n        }\r\n        return (react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"tr\", { key: 'line-' + match.matchID },\r\n            react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"td\", { key: 'cell-name-' + match.matchID }, match.gameName),\r\n            react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"td\", { key: 'cell-status-' + match.matchID }, status),\r\n            react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"td\", { key: 'cell-seats-' + match.matchID }, match.players.map((player) => this._createSeat(player)).join(', ')),\r\n            react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"td\", { key: 'cell-buttons-' + match.matchID }, this._createInstanceButtons(match))));\r\n    }\r\n}\n\n/*\r\n * Copyright 2018 The boardgame.io Authors.\r\n *\r\n * Use of this source code is governed by a MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n */\r\nclass LobbyCreateMatchForm extends (react__WEBPACK_IMPORTED_MODULE_5___default().Component) {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedGame: 0,\r\n            numPlayers: 2,\r\n        };\r\n        this._createGameNameOption = (game, idx) => {\r\n            return (react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"option\", { key: 'name-option-' + idx, value: idx }, game.game.name));\r\n        };\r\n        this._createNumPlayersOption = (idx) => {\r\n            return (react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"option\", { key: 'num-option-' + idx, value: idx }, idx));\r\n        };\r\n        this._createNumPlayersRange = (game) => {\r\n            return Array.from({ length: game.maxPlayers + 1 })\r\n                .map((_, i) => i)\r\n                .slice(game.minPlayers);\r\n        };\r\n        this.onChangeNumPlayers = (event) => {\r\n            this.setState({\r\n                numPlayers: Number.parseInt(event.target.value),\r\n            });\r\n        };\r\n        this.onChangeSelectedGame = (event) => {\r\n            const idx = Number.parseInt(event.target.value);\r\n            this.setState({\r\n                selectedGame: idx,\r\n                numPlayers: this.props.games[idx].game.minPlayers,\r\n            });\r\n        };\r\n        this.onClickCreate = () => {\r\n            this.props.createMatch(this.props.games[this.state.selectedGame].game.name, this.state.numPlayers);\r\n        };\r\n        /* fix min and max number of players */\r\n        for (const game of props.games) {\r\n            const matchDetails = game.game;\r\n            if (!matchDetails.minPlayers) {\r\n                matchDetails.minPlayers = 1;\r\n            }\r\n            if (!matchDetails.maxPlayers) {\r\n                matchDetails.maxPlayers = 4;\r\n            }\r\n            console.assert(matchDetails.maxPlayers >= matchDetails.minPlayers);\r\n        }\r\n        this.state = {\r\n            selectedGame: 0,\r\n            numPlayers: props.games[0].game.minPlayers,\r\n        };\r\n    }\r\n    render() {\r\n        return (react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"div\", null,\r\n            react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"select\", { value: this.state.selectedGame, onChange: (evt) => this.onChangeSelectedGame(evt) }, this.props.games.map((game, index) => this._createGameNameOption(game, index))),\r\n            react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"span\", null, \"Players:\"),\r\n            react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"select\", { value: this.state.numPlayers, onChange: this.onChangeNumPlayers }, this._createNumPlayersRange(this.props.games[this.state.selectedGame].game).map((number) => this._createNumPlayersOption(number))),\r\n            react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"span\", { className: \"buttons\" },\r\n                react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"button\", { onClick: this.onClickCreate }, \"Create\"))));\r\n    }\r\n}\n\n/*\r\n * Copyright 2018 The boardgame.io Authors.\r\n *\r\n * Use of this source code is governed by a MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n */\r\nvar LobbyPhases;\r\n(function (LobbyPhases) {\r\n    LobbyPhases[\"ENTER\"] = \"enter\";\r\n    LobbyPhases[\"PLAY\"] = \"play\";\r\n    LobbyPhases[\"LIST\"] = \"list\";\r\n})(LobbyPhases || (LobbyPhases = {}));\r\n/**\r\n * Lobby\r\n *\r\n * React lobby component.\r\n *\r\n * @param {Array}  gameComponents - An array of Board and Game objects for the supported games.\r\n * @param {string} lobbyServer - Address of the lobby server (for example 'localhost:8000').\r\n *                               If not set, defaults to the server that served the page.\r\n * @param {string} gameServer - Address of the game server (for example 'localhost:8001').\r\n *                              If not set, defaults to the server that served the page.\r\n * @param {function} clientFactory - Function that is used to create the game clients.\r\n * @param {number} refreshInterval - Interval between server updates (default: 2000ms).\r\n * @param {bool}   debug - Enable debug information (default: false).\r\n *\r\n * Returns:\r\n *   A React component that provides a UI to create, list, join, leave, play or\r\n *   spectate matches (game instances).\r\n */\r\nclass Lobby extends (react__WEBPACK_IMPORTED_MODULE_5___default().Component) {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            phase: LobbyPhases.ENTER,\r\n            playerName: 'Visitor',\r\n            runningMatch: null,\r\n            errorMsg: '',\r\n            credentialStore: {},\r\n        };\r\n        this._createConnection = (props) => {\r\n            const name = this.state.playerName;\r\n            this.connection = LobbyConnection({\r\n                server: props.lobbyServer,\r\n                gameComponents: props.gameComponents,\r\n                playerName: name,\r\n                playerCredentials: this.state.credentialStore[name],\r\n            });\r\n        };\r\n        this._updateCredentials = (playerName, credentials) => {\r\n            this.setState((prevState) => {\r\n                // clone store or componentDidUpdate will not be triggered\r\n                const store = Object.assign({}, prevState.credentialStore);\r\n                store[playerName] = credentials;\r\n                return { credentialStore: store };\r\n            });\r\n        };\r\n        this._updateConnection = async () => {\r\n            await this.connection.refresh();\r\n            this.forceUpdate();\r\n        };\r\n        this._enterLobby = (playerName) => {\r\n            this._startRefreshInterval();\r\n            this.setState({ playerName, phase: LobbyPhases.LIST });\r\n        };\r\n        this._exitLobby = async () => {\r\n            this._clearRefreshInterval();\r\n            await this.connection.disconnect();\r\n            this.setState({ phase: LobbyPhases.ENTER, errorMsg: '' });\r\n        };\r\n        this._createMatch = async (gameName, numPlayers) => {\r\n            try {\r\n                await this.connection.create(gameName, numPlayers);\r\n                await this.connection.refresh();\r\n                // rerender\r\n                this.setState({});\r\n            }\r\n            catch (error) {\r\n                this.setState({ errorMsg: error.message });\r\n            }\r\n        };\r\n        this._joinMatch = async (gameName, matchID, playerID) => {\r\n            try {\r\n                await this.connection.join(gameName, matchID, playerID);\r\n                await this.connection.refresh();\r\n                this._updateCredentials(this.connection.playerName, this.connection.playerCredentials);\r\n            }\r\n            catch (error) {\r\n                this.setState({ errorMsg: error.message });\r\n            }\r\n        };\r\n        this._leaveMatch = async (gameName, matchID) => {\r\n            try {\r\n                await this.connection.leave(gameName, matchID);\r\n                await this.connection.refresh();\r\n                this._updateCredentials(this.connection.playerName, this.connection.playerCredentials);\r\n            }\r\n            catch (error) {\r\n                this.setState({ errorMsg: error.message });\r\n            }\r\n        };\r\n        this._startMatch = (gameName, matchOpts) => {\r\n            const gameCode = this.connection._getGameComponents(gameName);\r\n            if (!gameCode) {\r\n                this.setState({\r\n                    errorMsg: 'game ' + gameName + ' not supported',\r\n                });\r\n                return;\r\n            }\r\n            let multiplayer = undefined;\r\n            if (matchOpts.numPlayers > 1) {\r\n                multiplayer = this.props.gameServer\r\n                    ? (0,_socketio_e4fb268a_js__WEBPACK_IMPORTED_MODULE_11__.S)({ server: this.props.gameServer })\r\n                    : (0,_socketio_e4fb268a_js__WEBPACK_IMPORTED_MODULE_11__.S)();\r\n            }\r\n            if (matchOpts.numPlayers == 1) {\r\n                const maxPlayers = gameCode.game.maxPlayers;\r\n                const bots = {};\r\n                for (let i = 1; i < maxPlayers; i++) {\r\n                    bots[i + ''] = _ai_3099ce9a_js__WEBPACK_IMPORTED_MODULE_12__.M;\r\n                }\r\n                multiplayer = (0,_socketio_e4fb268a_js__WEBPACK_IMPORTED_MODULE_11__.L)({ bots });\r\n            }\r\n            const app = this.props.clientFactory({\r\n                game: gameCode.game,\r\n                board: gameCode.board,\r\n                debug: this.props.debug,\r\n                multiplayer,\r\n            });\r\n            const match = {\r\n                app: app,\r\n                matchID: matchOpts.matchID,\r\n                playerID: matchOpts.numPlayers > 1 ? matchOpts.playerID : '0',\r\n                credentials: this.connection.playerCredentials,\r\n            };\r\n            this._clearRefreshInterval();\r\n            this.setState({ phase: LobbyPhases.PLAY, runningMatch: match });\r\n        };\r\n        this._exitMatch = () => {\r\n            this._startRefreshInterval();\r\n            this.setState({ phase: LobbyPhases.LIST, runningMatch: null });\r\n        };\r\n        this._getPhaseVisibility = (phase) => {\r\n            return this.state.phase !== phase ? 'hidden' : 'phase';\r\n        };\r\n        this.renderMatches = (matches, playerName) => {\r\n            return matches.map((match) => {\r\n                const { matchID, gameName, players } = match;\r\n                return (react__WEBPACK_IMPORTED_MODULE_5___default().createElement(LobbyMatchInstance, { key: 'instance-' + matchID, match: { matchID, gameName, players: Object.values(players) }, playerName: playerName, onClickJoin: this._joinMatch, onClickLeave: this._leaveMatch, onClickPlay: this._startMatch }));\r\n            });\r\n        };\r\n        this._createConnection(this.props);\r\n    }\r\n    componentDidMount() {\r\n        const cookie = react_cookies__WEBPACK_IMPORTED_MODULE_6__[\"default\"].load('lobbyState') || {};\r\n        if (cookie.phase && cookie.phase === LobbyPhases.PLAY) {\r\n            cookie.phase = LobbyPhases.LIST;\r\n        }\r\n        if (cookie.phase && cookie.phase !== LobbyPhases.ENTER) {\r\n            this._startRefreshInterval();\r\n        }\r\n        this.setState({\r\n            phase: cookie.phase || LobbyPhases.ENTER,\r\n            playerName: cookie.playerName || 'Visitor',\r\n            credentialStore: cookie.credentialStore || {},\r\n        });\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const name = this.state.playerName;\r\n        const creds = this.state.credentialStore[name];\r\n        if (prevState.phase !== this.state.phase ||\r\n            prevState.credentialStore[name] !== creds ||\r\n            prevState.playerName !== name) {\r\n            this._createConnection(this.props);\r\n            this._updateConnection();\r\n            const cookie = {\r\n                phase: this.state.phase,\r\n                playerName: name,\r\n                credentialStore: this.state.credentialStore,\r\n            };\r\n            react_cookies__WEBPACK_IMPORTED_MODULE_6__[\"default\"].save('lobbyState', cookie, { path: '/' });\r\n        }\r\n        if (prevProps.refreshInterval !== this.props.refreshInterval) {\r\n            this._startRefreshInterval();\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        this._clearRefreshInterval();\r\n    }\r\n    _startRefreshInterval() {\r\n        this._clearRefreshInterval();\r\n        this._currentInterval = setInterval(this._updateConnection, this.props.refreshInterval);\r\n    }\r\n    _clearRefreshInterval() {\r\n        clearInterval(this._currentInterval);\r\n    }\r\n    render() {\r\n        const { gameComponents, renderer } = this.props;\r\n        const { errorMsg, playerName, phase, runningMatch } = this.state;\r\n        if (renderer) {\r\n            return renderer({\r\n                errorMsg,\r\n                gameComponents,\r\n                matches: this.connection.matches,\r\n                phase,\r\n                playerName,\r\n                runningMatch,\r\n                handleEnterLobby: this._enterLobby,\r\n                handleExitLobby: this._exitLobby,\r\n                handleCreateMatch: this._createMatch,\r\n                handleJoinMatch: this._joinMatch,\r\n                handleLeaveMatch: this._leaveMatch,\r\n                handleExitMatch: this._exitMatch,\r\n                handleRefreshMatches: this._updateConnection,\r\n                handleStartMatch: this._startMatch,\r\n            });\r\n        }\r\n        return (react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"div\", { id: \"lobby-view\", style: { padding: 50 } },\r\n            react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"div\", { className: this._getPhaseVisibility(LobbyPhases.ENTER) },\r\n                react__WEBPACK_IMPORTED_MODULE_5___default().createElement(LobbyLoginForm, { key: playerName, playerName: playerName, onEnter: this._enterLobby })),\r\n            react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"div\", { className: this._getPhaseVisibility(LobbyPhases.LIST) },\r\n                react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"p\", null,\r\n                    \"Welcome, \",\r\n                    playerName),\r\n                react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"div\", { className: \"phase-title\", id: \"match-creation\" },\r\n                    react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"span\", null, \"Create a match:\"),\r\n                    react__WEBPACK_IMPORTED_MODULE_5___default().createElement(LobbyCreateMatchForm, { games: gameComponents, createMatch: this._createMatch })),\r\n                react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"p\", { className: \"phase-title\" }, \"Join a match:\"),\r\n                react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"div\", { id: \"instances\" },\r\n                    react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"table\", null,\r\n                        react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"tbody\", null, this.renderMatches(this.connection.matches, playerName))),\r\n                    react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"span\", { className: \"error-msg\" },\r\n                        errorMsg,\r\n                        react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"br\", null))),\r\n                react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"p\", { className: \"phase-title\" }, \"Matches that become empty are automatically deleted.\")),\r\n            react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"div\", { className: this._getPhaseVisibility(LobbyPhases.PLAY) },\r\n                runningMatch && (react__WEBPACK_IMPORTED_MODULE_5___default().createElement(runningMatch.app, { matchID: runningMatch.matchID, playerID: runningMatch.playerID, credentials: runningMatch.credentials })),\r\n                react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"div\", { className: \"buttons\", id: \"match-exit\" },\r\n                    react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"button\", { onClick: this._exitMatch }, \"Exit match\"))),\r\n            react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"div\", { className: \"buttons\", id: \"lobby-exit\" },\r\n                react__WEBPACK_IMPORTED_MODULE_5___default().createElement(\"button\", { onClick: this._exitLobby }, \"Exit lobby\"))));\r\n    }\r\n}\r\nLobby.propTypes = {\r\n    gameComponents: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().array.isRequired),\r\n    lobbyServer: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().string),\r\n    gameServer: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().string),\r\n    debug: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().bool),\r\n    clientFactory: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().func),\r\n    refreshInterval: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().number),\r\n};\r\nLobby.defaultProps = {\r\n    debug: false,\r\n    clientFactory: Client,\r\n    refreshInterval: 2000,\r\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/boardgame.io/dist/esm/react.js\n"));

/***/ }),

/***/ "./node_modules/boardgame.io/dist/esm/reducer-07c7b307.js":
/*!****************************************************************!*\
  !*** ./node_modules/boardgame.io/dist/esm/reducer-07c7b307.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"C\": function() { return /* binding */ CreateGameReducer; },\n/* harmony export */   \"I\": function() { return /* binding */ IsLongFormMove; },\n/* harmony export */   \"P\": function() { return /* binding */ ProcessGameConfig; },\n/* harmony export */   \"T\": function() { return /* binding */ TransientHandlingMiddleware; }\n/* harmony export */ });\n/* harmony import */ var _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./turn-order-0b7dce3d.js */ \"./node_modules/boardgame.io/dist/esm/turn-order-0b7dce3d.js\");\n/* harmony import */ var rfc6902__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rfc6902 */ \"./node_modules/rfc6902/index.js\");\n\n\n\n/*\r\n * Copyright 2017 The boardgame.io Authors\r\n *\r\n * Use of this source code is governed by a MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n */\r\n/**\r\n * Flow\r\n *\r\n * Creates a reducer that updates ctx (analogous to how moves update G).\r\n */\r\nfunction Flow({ moves, phases, endIf, onEnd, turn, events, plugins, }) {\r\n    // Attach defaults.\r\n    if (moves === undefined) {\r\n        moves = {};\r\n    }\r\n    if (events === undefined) {\r\n        events = {};\r\n    }\r\n    if (plugins === undefined) {\r\n        plugins = [];\r\n    }\r\n    if (phases === undefined) {\r\n        phases = {};\r\n    }\r\n    if (!endIf)\r\n        endIf = () => undefined;\r\n    if (!onEnd)\r\n        onEnd = (G) => G;\r\n    if (!turn)\r\n        turn = {};\r\n    const phaseMap = { ...phases };\r\n    if ('' in phaseMap) {\r\n        (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.e)('cannot specify phase with empty name');\r\n    }\r\n    phaseMap[''] = {};\r\n    const moveMap = {};\r\n    const moveNames = new Set();\r\n    let startingPhase = null;\r\n    Object.keys(moves).forEach((name) => moveNames.add(name));\r\n    const HookWrapper = (hook, hookType) => {\r\n        const withPlugins = (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.F)(hook, hookType, plugins);\r\n        return (state) => {\r\n            const ctxWithAPI = (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.E)(state);\r\n            return withPlugins(state.G, ctxWithAPI);\r\n        };\r\n    };\r\n    const TriggerWrapper = (trigger) => {\r\n        return (state) => {\r\n            const ctxWithAPI = (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.E)(state);\r\n            return trigger(state.G, ctxWithAPI);\r\n        };\r\n    };\r\n    const wrapped = {\r\n        onEnd: HookWrapper(onEnd, _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.G.GAME_ON_END),\r\n        endIf: TriggerWrapper(endIf),\r\n    };\r\n    for (const phase in phaseMap) {\r\n        const phaseConfig = phaseMap[phase];\r\n        if (phaseConfig.start === true) {\r\n            startingPhase = phase;\r\n        }\r\n        if (phaseConfig.moves !== undefined) {\r\n            for (const move of Object.keys(phaseConfig.moves)) {\r\n                moveMap[phase + '.' + move] = phaseConfig.moves[move];\r\n                moveNames.add(move);\r\n            }\r\n        }\r\n        if (phaseConfig.endIf === undefined) {\r\n            phaseConfig.endIf = () => undefined;\r\n        }\r\n        if (phaseConfig.onBegin === undefined) {\r\n            phaseConfig.onBegin = (G) => G;\r\n        }\r\n        if (phaseConfig.onEnd === undefined) {\r\n            phaseConfig.onEnd = (G) => G;\r\n        }\r\n        if (phaseConfig.turn === undefined) {\r\n            phaseConfig.turn = turn;\r\n        }\r\n        if (phaseConfig.turn.order === undefined) {\r\n            phaseConfig.turn.order = _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.T.DEFAULT;\r\n        }\r\n        if (phaseConfig.turn.onBegin === undefined) {\r\n            phaseConfig.turn.onBegin = (G) => G;\r\n        }\r\n        if (phaseConfig.turn.onEnd === undefined) {\r\n            phaseConfig.turn.onEnd = (G) => G;\r\n        }\r\n        if (phaseConfig.turn.endIf === undefined) {\r\n            phaseConfig.turn.endIf = () => false;\r\n        }\r\n        if (phaseConfig.turn.onMove === undefined) {\r\n            phaseConfig.turn.onMove = (G) => G;\r\n        }\r\n        if (phaseConfig.turn.stages === undefined) {\r\n            phaseConfig.turn.stages = {};\r\n        }\r\n        // turns previously treated moveLimit as both minMoves and maxMoves, this behaviour is kept intentionally\r\n        (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.a)(phaseConfig.turn, true);\r\n        for (const stage in phaseConfig.turn.stages) {\r\n            const stageConfig = phaseConfig.turn.stages[stage];\r\n            const moves = stageConfig.moves || {};\r\n            for (const move of Object.keys(moves)) {\r\n                const key = phase + '.' + stage + '.' + move;\r\n                moveMap[key] = moves[move];\r\n                moveNames.add(move);\r\n            }\r\n        }\r\n        phaseConfig.wrapped = {\r\n            onBegin: HookWrapper(phaseConfig.onBegin, _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.G.PHASE_ON_BEGIN),\r\n            onEnd: HookWrapper(phaseConfig.onEnd, _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.G.PHASE_ON_END),\r\n            endIf: TriggerWrapper(phaseConfig.endIf),\r\n        };\r\n        phaseConfig.turn.wrapped = {\r\n            onMove: HookWrapper(phaseConfig.turn.onMove, _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.G.TURN_ON_MOVE),\r\n            onBegin: HookWrapper(phaseConfig.turn.onBegin, _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.G.TURN_ON_BEGIN),\r\n            onEnd: HookWrapper(phaseConfig.turn.onEnd, _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.G.TURN_ON_END),\r\n            endIf: TriggerWrapper(phaseConfig.turn.endIf),\r\n        };\r\n        if (typeof phaseConfig.next !== 'function') {\r\n            const { next } = phaseConfig;\r\n            phaseConfig.next = () => next || null;\r\n        }\r\n        phaseConfig.wrapped.next = TriggerWrapper(phaseConfig.next);\r\n    }\r\n    function GetPhase(ctx) {\r\n        return ctx.phase ? phaseMap[ctx.phase] : phaseMap[''];\r\n    }\r\n    function OnMove(s) {\r\n        return s;\r\n    }\r\n    function Process(state, events) {\r\n        const phasesEnded = new Set();\r\n        const turnsEnded = new Set();\r\n        for (let i = 0; i < events.length; i++) {\r\n            const { fn, arg, ...rest } = events[i];\r\n            // Detect a loop of EndPhase calls.\r\n            // This could potentially even be an infinite loop\r\n            // if the endIf condition of each phase blindly\r\n            // returns true. The moment we detect a single\r\n            // loop, we just bail out of all phases.\r\n            if (fn === EndPhase) {\r\n                turnsEnded.clear();\r\n                const phase = state.ctx.phase;\r\n                if (phasesEnded.has(phase)) {\r\n                    const ctx = { ...state.ctx, phase: null };\r\n                    return { ...state, ctx };\r\n                }\r\n                phasesEnded.add(phase);\r\n            }\r\n            // Process event.\r\n            const next = [];\r\n            state = fn(state, {\r\n                ...rest,\r\n                arg,\r\n                next,\r\n            });\r\n            if (fn === EndGame) {\r\n                break;\r\n            }\r\n            // Check if we should end the game.\r\n            const shouldEndGame = ShouldEndGame(state);\r\n            if (shouldEndGame) {\r\n                events.push({\r\n                    fn: EndGame,\r\n                    arg: shouldEndGame,\r\n                    turn: state.ctx.turn,\r\n                    phase: state.ctx.phase,\r\n                    automatic: true,\r\n                });\r\n                continue;\r\n            }\r\n            // Check if we should end the phase.\r\n            const shouldEndPhase = ShouldEndPhase(state);\r\n            if (shouldEndPhase) {\r\n                events.push({\r\n                    fn: EndPhase,\r\n                    arg: shouldEndPhase,\r\n                    turn: state.ctx.turn,\r\n                    phase: state.ctx.phase,\r\n                    automatic: true,\r\n                });\r\n                continue;\r\n            }\r\n            // Check if we should end the turn.\r\n            if ([OnMove, UpdateStage, UpdateActivePlayers].includes(fn)) {\r\n                const shouldEndTurn = ShouldEndTurn(state);\r\n                if (shouldEndTurn) {\r\n                    events.push({\r\n                        fn: EndTurn,\r\n                        arg: shouldEndTurn,\r\n                        turn: state.ctx.turn,\r\n                        phase: state.ctx.phase,\r\n                        automatic: true,\r\n                    });\r\n                    continue;\r\n                }\r\n            }\r\n            events.push(...next);\r\n        }\r\n        return state;\r\n    }\r\n    ///////////\r\n    // Start //\r\n    ///////////\r\n    function StartGame(state, { next }) {\r\n        next.push({ fn: StartPhase });\r\n        return state;\r\n    }\r\n    function StartPhase(state, { next }) {\r\n        let { G, ctx } = state;\r\n        const phaseConfig = GetPhase(ctx);\r\n        // Run any phase setup code provided by the user.\r\n        G = phaseConfig.wrapped.onBegin(state);\r\n        next.push({ fn: StartTurn });\r\n        return { ...state, G, ctx };\r\n    }\r\n    function StartTurn(state, { currentPlayer }) {\r\n        let { ctx } = state;\r\n        const phaseConfig = GetPhase(ctx);\r\n        // Initialize the turn order state.\r\n        if (currentPlayer) {\r\n            ctx = { ...ctx, currentPlayer };\r\n            if (phaseConfig.turn.activePlayers) {\r\n                ctx = (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.b)(ctx, phaseConfig.turn.activePlayers);\r\n            }\r\n        }\r\n        else {\r\n            // This is only called at the beginning of the phase\r\n            // when there is no currentPlayer yet.\r\n            ctx = (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.I)(state, phaseConfig.turn);\r\n        }\r\n        const turn = ctx.turn + 1;\r\n        ctx = { ...ctx, turn, numMoves: 0, _prevActivePlayers: [] };\r\n        const G = phaseConfig.turn.wrapped.onBegin({ ...state, ctx });\r\n        return { ...state, G, ctx, _undo: [], _redo: [] };\r\n    }\r\n    ////////////\r\n    // Update //\r\n    ////////////\r\n    function UpdatePhase(state, { arg, next, phase }) {\r\n        const phaseConfig = GetPhase({ phase });\r\n        let { ctx } = state;\r\n        if (arg && arg.next) {\r\n            if (arg.next in phaseMap) {\r\n                ctx = { ...ctx, phase: arg.next };\r\n            }\r\n            else {\r\n                (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.e)('invalid phase: ' + arg.next);\r\n                return state;\r\n            }\r\n        }\r\n        else {\r\n            ctx = { ...ctx, phase: phaseConfig.wrapped.next(state) || null };\r\n        }\r\n        state = { ...state, ctx };\r\n        // Start the new phase.\r\n        next.push({ fn: StartPhase });\r\n        return state;\r\n    }\r\n    function UpdateTurn(state, { arg, currentPlayer, next }) {\r\n        let { G, ctx } = state;\r\n        const phaseConfig = GetPhase(ctx);\r\n        // Update turn order state.\r\n        const { endPhase, ctx: newCtx } = (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.U)(state, currentPlayer, phaseConfig.turn, arg);\r\n        ctx = newCtx;\r\n        state = { ...state, G, ctx };\r\n        if (endPhase) {\r\n            next.push({ fn: EndPhase, turn: ctx.turn, phase: ctx.phase });\r\n        }\r\n        else {\r\n            next.push({ fn: StartTurn, currentPlayer: ctx.currentPlayer });\r\n        }\r\n        return state;\r\n    }\r\n    function UpdateStage(state, { arg, playerID }) {\r\n        if (typeof arg === 'string' || arg === _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.S.NULL) {\r\n            arg = { stage: arg };\r\n        }\r\n        if (typeof arg !== 'object')\r\n            return state;\r\n        // `arg` should be of type `StageArg`, loose typing as `any` here for historic reasons\r\n        // stages previously did not enforce minMoves, this behaviour is kept intentionally\r\n        (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.a)(arg);\r\n        let { ctx } = state;\r\n        let { activePlayers, _activePlayersMinMoves, _activePlayersMaxMoves, _activePlayersNumMoves, } = ctx;\r\n        // Checking if stage is valid, even Stage.NULL\r\n        if (arg.stage !== undefined) {\r\n            if (activePlayers === null) {\r\n                activePlayers = {};\r\n            }\r\n            activePlayers[playerID] = arg.stage;\r\n            _activePlayersNumMoves[playerID] = 0;\r\n            if (arg.minMoves) {\r\n                if (_activePlayersMinMoves === null) {\r\n                    _activePlayersMinMoves = {};\r\n                }\r\n                _activePlayersMinMoves[playerID] = arg.minMoves;\r\n            }\r\n            if (arg.maxMoves) {\r\n                if (_activePlayersMaxMoves === null) {\r\n                    _activePlayersMaxMoves = {};\r\n                }\r\n                _activePlayersMaxMoves[playerID] = arg.maxMoves;\r\n            }\r\n        }\r\n        ctx = {\r\n            ...ctx,\r\n            activePlayers,\r\n            _activePlayersMinMoves,\r\n            _activePlayersMaxMoves,\r\n            _activePlayersNumMoves,\r\n        };\r\n        return { ...state, ctx };\r\n    }\r\n    function UpdateActivePlayers(state, { arg }) {\r\n        return { ...state, ctx: (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.b)(state.ctx, arg) };\r\n    }\r\n    ///////////////\r\n    // ShouldEnd //\r\n    ///////////////\r\n    function ShouldEndGame(state) {\r\n        return wrapped.endIf(state);\r\n    }\r\n    function ShouldEndPhase(state) {\r\n        const phaseConfig = GetPhase(state.ctx);\r\n        return phaseConfig.wrapped.endIf(state);\r\n    }\r\n    function ShouldEndTurn(state) {\r\n        const phaseConfig = GetPhase(state.ctx);\r\n        // End the turn if the required number of moves has been made.\r\n        const currentPlayerMoves = state.ctx.numMoves || 0;\r\n        if (phaseConfig.turn.maxMoves &&\r\n            currentPlayerMoves >= phaseConfig.turn.maxMoves) {\r\n            return true;\r\n        }\r\n        return phaseConfig.turn.wrapped.endIf(state);\r\n    }\r\n    /////////\r\n    // End //\r\n    /////////\r\n    function EndGame(state, { arg, phase }) {\r\n        state = EndPhase(state, { phase });\r\n        if (arg === undefined) {\r\n            arg = true;\r\n        }\r\n        state = { ...state, ctx: { ...state.ctx, gameover: arg } };\r\n        // Run game end hook.\r\n        const G = wrapped.onEnd(state);\r\n        return { ...state, G };\r\n    }\r\n    function EndPhase(state, { arg, next, turn: initialTurn, automatic }) {\r\n        // End the turn first.\r\n        state = EndTurn(state, { turn: initialTurn, force: true, automatic: true });\r\n        const { phase, turn } = state.ctx;\r\n        if (next) {\r\n            next.push({ fn: UpdatePhase, arg, phase });\r\n        }\r\n        // If we aren't in a phase, there is nothing else to do.\r\n        if (phase === null) {\r\n            return state;\r\n        }\r\n        // Run any cleanup code for the phase that is about to end.\r\n        const phaseConfig = GetPhase(state.ctx);\r\n        const G = phaseConfig.wrapped.onEnd(state);\r\n        // Reset the phase.\r\n        const ctx = { ...state.ctx, phase: null };\r\n        // Add log entry.\r\n        const action = (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.g)('endPhase', arg);\r\n        const { _stateID } = state;\r\n        const logEntry = { action, _stateID, turn, phase };\r\n        if (automatic)\r\n            logEntry.automatic = true;\r\n        const deltalog = [...(state.deltalog || []), logEntry];\r\n        return { ...state, G, ctx, deltalog };\r\n    }\r\n    function EndTurn(state, { arg, next, turn: initialTurn, force, automatic, playerID }) {\r\n        // This is not the turn that EndTurn was originally\r\n        // called for. The turn was probably ended some other way.\r\n        if (initialTurn !== state.ctx.turn) {\r\n            return state;\r\n        }\r\n        const { currentPlayer, numMoves, phase, turn } = state.ctx;\r\n        const phaseConfig = GetPhase(state.ctx);\r\n        // Prevent ending the turn if minMoves haven't been reached.\r\n        const currentPlayerMoves = numMoves || 0;\r\n        if (!force &&\r\n            phaseConfig.turn.minMoves &&\r\n            currentPlayerMoves < phaseConfig.turn.minMoves) {\r\n            (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.i)(`cannot end turn before making ${phaseConfig.turn.minMoves} moves`);\r\n            return state;\r\n        }\r\n        // Run turn-end triggers.\r\n        const G = phaseConfig.turn.wrapped.onEnd(state);\r\n        if (next) {\r\n            next.push({ fn: UpdateTurn, arg, currentPlayer });\r\n        }\r\n        // Reset activePlayers.\r\n        let ctx = { ...state.ctx, activePlayers: null };\r\n        // Remove player from playerOrder\r\n        if (arg && arg.remove) {\r\n            playerID = playerID || currentPlayer;\r\n            const playOrder = ctx.playOrder.filter((i) => i != playerID);\r\n            const playOrderPos = ctx.playOrderPos > playOrder.length - 1 ? 0 : ctx.playOrderPos;\r\n            ctx = { ...ctx, playOrder, playOrderPos };\r\n            if (playOrder.length === 0) {\r\n                next.push({ fn: EndPhase, turn, phase });\r\n                return state;\r\n            }\r\n        }\r\n        // Create log entry.\r\n        const action = (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.g)('endTurn', arg);\r\n        const { _stateID } = state;\r\n        const logEntry = { action, _stateID, turn, phase };\r\n        if (automatic)\r\n            logEntry.automatic = true;\r\n        const deltalog = [...(state.deltalog || []), logEntry];\r\n        return { ...state, G, ctx, deltalog, _undo: [], _redo: [] };\r\n    }\r\n    function EndStage(state, { arg, next, automatic, playerID }) {\r\n        playerID = playerID || state.ctx.currentPlayer;\r\n        let { ctx, _stateID } = state;\r\n        let { activePlayers, _activePlayersNumMoves, _activePlayersMinMoves, _activePlayersMaxMoves, phase, turn, } = ctx;\r\n        const playerInStage = activePlayers !== null && playerID in activePlayers;\r\n        const phaseConfig = GetPhase(ctx);\r\n        if (!arg && playerInStage) {\r\n            const stage = phaseConfig.turn.stages[activePlayers[playerID]];\r\n            if (stage && stage.next) {\r\n                arg = stage.next;\r\n            }\r\n        }\r\n        // Checking if arg is a valid stage, even Stage.NULL\r\n        if (next) {\r\n            next.push({ fn: UpdateStage, arg, playerID });\r\n        }\r\n        // If player isn’t in a stage, there is nothing else to do.\r\n        if (!playerInStage)\r\n            return state;\r\n        // Prevent ending the stage if minMoves haven't been reached.\r\n        const currentPlayerMoves = _activePlayersNumMoves[playerID] || 0;\r\n        if (_activePlayersMinMoves &&\r\n            _activePlayersMinMoves[playerID] &&\r\n            currentPlayerMoves < _activePlayersMinMoves[playerID]) {\r\n            (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.i)(`cannot end stage before making ${_activePlayersMinMoves[playerID]} moves`);\r\n            return state;\r\n        }\r\n        // Remove player from activePlayers.\r\n        activePlayers = { ...activePlayers };\r\n        delete activePlayers[playerID];\r\n        if (_activePlayersMinMoves) {\r\n            // Remove player from _activePlayersMinMoves.\r\n            _activePlayersMinMoves = { ..._activePlayersMinMoves };\r\n            delete _activePlayersMinMoves[playerID];\r\n        }\r\n        if (_activePlayersMaxMoves) {\r\n            // Remove player from _activePlayersMaxMoves.\r\n            _activePlayersMaxMoves = { ..._activePlayersMaxMoves };\r\n            delete _activePlayersMaxMoves[playerID];\r\n        }\r\n        ctx = (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.c)({\r\n            ...ctx,\r\n            activePlayers,\r\n            _activePlayersMinMoves,\r\n            _activePlayersMaxMoves,\r\n        });\r\n        // Create log entry.\r\n        const action = (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.g)('endStage', arg);\r\n        const logEntry = { action, _stateID, turn, phase };\r\n        if (automatic)\r\n            logEntry.automatic = true;\r\n        const deltalog = [...(state.deltalog || []), logEntry];\r\n        return { ...state, ctx, deltalog };\r\n    }\r\n    /**\r\n     * Retrieves the relevant move that can be played by playerID.\r\n     *\r\n     * If ctx.activePlayers is set (i.e. one or more players are in some stage),\r\n     * then it attempts to find the move inside the stages config for\r\n     * that turn. If the stage for a player is '', then the player is\r\n     * allowed to make a move (as determined by the phase config), but\r\n     * isn't restricted to a particular set as defined in the stage config.\r\n     *\r\n     * If not, it then looks for the move inside the phase.\r\n     *\r\n     * If it doesn't find the move there, it looks at the global move definition.\r\n     *\r\n     * @param {object} ctx\r\n     * @param {string} name\r\n     * @param {string} playerID\r\n     */\r\n    function GetMove(ctx, name, playerID) {\r\n        const phaseConfig = GetPhase(ctx);\r\n        const stages = phaseConfig.turn.stages;\r\n        const { activePlayers } = ctx;\r\n        if (activePlayers &&\r\n            activePlayers[playerID] !== undefined &&\r\n            activePlayers[playerID] !== _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.S.NULL &&\r\n            stages[activePlayers[playerID]] !== undefined &&\r\n            stages[activePlayers[playerID]].moves !== undefined) {\r\n            // Check if moves are defined for the player's stage.\r\n            const stage = stages[activePlayers[playerID]];\r\n            const moves = stage.moves;\r\n            if (name in moves) {\r\n                return moves[name];\r\n            }\r\n        }\r\n        else if (phaseConfig.moves) {\r\n            // Check if moves are defined for the current phase.\r\n            if (name in phaseConfig.moves) {\r\n                return phaseConfig.moves[name];\r\n            }\r\n        }\r\n        else if (name in moves) {\r\n            // Check for the move globally.\r\n            return moves[name];\r\n        }\r\n        return null;\r\n    }\r\n    function ProcessMove(state, action) {\r\n        const { playerID, type } = action;\r\n        const { currentPlayer, activePlayers, _activePlayersMaxMoves } = state.ctx;\r\n        const move = GetMove(state.ctx, type, playerID);\r\n        const shouldCount = !move || typeof move === 'function' || move.noLimit !== true;\r\n        let { numMoves, _activePlayersNumMoves } = state.ctx;\r\n        if (shouldCount) {\r\n            if (playerID === currentPlayer)\r\n                numMoves++;\r\n            if (activePlayers)\r\n                _activePlayersNumMoves[playerID]++;\r\n        }\r\n        state = {\r\n            ...state,\r\n            ctx: {\r\n                ...state.ctx,\r\n                numMoves,\r\n                _activePlayersNumMoves,\r\n            },\r\n        };\r\n        if (_activePlayersMaxMoves &&\r\n            _activePlayersNumMoves[playerID] >= _activePlayersMaxMoves[playerID]) {\r\n            state = EndStage(state, { playerID, automatic: true });\r\n        }\r\n        const phaseConfig = GetPhase(state.ctx);\r\n        const G = phaseConfig.turn.wrapped.onMove({\r\n            ...state,\r\n            ctx: { ...state.ctx, playerID },\r\n        });\r\n        state = { ...state, G };\r\n        const events = [{ fn: OnMove }];\r\n        return Process(state, events);\r\n    }\r\n    function SetStageEvent(state, playerID, arg) {\r\n        return Process(state, [{ fn: EndStage, arg, playerID }]);\r\n    }\r\n    function EndStageEvent(state, playerID) {\r\n        return Process(state, [{ fn: EndStage, playerID }]);\r\n    }\r\n    function SetActivePlayersEvent(state, _playerID, arg) {\r\n        return Process(state, [{ fn: UpdateActivePlayers, arg }]);\r\n    }\r\n    function SetPhaseEvent(state, _playerID, newPhase) {\r\n        return Process(state, [\r\n            {\r\n                fn: EndPhase,\r\n                phase: state.ctx.phase,\r\n                turn: state.ctx.turn,\r\n                arg: { next: newPhase },\r\n            },\r\n        ]);\r\n    }\r\n    function EndPhaseEvent(state) {\r\n        return Process(state, [\r\n            { fn: EndPhase, phase: state.ctx.phase, turn: state.ctx.turn },\r\n        ]);\r\n    }\r\n    function EndTurnEvent(state, _playerID, arg) {\r\n        return Process(state, [\r\n            { fn: EndTurn, turn: state.ctx.turn, phase: state.ctx.phase, arg },\r\n        ]);\r\n    }\r\n    function PassEvent(state, _playerID, arg) {\r\n        return Process(state, [\r\n            {\r\n                fn: EndTurn,\r\n                turn: state.ctx.turn,\r\n                phase: state.ctx.phase,\r\n                force: true,\r\n                arg,\r\n            },\r\n        ]);\r\n    }\r\n    function EndGameEvent(state, _playerID, arg) {\r\n        return Process(state, [\r\n            { fn: EndGame, turn: state.ctx.turn, phase: state.ctx.phase, arg },\r\n        ]);\r\n    }\r\n    const eventHandlers = {\r\n        endStage: EndStageEvent,\r\n        setStage: SetStageEvent,\r\n        endTurn: EndTurnEvent,\r\n        pass: PassEvent,\r\n        endPhase: EndPhaseEvent,\r\n        setPhase: SetPhaseEvent,\r\n        endGame: EndGameEvent,\r\n        setActivePlayers: SetActivePlayersEvent,\r\n    };\r\n    const enabledEventNames = [];\r\n    if (events.endTurn !== false) {\r\n        enabledEventNames.push('endTurn');\r\n    }\r\n    if (events.pass !== false) {\r\n        enabledEventNames.push('pass');\r\n    }\r\n    if (events.endPhase !== false) {\r\n        enabledEventNames.push('endPhase');\r\n    }\r\n    if (events.setPhase !== false) {\r\n        enabledEventNames.push('setPhase');\r\n    }\r\n    if (events.endGame !== false) {\r\n        enabledEventNames.push('endGame');\r\n    }\r\n    if (events.setActivePlayers !== false) {\r\n        enabledEventNames.push('setActivePlayers');\r\n    }\r\n    if (events.endStage !== false) {\r\n        enabledEventNames.push('endStage');\r\n    }\r\n    if (events.setStage !== false) {\r\n        enabledEventNames.push('setStage');\r\n    }\r\n    function ProcessEvent(state, action) {\r\n        const { type, playerID, args } = action.payload;\r\n        if (typeof eventHandlers[type] !== 'function')\r\n            return state;\r\n        return eventHandlers[type](state, playerID, ...(Array.isArray(args) ? args : [args]));\r\n    }\r\n    function IsPlayerActive(_G, ctx, playerID) {\r\n        if (ctx.activePlayers) {\r\n            return playerID in ctx.activePlayers;\r\n        }\r\n        return ctx.currentPlayer === playerID;\r\n    }\r\n    return {\r\n        ctx: (numPlayers) => ({\r\n            numPlayers,\r\n            turn: 0,\r\n            currentPlayer: '0',\r\n            playOrder: [...Array.from({ length: numPlayers })].map((_, i) => i + ''),\r\n            playOrderPos: 0,\r\n            phase: startingPhase,\r\n            activePlayers: null,\r\n        }),\r\n        init: (state) => {\r\n            return Process(state, [{ fn: StartGame }]);\r\n        },\r\n        isPlayerActive: IsPlayerActive,\r\n        eventHandlers,\r\n        eventNames: Object.keys(eventHandlers),\r\n        enabledEventNames,\r\n        moveMap,\r\n        moveNames: [...moveNames.values()],\r\n        processMove: ProcessMove,\r\n        processEvent: ProcessEvent,\r\n        getMove: GetMove,\r\n    };\r\n}\n\n/*\r\n * Copyright 2017 The boardgame.io Authors\r\n *\r\n * Use of this source code is governed by a MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n */\r\nfunction IsProcessed(game) {\r\n    return game.processMove !== undefined;\r\n}\r\n/**\r\n * Helper to generate the game move reducer. The returned\r\n * reducer has the following signature:\r\n *\r\n * (G, action, ctx) => {}\r\n *\r\n * You can roll your own if you like, or use any Redux\r\n * addon to generate such a reducer.\r\n *\r\n * The convention used in this framework is to\r\n * have action.type contain the name of the move, and\r\n * action.args contain any additional arguments as an\r\n * Array.\r\n */\r\nfunction ProcessGameConfig(game) {\r\n    // The Game() function has already been called on this\r\n    // config object, so just pass it through.\r\n    if (IsProcessed(game)) {\r\n        return game;\r\n    }\r\n    if (game.name === undefined)\r\n        game.name = 'default';\r\n    if (game.deltaState === undefined)\r\n        game.deltaState = false;\r\n    if (game.disableUndo === undefined)\r\n        game.disableUndo = false;\r\n    if (game.setup === undefined)\r\n        game.setup = () => ({});\r\n    if (game.moves === undefined)\r\n        game.moves = {};\r\n    if (game.playerView === undefined)\r\n        game.playerView = (G) => G;\r\n    if (game.plugins === undefined)\r\n        game.plugins = [];\r\n    game.plugins.forEach((plugin) => {\r\n        if (plugin.name === undefined) {\r\n            throw new Error('Plugin missing name attribute');\r\n        }\r\n        if (plugin.name.includes(' ')) {\r\n            throw new Error(plugin.name + ': Plugin name must not include spaces');\r\n        }\r\n    });\r\n    if (game.name.includes(' ')) {\r\n        throw new Error(game.name + ': Game name must not include spaces');\r\n    }\r\n    const flow = Flow(game);\r\n    return {\r\n        ...game,\r\n        flow,\r\n        moveNames: flow.moveNames,\r\n        pluginNames: game.plugins.map((p) => p.name),\r\n        processMove: (state, action) => {\r\n            let moveFn = flow.getMove(state.ctx, action.type, action.playerID);\r\n            if (IsLongFormMove(moveFn)) {\r\n                moveFn = moveFn.move;\r\n            }\r\n            if (moveFn instanceof Function) {\r\n                const fn = (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.F)(moveFn, _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.G.MOVE, game.plugins);\r\n                const ctxWithAPI = {\r\n                    ...(0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.E)(state),\r\n                    playerID: action.playerID,\r\n                };\r\n                let args = [];\r\n                if (action.args !== undefined) {\r\n                    args = Array.isArray(action.args) ? action.args : [action.args];\r\n                }\r\n                return fn(state.G, ctxWithAPI, ...args);\r\n            }\r\n            (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.e)(`invalid move object: ${action.type}`);\r\n            return state.G;\r\n        },\r\n    };\r\n}\r\nfunction IsLongFormMove(move) {\r\n    return move instanceof Object && move.move !== undefined;\r\n}\n\n/*\r\n * Copyright 2017 The boardgame.io Authors\r\n *\r\n * Use of this source code is governed by a MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n */\r\nvar UpdateErrorType;\r\n(function (UpdateErrorType) {\r\n    // The action’s credentials were missing or invalid\r\n    UpdateErrorType[\"UnauthorizedAction\"] = \"update/unauthorized_action\";\r\n    // The action’s matchID was not found\r\n    UpdateErrorType[\"MatchNotFound\"] = \"update/match_not_found\";\r\n    // Could not apply Patch operation (rfc6902).\r\n    UpdateErrorType[\"PatchFailed\"] = \"update/patch_failed\";\r\n})(UpdateErrorType || (UpdateErrorType = {}));\r\nvar ActionErrorType;\r\n(function (ActionErrorType) {\r\n    // The action contained a stale state ID\r\n    ActionErrorType[\"StaleStateId\"] = \"action/stale_state_id\";\r\n    // The requested move is unknown or not currently available\r\n    ActionErrorType[\"UnavailableMove\"] = \"action/unavailable_move\";\r\n    // The move declared it was invalid (INVALID_MOVE constant)\r\n    ActionErrorType[\"InvalidMove\"] = \"action/invalid_move\";\r\n    // The player making the action is not currently active\r\n    ActionErrorType[\"InactivePlayer\"] = \"action/inactive_player\";\r\n    // The game has finished\r\n    ActionErrorType[\"GameOver\"] = \"action/gameover\";\r\n    // The requested action is disabled (e.g. undo/redo, events)\r\n    ActionErrorType[\"ActionDisabled\"] = \"action/action_disabled\";\r\n    // The requested action is not currently possible\r\n    ActionErrorType[\"ActionInvalid\"] = \"action/action_invalid\";\r\n    // The requested action was declared invalid by a plugin\r\n    ActionErrorType[\"PluginActionInvalid\"] = \"action/plugin_invalid\";\r\n})(ActionErrorType || (ActionErrorType = {}));\n\n/*\r\n * Copyright 2017 The boardgame.io Authors\r\n *\r\n * Use of this source code is governed by a MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n */\r\n/**\r\n * Check if the payload for the passed action contains a playerID.\r\n */\r\nconst actionHasPlayerID = (action) => action.payload.playerID !== null && action.payload.playerID !== undefined;\r\n/**\r\n * Returns true if a move can be undone.\r\n */\r\nconst CanUndoMove = (G, ctx, move) => {\r\n    function HasUndoable(move) {\r\n        return move.undoable !== undefined;\r\n    }\r\n    function IsFunction(undoable) {\r\n        return undoable instanceof Function;\r\n    }\r\n    if (!HasUndoable(move)) {\r\n        return true;\r\n    }\r\n    if (IsFunction(move.undoable)) {\r\n        return move.undoable(G, ctx);\r\n    }\r\n    return move.undoable;\r\n};\r\n/**\r\n * Update the undo and redo stacks for a move or event.\r\n */\r\nfunction updateUndoRedoState(state, opts) {\r\n    if (opts.game.disableUndo)\r\n        return state;\r\n    const undoEntry = {\r\n        G: state.G,\r\n        ctx: state.ctx,\r\n        plugins: state.plugins,\r\n        playerID: opts.action.payload.playerID || state.ctx.currentPlayer,\r\n    };\r\n    if (opts.action.type === 'MAKE_MOVE') {\r\n        undoEntry.moveType = opts.action.payload.type;\r\n    }\r\n    return {\r\n        ...state,\r\n        _undo: [...state._undo, undoEntry],\r\n        // Always reset redo stack when making a move or event\r\n        _redo: [],\r\n    };\r\n}\r\n/**\r\n * Process state, adding the initial deltalog for this action.\r\n */\r\nfunction initializeDeltalog(state, action, move) {\r\n    // Create a log entry for this action.\r\n    const logEntry = {\r\n        action,\r\n        _stateID: state._stateID,\r\n        turn: state.ctx.turn,\r\n        phase: state.ctx.phase,\r\n    };\r\n    const pluginLogMetadata = state.plugins.log.data.metadata;\r\n    if (pluginLogMetadata !== undefined) {\r\n        logEntry.metadata = pluginLogMetadata;\r\n    }\r\n    if (typeof move === 'object' && move.redact === true) {\r\n        logEntry.redact = true;\r\n    }\r\n    return {\r\n        ...state,\r\n        deltalog: [logEntry],\r\n    };\r\n}\r\n/**\r\n * Update plugin state after move/event & check if plugins consider the action to be valid.\r\n * @param state Current version of state in the reducer.\r\n * @param oldState State to revert to in case of error.\r\n * @param pluginOpts Plugin configuration options.\r\n * @returns Tuple of the new state updated after flushing plugins and the old\r\n * state augmented with an error if a plugin declared the action invalid.\r\n */\r\nfunction flushAndValidatePlugins(state, oldState, pluginOpts) {\r\n    const [newState, isInvalid] = (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.q)(state, pluginOpts);\r\n    if (!isInvalid)\r\n        return [newState];\r\n    return [\r\n        newState,\r\n        WithError(oldState, ActionErrorType.PluginActionInvalid, isInvalid),\r\n    ];\r\n}\r\n/**\r\n * ExtractTransientsFromState\r\n *\r\n * Split out transients from the a TransientState\r\n */\r\nfunction ExtractTransients(transientState) {\r\n    if (!transientState) {\r\n        // We preserve null for the state for legacy callers, but the transient\r\n        // field should be undefined if not present to be consistent with the\r\n        // code path below.\r\n        return [null, undefined];\r\n    }\r\n    const { transients, ...state } = transientState;\r\n    return [state, transients];\r\n}\r\n/**\r\n * WithError\r\n *\r\n * Augment a State instance with transient error information.\r\n */\r\nfunction WithError(state, errorType, payload) {\r\n    const error = {\r\n        type: errorType,\r\n        payload,\r\n    };\r\n    return {\r\n        ...state,\r\n        transients: {\r\n            error,\r\n        },\r\n    };\r\n}\r\n/**\r\n * Middleware for processing TransientState associated with the reducer\r\n * returned by CreateGameReducer.\r\n * This should pretty much be used everywhere you want realistic state\r\n * transitions and error handling.\r\n */\r\nconst TransientHandlingMiddleware = (store) => (next) => (action) => {\r\n    const result = next(action);\r\n    switch (action.type) {\r\n        case _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.p: {\r\n            return result;\r\n        }\r\n        default: {\r\n            const [, transients] = ExtractTransients(store.getState());\r\n            if (typeof transients !== 'undefined') {\r\n                store.dispatch((0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.r)());\r\n                // Dev Note: If parent middleware needs to correlate the spawned\r\n                // StripTransients action to the triggering action, instrument here.\r\n                //\r\n                // This is a bit tricky; for more details, see:\r\n                //   https://github.com/boardgameio/boardgame.io/pull/940#discussion_r636200648\r\n                return {\r\n                    ...result,\r\n                    transients,\r\n                };\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n};\r\n/**\r\n * CreateGameReducer\r\n *\r\n * Creates the main game state reducer.\r\n */\r\nfunction CreateGameReducer({ game, isClient, }) {\r\n    game = ProcessGameConfig(game);\r\n    /**\r\n     * GameReducer\r\n     *\r\n     * Redux reducer that maintains the overall game state.\r\n     * @param {object} state - The state before the action.\r\n     * @param {object} action - A Redux action.\r\n     */\r\n    return (stateWithTransients = null, action) => {\r\n        let [state /*, transients */] = ExtractTransients(stateWithTransients);\r\n        switch (action.type) {\r\n            case _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.p: {\r\n                // This action indicates that transient metadata in the state has been\r\n                // consumed and should now be stripped from the state..\r\n                return state;\r\n            }\r\n            case _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.o: {\r\n                state = { ...state, deltalog: [] };\r\n                // Process game events only on the server.\r\n                // These events like `endTurn` typically\r\n                // contain code that may rely on secret state\r\n                // and cannot be computed on the client.\r\n                if (isClient) {\r\n                    return state;\r\n                }\r\n                // Disallow events once the game is over.\r\n                if (state.ctx.gameover !== undefined) {\r\n                    (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.e)(`cannot call event after game end`);\r\n                    return WithError(state, ActionErrorType.GameOver);\r\n                }\r\n                // Ignore the event if the player isn't active.\r\n                if (actionHasPlayerID(action) &&\r\n                    !game.flow.isPlayerActive(state.G, state.ctx, action.payload.playerID)) {\r\n                    (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.e)(`disallowed event: ${action.payload.type}`);\r\n                    return WithError(state, ActionErrorType.InactivePlayer);\r\n                }\r\n                // Execute plugins.\r\n                state = (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.m)(state, {\r\n                    game,\r\n                    isClient: false,\r\n                    playerID: action.payload.playerID,\r\n                });\r\n                // Process event.\r\n                let newState = game.flow.processEvent(state, action);\r\n                // Execute plugins.\r\n                let stateWithError;\r\n                [newState, stateWithError] = flushAndValidatePlugins(newState, state, {\r\n                    game,\r\n                    isClient: false,\r\n                });\r\n                if (stateWithError)\r\n                    return stateWithError;\r\n                // Update undo / redo state.\r\n                newState = updateUndoRedoState(newState, { game, action });\r\n                return { ...newState, _stateID: state._stateID + 1 };\r\n            }\r\n            case _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.M: {\r\n                const oldState = (state = { ...state, deltalog: [] });\r\n                // Check whether the move is allowed at this time.\r\n                const move = game.flow.getMove(state.ctx, action.payload.type, action.payload.playerID || state.ctx.currentPlayer);\r\n                if (move === null) {\r\n                    (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.e)(`disallowed move: ${action.payload.type}`);\r\n                    return WithError(state, ActionErrorType.UnavailableMove);\r\n                }\r\n                // Don't run move on client if move says so.\r\n                if (isClient && move.client === false) {\r\n                    return state;\r\n                }\r\n                // Disallow moves once the game is over.\r\n                if (state.ctx.gameover !== undefined) {\r\n                    (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.e)(`cannot make move after game end`);\r\n                    return WithError(state, ActionErrorType.GameOver);\r\n                }\r\n                // Ignore the move if the player isn't active.\r\n                if (actionHasPlayerID(action) &&\r\n                    !game.flow.isPlayerActive(state.G, state.ctx, action.payload.playerID)) {\r\n                    (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.e)(`disallowed move: ${action.payload.type}`);\r\n                    return WithError(state, ActionErrorType.InactivePlayer);\r\n                }\r\n                // Execute plugins.\r\n                state = (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.m)(state, {\r\n                    game,\r\n                    isClient,\r\n                    playerID: action.payload.playerID,\r\n                });\r\n                // Process the move.\r\n                const G = game.processMove(state, action.payload);\r\n                // The game declared the move as invalid.\r\n                if (G === _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.n) {\r\n                    (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.e)(`invalid move: ${action.payload.type} args: ${action.payload.args}`);\r\n                    // TODO(#723): Marshal a nice error payload with the processed move.\r\n                    return WithError(state, ActionErrorType.InvalidMove);\r\n                }\r\n                const newState = { ...state, G };\r\n                // Some plugin indicated that it is not suitable to be\r\n                // materialized on the client (and must wait for the server\r\n                // response instead).\r\n                if (isClient && (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.N)(newState, { game })) {\r\n                    return state;\r\n                }\r\n                state = newState;\r\n                // If we're on the client, just process the move\r\n                // and no triggers in multiplayer mode.\r\n                // These will be processed on the server, which\r\n                // will send back a state update.\r\n                if (isClient) {\r\n                    let stateWithError;\r\n                    [state, stateWithError] = flushAndValidatePlugins(state, oldState, {\r\n                        game,\r\n                        isClient: true,\r\n                    });\r\n                    if (stateWithError)\r\n                        return stateWithError;\r\n                    return {\r\n                        ...state,\r\n                        _stateID: state._stateID + 1,\r\n                    };\r\n                }\r\n                // On the server, construct the deltalog.\r\n                state = initializeDeltalog(state, action, move);\r\n                // Allow the flow reducer to process any triggers that happen after moves.\r\n                state = game.flow.processMove(state, action.payload);\r\n                let stateWithError;\r\n                [state, stateWithError] = flushAndValidatePlugins(state, oldState, {\r\n                    game,\r\n                });\r\n                if (stateWithError)\r\n                    return stateWithError;\r\n                // Update undo / redo state.\r\n                state = updateUndoRedoState(state, { game, action });\r\n                return {\r\n                    ...state,\r\n                    _stateID: state._stateID + 1,\r\n                };\r\n            }\r\n            case _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.l:\r\n            case _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.k:\r\n            case _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.j: {\r\n                return action.state;\r\n            }\r\n            case _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.h: {\r\n                state = { ...state, deltalog: [] };\r\n                if (game.disableUndo) {\r\n                    (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.e)('Undo is not enabled');\r\n                    return WithError(state, ActionErrorType.ActionDisabled);\r\n                }\r\n                const { G, ctx, _undo, _redo, _stateID } = state;\r\n                if (_undo.length < 2) {\r\n                    (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.e)(`No moves to undo`);\r\n                    return WithError(state, ActionErrorType.ActionInvalid);\r\n                }\r\n                const last = _undo[_undo.length - 1];\r\n                const restore = _undo[_undo.length - 2];\r\n                // Only allow players to undo their own moves.\r\n                if (actionHasPlayerID(action) &&\r\n                    action.payload.playerID !== last.playerID) {\r\n                    (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.e)(`Cannot undo other players' moves`);\r\n                    return WithError(state, ActionErrorType.ActionInvalid);\r\n                }\r\n                // If undoing a move, check it is undoable.\r\n                if (last.moveType) {\r\n                    const lastMove = game.flow.getMove(restore.ctx, last.moveType, last.playerID);\r\n                    if (!CanUndoMove(G, ctx, lastMove)) {\r\n                        (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.e)(`Move cannot be undone`);\r\n                        return WithError(state, ActionErrorType.ActionInvalid);\r\n                    }\r\n                }\r\n                state = initializeDeltalog(state, action);\r\n                return {\r\n                    ...state,\r\n                    G: restore.G,\r\n                    ctx: restore.ctx,\r\n                    plugins: restore.plugins,\r\n                    _stateID: _stateID + 1,\r\n                    _undo: _undo.slice(0, -1),\r\n                    _redo: [last, ..._redo],\r\n                };\r\n            }\r\n            case _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.R: {\r\n                state = { ...state, deltalog: [] };\r\n                if (game.disableUndo) {\r\n                    (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.e)('Redo is not enabled');\r\n                    return WithError(state, ActionErrorType.ActionDisabled);\r\n                }\r\n                const { _undo, _redo, _stateID } = state;\r\n                if (_redo.length === 0) {\r\n                    (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.e)(`No moves to redo`);\r\n                    return WithError(state, ActionErrorType.ActionInvalid);\r\n                }\r\n                const first = _redo[0];\r\n                // Only allow players to redo their own undos.\r\n                if (actionHasPlayerID(action) &&\r\n                    action.payload.playerID !== first.playerID) {\r\n                    (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.e)(`Cannot redo other players' moves`);\r\n                    return WithError(state, ActionErrorType.ActionInvalid);\r\n                }\r\n                state = initializeDeltalog(state, action);\r\n                return {\r\n                    ...state,\r\n                    G: first.G,\r\n                    ctx: first.ctx,\r\n                    plugins: first.plugins,\r\n                    _stateID: _stateID + 1,\r\n                    _undo: [..._undo, first],\r\n                    _redo: _redo.slice(1),\r\n                };\r\n            }\r\n            case _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.d: {\r\n                // TODO(#723): Expose error semantics to plugin processing.\r\n                return (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.f)(state, action, { game });\r\n            }\r\n            case _turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.P: {\r\n                const oldState = state;\r\n                const newState = JSON.parse(JSON.stringify(oldState));\r\n                const patchError = (0,rfc6902__WEBPACK_IMPORTED_MODULE_0__.applyPatch)(newState, action.patch);\r\n                const hasError = patchError.some((entry) => entry !== null);\r\n                if (hasError) {\r\n                    (0,_turn_order_0b7dce3d_js__WEBPACK_IMPORTED_MODULE_1__.e)(`Patch ${JSON.stringify(action.patch)} apply failed`);\r\n                    return WithError(oldState, UpdateErrorType.PatchFailed, patchError);\r\n                }\r\n                else {\r\n                    return newState;\r\n                }\r\n            }\r\n            default: {\r\n                return state;\r\n            }\r\n        }\r\n    };\r\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/boardgame.io/dist/esm/reducer-07c7b307.js\n"));

/***/ }),

/***/ "./node_modules/boardgame.io/dist/esm/socketio-e4fb268a.js":
/*!*****************************************************************!*\
  !*** ./node_modules/boardgame.io/dist/esm/socketio-e4fb268a.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"L\": function() { return /* binding */ Local; },\n/* harmony export */   \"S\": function() { return /* binding */ SocketIO; }\n/* harmony export */ });\n/* harmony import */ var _transport_ce07b771_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./transport-ce07b771.js */ \"./node_modules/boardgame.io/dist/esm/transport-ce07b771.js\");\n/* harmony import */ var _util_b1699aa1_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util-b1699aa1.js */ \"./node_modules/boardgame.io/dist/esm/util-b1699aa1.js\");\n/* harmony import */ var _master_be1abdd0_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./master-be1abdd0.js */ \"./node_modules/boardgame.io/dist/esm/master-be1abdd0.js\");\n/* harmony import */ var _filter_player_view_c30cdfbf_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./filter-player-view-c30cdfbf.js */ \"./node_modules/boardgame.io/dist/esm/filter-player-view-c30cdfbf.js\");\n/* harmony import */ var socket_io_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! socket.io-client */ \"./node_modules/socket.io-client/build/esm/index.js\");\n\n\n\n\n\n\n/*\r\n * Copyright 2017 The boardgame.io Authors\r\n *\r\n * Use of this source code is governed by a MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n */\r\n/**\r\n * InMemory data storage.\r\n */\r\nclass InMemory extends _util_b1699aa1_js__WEBPACK_IMPORTED_MODULE_1__.S {\r\n    /**\r\n     * Creates a new InMemory storage.\r\n     */\r\n    constructor() {\r\n        super();\r\n        this.state = new Map();\r\n        this.initial = new Map();\r\n        this.metadata = new Map();\r\n        this.log = new Map();\r\n    }\r\n    /**\r\n     * Create a new match.\r\n     *\r\n     * @override\r\n     */\r\n    createMatch(matchID, opts) {\r\n        this.initial.set(matchID, opts.initialState);\r\n        this.setState(matchID, opts.initialState);\r\n        this.setMetadata(matchID, opts.metadata);\r\n    }\r\n    /**\r\n     * Write the match metadata to the in-memory object.\r\n     */\r\n    setMetadata(matchID, metadata) {\r\n        this.metadata.set(matchID, metadata);\r\n    }\r\n    /**\r\n     * Write the match state to the in-memory object.\r\n     */\r\n    setState(matchID, state, deltalog) {\r\n        if (deltalog && deltalog.length > 0) {\r\n            const log = this.log.get(matchID) || [];\r\n            this.log.set(matchID, [...log, ...deltalog]);\r\n        }\r\n        this.state.set(matchID, state);\r\n    }\r\n    /**\r\n     * Fetches state for a particular matchID.\r\n     */\r\n    fetch(matchID, opts) {\r\n        const result = {};\r\n        if (opts.state) {\r\n            result.state = this.state.get(matchID);\r\n        }\r\n        if (opts.metadata) {\r\n            result.metadata = this.metadata.get(matchID);\r\n        }\r\n        if (opts.log) {\r\n            result.log = this.log.get(matchID) || [];\r\n        }\r\n        if (opts.initialState) {\r\n            result.initialState = this.initial.get(matchID);\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Remove the match state from the in-memory object.\r\n     */\r\n    wipe(matchID) {\r\n        this.state.delete(matchID);\r\n        this.metadata.delete(matchID);\r\n    }\r\n    /**\r\n     * Return all keys.\r\n     *\r\n     * @override\r\n     */\r\n    listMatches(opts) {\r\n        return [...this.metadata.entries()]\r\n            .filter(([, metadata]) => {\r\n            if (!opts) {\r\n                return true;\r\n            }\r\n            if (opts.gameName !== undefined &&\r\n                metadata.gameName !== opts.gameName) {\r\n                return false;\r\n            }\r\n            if (opts.where !== undefined) {\r\n                if (opts.where.isGameover !== undefined) {\r\n                    const isGameover = metadata.gameover !== undefined;\r\n                    if (isGameover !== opts.where.isGameover) {\r\n                        return false;\r\n                    }\r\n                }\r\n                if (opts.where.updatedBefore !== undefined &&\r\n                    metadata.updatedAt >= opts.where.updatedBefore) {\r\n                    return false;\r\n                }\r\n                if (opts.where.updatedAfter !== undefined &&\r\n                    metadata.updatedAt <= opts.where.updatedAfter) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        })\r\n            .map(([key]) => key);\r\n    }\r\n}\n\nclass WithLocalStorageMap extends Map {\r\n    constructor(key) {\r\n        super();\r\n        this.key = key;\r\n        const cache = JSON.parse(localStorage.getItem(this.key)) || [];\r\n        cache.forEach((entry) => this.set(...entry));\r\n    }\r\n    sync() {\r\n        const entries = [...this.entries()];\r\n        localStorage.setItem(this.key, JSON.stringify(entries));\r\n    }\r\n    set(key, value) {\r\n        super.set(key, value);\r\n        this.sync();\r\n        return this;\r\n    }\r\n    delete(key) {\r\n        const result = super.delete(key);\r\n        this.sync();\r\n        return result;\r\n    }\r\n}\r\n/**\r\n * locaStorage data storage.\r\n */\r\nclass LocalStorage extends InMemory {\r\n    constructor(storagePrefix = 'bgio') {\r\n        super();\r\n        const StorageMap = (stateKey) => new WithLocalStorageMap(`${storagePrefix}_${stateKey}`);\r\n        this.state = StorageMap('state');\r\n        this.initial = StorageMap('initial');\r\n        this.metadata = StorageMap('metadata');\r\n        this.log = StorageMap('log');\r\n    }\r\n}\n\n/*\r\n * Copyright 2018 The boardgame.io Authors\r\n *\r\n * Use of this source code is governed by a MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n */\r\n/**\r\n * Returns null if it is not a bot's turn.\r\n * Otherwise, returns a playerID of a bot that may play now.\r\n */\r\nfunction GetBotPlayer(state, bots) {\r\n    if (state.ctx.gameover !== undefined) {\r\n        return null;\r\n    }\r\n    if (state.ctx.activePlayers) {\r\n        for (const key of Object.keys(bots)) {\r\n            if (key in state.ctx.activePlayers) {\r\n                return key;\r\n            }\r\n        }\r\n    }\r\n    else if (state.ctx.currentPlayer in bots) {\r\n        return state.ctx.currentPlayer;\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Creates a local version of the master that the client\r\n * can interact with.\r\n */\r\nclass LocalMaster extends _master_be1abdd0_js__WEBPACK_IMPORTED_MODULE_2__.M {\r\n    constructor({ game, bots, storageKey, persist }) {\r\n        const clientCallbacks = {};\r\n        const initializedBots = {};\r\n        if (game && game.ai && bots) {\r\n            for (const playerID in bots) {\r\n                const bot = bots[playerID];\r\n                initializedBots[playerID] = new bot({\r\n                    game,\r\n                    enumerate: game.ai.enumerate,\r\n                    seed: game.seed,\r\n                });\r\n            }\r\n        }\r\n        const send = ({ playerID, ...data }) => {\r\n            const callback = clientCallbacks[playerID];\r\n            if (callback !== undefined) {\r\n                callback(filterPlayerView(playerID, data));\r\n            }\r\n        };\r\n        const filterPlayerView = (0,_filter_player_view_c30cdfbf_js__WEBPACK_IMPORTED_MODULE_3__.g)(game);\r\n        const transportAPI = {\r\n            send,\r\n            sendAll: (payload) => {\r\n                for (const playerID in clientCallbacks) {\r\n                    send({ playerID, ...payload });\r\n                }\r\n            },\r\n        };\r\n        const storage = persist ? new LocalStorage(storageKey) : new InMemory();\r\n        super(game, storage, transportAPI);\r\n        this.connect = (playerID, callback) => {\r\n            clientCallbacks[playerID] = callback;\r\n        };\r\n        this.subscribe(({ state, matchID }) => {\r\n            if (!bots) {\r\n                return;\r\n            }\r\n            const botPlayer = GetBotPlayer(state, initializedBots);\r\n            if (botPlayer !== null) {\r\n                setTimeout(async () => {\r\n                    const botAction = await initializedBots[botPlayer].play(state, botPlayer);\r\n                    await this.onUpdate(botAction.action, state._stateID, matchID, botAction.action.payload.playerID);\r\n                }, 100);\r\n            }\r\n        });\r\n    }\r\n}\r\n/**\r\n * Local\r\n *\r\n * Transport interface that embeds a GameMaster within it\r\n * that you can connect multiple clients to.\r\n */\r\nclass LocalTransport extends _transport_ce07b771_js__WEBPACK_IMPORTED_MODULE_4__.T {\r\n    /**\r\n     * Creates a new Mutiplayer instance.\r\n     * @param {string} matchID - The game ID to connect to.\r\n     * @param {string} playerID - The player ID associated with this client.\r\n     * @param {string} gameName - The game type (the `name` field in `Game`).\r\n     * @param {string} numPlayers - The number of players.\r\n     */\r\n    constructor({ master, ...opts }) {\r\n        super(opts);\r\n        this.master = master;\r\n    }\r\n    sendChatMessage(matchID, chatMessage) {\r\n        const args = [\r\n            matchID,\r\n            chatMessage,\r\n            this.credentials,\r\n        ];\r\n        this.master.onChatMessage(...args);\r\n    }\r\n    sendAction(state, action) {\r\n        this.master.onUpdate(action, state._stateID, this.matchID, this.playerID);\r\n    }\r\n    requestSync() {\r\n        this.master.onSync(this.matchID, this.playerID, this.credentials, this.numPlayers);\r\n    }\r\n    connect() {\r\n        this.setConnectionStatus(true);\r\n        this.master.connect(this.playerID, (data) => this.notifyClient(data));\r\n        this.requestSync();\r\n    }\r\n    disconnect() {\r\n        this.setConnectionStatus(false);\r\n    }\r\n    updateMatchID(id) {\r\n        this.matchID = id;\r\n        this.connect();\r\n    }\r\n    updatePlayerID(id) {\r\n        this.playerID = id;\r\n        this.connect();\r\n    }\r\n    updateCredentials(credentials) {\r\n        this.credentials = credentials;\r\n        this.connect();\r\n    }\r\n}\r\n/**\r\n * Global map storing local master instances.\r\n */\r\nconst localMasters = new Map();\r\n/**\r\n * Create a local transport.\r\n */\r\nfunction Local({ bots, persist, storageKey } = {}) {\r\n    return (transportOpts) => {\r\n        const { gameKey, game } = transportOpts;\r\n        let master;\r\n        const instance = localMasters.get(gameKey);\r\n        if (instance &&\r\n            instance.bots === bots &&\r\n            instance.storageKey === storageKey &&\r\n            instance.persist === persist) {\r\n            master = instance.master;\r\n        }\r\n        if (!master) {\r\n            master = new LocalMaster({ game, bots, persist, storageKey });\r\n            localMasters.set(gameKey, { master, bots, persist, storageKey });\r\n        }\r\n        return new LocalTransport({ master, ...transportOpts });\r\n    };\r\n}\n\n/*\r\n * Copyright 2017 The boardgame.io Authors\r\n *\r\n * Use of this source code is governed by a MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n */\r\nconst io = socket_io_client__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\r\n/**\r\n * SocketIO\r\n *\r\n * Transport interface that interacts with the Master via socket.io.\r\n */\r\nclass SocketIOTransport extends _transport_ce07b771_js__WEBPACK_IMPORTED_MODULE_4__.T {\r\n    /**\r\n     * Creates a new Multiplayer instance.\r\n     * @param {object} socket - Override for unit tests.\r\n     * @param {object} socketOpts - Options to pass to socket.io.\r\n     * @param {object} store - Redux store\r\n     * @param {string} matchID - The game ID to connect to.\r\n     * @param {string} playerID - The player ID associated with this client.\r\n     * @param {string} credentials - Authentication credentials\r\n     * @param {string} gameName - The game type (the `name` field in `Game`).\r\n     * @param {string} numPlayers - The number of players.\r\n     * @param {string} server - The game server in the form of 'hostname:port'. Defaults to the server serving the client if not provided.\r\n     */\r\n    constructor({ socket, socketOpts, server, ...opts }) {\r\n        super(opts);\r\n        this.server = server;\r\n        this.socket = socket;\r\n        this.socketOpts = socketOpts;\r\n    }\r\n    sendAction(state, action) {\r\n        const args = [\r\n            action,\r\n            state._stateID,\r\n            this.matchID,\r\n            this.playerID,\r\n        ];\r\n        this.socket.emit('update', ...args);\r\n    }\r\n    sendChatMessage(matchID, chatMessage) {\r\n        const args = [\r\n            matchID,\r\n            chatMessage,\r\n            this.credentials,\r\n        ];\r\n        this.socket.emit('chat', ...args);\r\n    }\r\n    connect() {\r\n        if (!this.socket) {\r\n            if (this.server) {\r\n                let server = this.server;\r\n                if (server.search(/^https?:\\/\\//) == -1) {\r\n                    server = 'http://' + this.server;\r\n                }\r\n                if (server.slice(-1) != '/') {\r\n                    // add trailing slash if not already present\r\n                    server = server + '/';\r\n                }\r\n                this.socket = io(server + this.gameName, this.socketOpts);\r\n            }\r\n            else {\r\n                this.socket = io('/' + this.gameName, this.socketOpts);\r\n            }\r\n        }\r\n        // Called when another player makes a move and the\r\n        // master broadcasts the update as a patch to other clients (including\r\n        // this one).\r\n        this.socket.on('patch', (matchID, prevStateID, stateID, patch, deltalog) => {\r\n            this.notifyClient({\r\n                type: 'patch',\r\n                args: [matchID, prevStateID, stateID, patch, deltalog],\r\n            });\r\n        });\r\n        // Called when another player makes a move and the\r\n        // master broadcasts the update to other clients (including\r\n        // this one).\r\n        this.socket.on('update', (matchID, state, deltalog) => {\r\n            this.notifyClient({\r\n                type: 'update',\r\n                args: [matchID, state, deltalog],\r\n            });\r\n        });\r\n        // Called when the client first connects to the master\r\n        // and requests the current game state.\r\n        this.socket.on('sync', (matchID, syncInfo) => {\r\n            this.notifyClient({ type: 'sync', args: [matchID, syncInfo] });\r\n        });\r\n        // Called when new player joins the match or changes\r\n        // it's connection status\r\n        this.socket.on('matchData', (matchID, matchData) => {\r\n            this.notifyClient({ type: 'matchData', args: [matchID, matchData] });\r\n        });\r\n        this.socket.on('chat', (matchID, chatMessage) => {\r\n            this.notifyClient({ type: 'chat', args: [matchID, chatMessage] });\r\n        });\r\n        // Keep track of connection status.\r\n        this.socket.on('connect', () => {\r\n            // Initial sync to get game state.\r\n            this.requestSync();\r\n            this.setConnectionStatus(true);\r\n        });\r\n        this.socket.on('disconnect', () => {\r\n            this.setConnectionStatus(false);\r\n        });\r\n    }\r\n    disconnect() {\r\n        this.socket.close();\r\n        this.socket = null;\r\n        this.setConnectionStatus(false);\r\n    }\r\n    requestSync() {\r\n        if (this.socket) {\r\n            const args = [\r\n                this.matchID,\r\n                this.playerID,\r\n                this.credentials,\r\n                this.numPlayers,\r\n            ];\r\n            this.socket.emit('sync', ...args);\r\n        }\r\n    }\r\n    updateMatchID(id) {\r\n        this.matchID = id;\r\n        this.requestSync();\r\n    }\r\n    updatePlayerID(id) {\r\n        this.playerID = id;\r\n        this.requestSync();\r\n    }\r\n    updateCredentials(credentials) {\r\n        this.credentials = credentials;\r\n        this.requestSync();\r\n    }\r\n}\r\nfunction SocketIO({ server, socketOpts } = {}) {\r\n    return (transportOpts) => new SocketIOTransport({\r\n        server,\r\n        socketOpts,\r\n        ...transportOpts,\r\n    });\r\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/boardgame.io/dist/esm/socketio-e4fb268a.js\n"));

/***/ }),

/***/ "./node_modules/boardgame.io/dist/esm/transport-ce07b771.js":
/*!******************************************************************!*\
  !*** ./node_modules/boardgame.io/dist/esm/transport-ce07b771.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"T\": function() { return /* binding */ Transport; }\n/* harmony export */ });\n/*\r\n * Copyright 2017 The boardgame.io Authors\r\n *\r\n * Use of this source code is governed by a MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n */\r\nclass Transport {\r\n    constructor({ transportDataCallback, gameName, playerID, matchID, credentials, numPlayers, }) {\r\n        /** Callback to let the client know when the connection status has changed. */\r\n        this.connectionStatusCallback = () => { };\r\n        this.isConnected = false;\r\n        this.transportDataCallback = transportDataCallback;\r\n        this.gameName = gameName || 'default';\r\n        this.playerID = playerID || null;\r\n        this.matchID = matchID || 'default';\r\n        this.credentials = credentials;\r\n        this.numPlayers = numPlayers || 2;\r\n    }\r\n    /** Subscribe to connection state changes. */\r\n    subscribeToConnectionStatus(fn) {\r\n        this.connectionStatusCallback = fn;\r\n    }\r\n    /** Transport implementations should call this when they connect/disconnect. */\r\n    setConnectionStatus(isConnected) {\r\n        this.isConnected = isConnected;\r\n        this.connectionStatusCallback();\r\n    }\r\n    /** Transport implementations should call this when they receive data from a master. */\r\n    notifyClient(data) {\r\n        this.transportDataCallback(data);\r\n    }\r\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYm9hcmRnYW1lLmlvL2Rpc3QvZXNtL3RyYW5zcG9ydC1jZTA3Yjc3MS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQiw4RUFBOEU7QUFDaEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUUwQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYm9hcmRnYW1lLmlvL2Rpc3QvZXNtL3RyYW5zcG9ydC1jZTA3Yjc3MS5qcz83NmJkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXHJcbiAqIENvcHlyaWdodCAyMDE3IFRoZSBib2FyZGdhbWUuaW8gQXV0aG9yc1xyXG4gKlxyXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhIE1JVC1zdHlsZVxyXG4gKiBsaWNlbnNlIHRoYXQgY2FuIGJlIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgb3IgYXRcclxuICogaHR0cHM6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9NSVQuXHJcbiAqL1xyXG5jbGFzcyBUcmFuc3BvcnQge1xyXG4gICAgY29uc3RydWN0b3IoeyB0cmFuc3BvcnREYXRhQ2FsbGJhY2ssIGdhbWVOYW1lLCBwbGF5ZXJJRCwgbWF0Y2hJRCwgY3JlZGVudGlhbHMsIG51bVBsYXllcnMsIH0pIHtcclxuICAgICAgICAvKiogQ2FsbGJhY2sgdG8gbGV0IHRoZSBjbGllbnQga25vdyB3aGVuIHRoZSBjb25uZWN0aW9uIHN0YXR1cyBoYXMgY2hhbmdlZC4gKi9cclxuICAgICAgICB0aGlzLmNvbm5lY3Rpb25TdGF0dXNDYWxsYmFjayA9ICgpID0+IHsgfTtcclxuICAgICAgICB0aGlzLmlzQ29ubmVjdGVkID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy50cmFuc3BvcnREYXRhQ2FsbGJhY2sgPSB0cmFuc3BvcnREYXRhQ2FsbGJhY2s7XHJcbiAgICAgICAgdGhpcy5nYW1lTmFtZSA9IGdhbWVOYW1lIHx8ICdkZWZhdWx0JztcclxuICAgICAgICB0aGlzLnBsYXllcklEID0gcGxheWVySUQgfHwgbnVsbDtcclxuICAgICAgICB0aGlzLm1hdGNoSUQgPSBtYXRjaElEIHx8ICdkZWZhdWx0JztcclxuICAgICAgICB0aGlzLmNyZWRlbnRpYWxzID0gY3JlZGVudGlhbHM7XHJcbiAgICAgICAgdGhpcy5udW1QbGF5ZXJzID0gbnVtUGxheWVycyB8fCAyO1xyXG4gICAgfVxyXG4gICAgLyoqIFN1YnNjcmliZSB0byBjb25uZWN0aW9uIHN0YXRlIGNoYW5nZXMuICovXHJcbiAgICBzdWJzY3JpYmVUb0Nvbm5lY3Rpb25TdGF0dXMoZm4pIHtcclxuICAgICAgICB0aGlzLmNvbm5lY3Rpb25TdGF0dXNDYWxsYmFjayA9IGZuO1xyXG4gICAgfVxyXG4gICAgLyoqIFRyYW5zcG9ydCBpbXBsZW1lbnRhdGlvbnMgc2hvdWxkIGNhbGwgdGhpcyB3aGVuIHRoZXkgY29ubmVjdC9kaXNjb25uZWN0LiAqL1xyXG4gICAgc2V0Q29ubmVjdGlvblN0YXR1cyhpc0Nvbm5lY3RlZCkge1xyXG4gICAgICAgIHRoaXMuaXNDb25uZWN0ZWQgPSBpc0Nvbm5lY3RlZDtcclxuICAgICAgICB0aGlzLmNvbm5lY3Rpb25TdGF0dXNDYWxsYmFjaygpO1xyXG4gICAgfVxyXG4gICAgLyoqIFRyYW5zcG9ydCBpbXBsZW1lbnRhdGlvbnMgc2hvdWxkIGNhbGwgdGhpcyB3aGVuIHRoZXkgcmVjZWl2ZSBkYXRhIGZyb20gYSBtYXN0ZXIuICovXHJcbiAgICBub3RpZnlDbGllbnQoZGF0YSkge1xyXG4gICAgICAgIHRoaXMudHJhbnNwb3J0RGF0YUNhbGxiYWNrKGRhdGEpO1xyXG4gICAgfVxyXG59XG5cbmV4cG9ydCB7IFRyYW5zcG9ydCBhcyBUIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/boardgame.io/dist/esm/transport-ce07b771.js\n"));

/***/ }),

/***/ "./node_modules/boardgame.io/dist/esm/turn-order-0b7dce3d.js":
/*!*******************************************************************!*\
  !*** ./node_modules/boardgame.io/dist/esm/turn-order-0b7dce3d.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"A\": function() { return /* binding */ ActionCreators; },\n/* harmony export */   \"B\": function() { return /* binding */ makeMove; },\n/* harmony export */   \"C\": function() { return /* binding */ ActivePlayers; },\n/* harmony export */   \"E\": function() { return /* binding */ EnhanceCtx; },\n/* harmony export */   \"F\": function() { return /* binding */ FnWrap; },\n/* harmony export */   \"G\": function() { return /* binding */ GameMethod; },\n/* harmony export */   \"I\": function() { return /* binding */ InitTurnOrderState; },\n/* harmony export */   \"M\": function() { return /* binding */ MAKE_MOVE; },\n/* harmony export */   \"N\": function() { return /* binding */ NoClient; },\n/* harmony export */   \"P\": function() { return /* binding */ PATCH; },\n/* harmony export */   \"R\": function() { return /* binding */ REDO; },\n/* harmony export */   \"S\": function() { return /* binding */ Stage; },\n/* harmony export */   \"T\": function() { return /* binding */ TurnOrder; },\n/* harmony export */   \"U\": function() { return /* binding */ UpdateTurnOrderState; },\n/* harmony export */   \"a\": function() { return /* binding */ supportDeprecatedMoveLimit; },\n/* harmony export */   \"b\": function() { return /* binding */ SetActivePlayers; },\n/* harmony export */   \"c\": function() { return /* binding */ UpdateActivePlayersOnceEmpty; },\n/* harmony export */   \"d\": function() { return /* binding */ PLUGIN; },\n/* harmony export */   \"e\": function() { return /* binding */ error; },\n/* harmony export */   \"f\": function() { return /* binding */ ProcessAction; },\n/* harmony export */   \"g\": function() { return /* binding */ gameEvent; },\n/* harmony export */   \"h\": function() { return /* binding */ UNDO; },\n/* harmony export */   \"i\": function() { return /* binding */ info; },\n/* harmony export */   \"j\": function() { return /* binding */ SYNC; },\n/* harmony export */   \"k\": function() { return /* binding */ UPDATE; },\n/* harmony export */   \"l\": function() { return /* binding */ RESET; },\n/* harmony export */   \"m\": function() { return /* binding */ Enhance; },\n/* harmony export */   \"n\": function() { return /* binding */ INVALID_MOVE; },\n/* harmony export */   \"o\": function() { return /* binding */ GAME_EVENT; },\n/* harmony export */   \"p\": function() { return /* binding */ STRIP_TRANSIENTS; },\n/* harmony export */   \"q\": function() { return /* binding */ FlushAndValidate; },\n/* harmony export */   \"r\": function() { return /* binding */ stripTransients; },\n/* harmony export */   \"s\": function() { return /* binding */ sync; },\n/* harmony export */   \"t\": function() { return /* binding */ Setup; },\n/* harmony export */   \"u\": function() { return /* binding */ reset; },\n/* harmony export */   \"v\": function() { return /* binding */ undo; },\n/* harmony export */   \"w\": function() { return /* binding */ redo; },\n/* harmony export */   \"x\": function() { return /* binding */ PlayerView; },\n/* harmony export */   \"y\": function() { return /* binding */ patch; },\n/* harmony export */   \"z\": function() { return /* binding */ update; }\n/* harmony export */ });\n/* harmony import */ var immer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! immer */ \"./node_modules/immer/dist/immer.esm.mjs\");\n/* harmony import */ var _plugin_random_087f861e_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./plugin-random-087f861e.js */ \"./node_modules/boardgame.io/dist/esm/plugin-random-087f861e.js\");\n/* harmony import */ var lodash_isplainobject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash.isplainobject */ \"./node_modules/lodash.isplainobject/index.js\");\n/* harmony import */ var lodash_isplainobject__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_isplainobject__WEBPACK_IMPORTED_MODULE_0__);\n\n\n\n\n/*\r\n * Copyright 2017 The boardgame.io Authors\r\n *\r\n * Use of this source code is governed by a MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n */\r\nconst MAKE_MOVE = 'MAKE_MOVE';\r\nconst GAME_EVENT = 'GAME_EVENT';\r\nconst REDO = 'REDO';\r\nconst RESET = 'RESET';\r\nconst SYNC = 'SYNC';\r\nconst UNDO = 'UNDO';\r\nconst UPDATE = 'UPDATE';\r\nconst PATCH = 'PATCH';\r\nconst PLUGIN = 'PLUGIN';\r\nconst STRIP_TRANSIENTS = 'STRIP_TRANSIENTS';\n\n/*\r\n * Copyright 2017 The boardgame.io Authors\r\n *\r\n * Use of this source code is governed by a MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n */\r\n/**\r\n * Generate a move to be dispatched to the game move reducer.\r\n *\r\n * @param {string} type - The move type.\r\n * @param {Array}  args - Additional arguments.\r\n * @param {string}  playerID - The ID of the player making this action.\r\n * @param {string}  credentials - (optional) The credentials for the player making this action.\r\n */\r\nconst makeMove = (type, args, playerID, credentials) => ({\r\n    type: MAKE_MOVE,\r\n    payload: { type, args, playerID, credentials },\r\n});\r\n/**\r\n * Generate a game event to be dispatched to the flow reducer.\r\n *\r\n * @param {string} type - The event type.\r\n * @param {Array}  args - Additional arguments.\r\n * @param {string}  playerID - The ID of the player making this action.\r\n * @param {string}  credentials - (optional) The credentials for the player making this action.\r\n */\r\nconst gameEvent = (type, args, playerID, credentials) => ({\r\n    type: GAME_EVENT,\r\n    payload: { type, args, playerID, credentials },\r\n});\r\n/**\r\n * Generate an automatic game event that is a side-effect of a move.\r\n * @param {string} type - The event type.\r\n * @param {Array}  args - Additional arguments.\r\n * @param {string}  playerID - The ID of the player making this action.\r\n * @param {string}  credentials - (optional) The credentials for the player making this action.\r\n */\r\nconst automaticGameEvent = (type, args, playerID, credentials) => ({\r\n    type: GAME_EVENT,\r\n    payload: { type, args, playerID, credentials },\r\n    automatic: true,\r\n});\r\nconst sync = (info) => ({\r\n    type: SYNC,\r\n    state: info.state,\r\n    log: info.log,\r\n    initialState: info.initialState,\r\n    clientOnly: true,\r\n});\r\n/**\r\n * Used to update the Redux store's state with patch in response to\r\n * an action coming from another player.\r\n * @param prevStateID previous stateID\r\n * @param stateID stateID after this patch\r\n * @param {Operation[]} patch - The patch to apply.\r\n * @param {LogEntry[]} deltalog - A log delta.\r\n */\r\nconst patch = (prevStateID, stateID, patch, deltalog) => ({\r\n    type: PATCH,\r\n    prevStateID,\r\n    stateID,\r\n    patch,\r\n    deltalog,\r\n    clientOnly: true,\r\n});\r\n/**\r\n * Used to update the Redux store's state in response to\r\n * an action coming from another player.\r\n * @param {object} state - The state to restore.\r\n * @param {Array} deltalog - A log delta.\r\n */\r\nconst update = (state, deltalog) => ({\r\n    type: UPDATE,\r\n    state,\r\n    deltalog,\r\n    clientOnly: true,\r\n});\r\n/**\r\n * Used to reset the game state.\r\n * @param {object} state - The initial state.\r\n */\r\nconst reset = (state) => ({\r\n    type: RESET,\r\n    state,\r\n    clientOnly: true,\r\n});\r\n/**\r\n * Used to undo the last move.\r\n * @param {string}  playerID - The ID of the player making this action.\r\n * @param {string}  credentials - (optional) The credentials for the player making this action.\r\n */\r\nconst undo = (playerID, credentials) => ({\r\n    type: UNDO,\r\n    payload: { type: null, args: null, playerID, credentials },\r\n});\r\n/**\r\n * Used to redo the last undone move.\r\n * @param {string}  playerID - The ID of the player making this action.\r\n * @param {string}  credentials - (optional) The credentials for the player making this action.\r\n */\r\nconst redo = (playerID, credentials) => ({\r\n    type: REDO,\r\n    payload: { type: null, args: null, playerID, credentials },\r\n});\r\n/**\r\n * Allows plugins to define their own actions and intercept them.\r\n */\r\nconst plugin = (type, args, playerID, credentials) => ({\r\n    type: PLUGIN,\r\n    payload: { type, args, playerID, credentials },\r\n});\r\n/**\r\n * Private action used to strip transient metadata (e.g. errors) from the game\r\n * state.\r\n */\r\nconst stripTransients = () => ({\r\n    type: STRIP_TRANSIENTS,\r\n});\n\nvar ActionCreators = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  makeMove: makeMove,\n  gameEvent: gameEvent,\n  automaticGameEvent: automaticGameEvent,\n  sync: sync,\n  patch: patch,\n  update: update,\n  reset: reset,\n  undo: undo,\n  redo: redo,\n  plugin: plugin,\n  stripTransients: stripTransients\n});\n\n/**\r\n * Moves can return this when they want to indicate\r\n * that the combination of arguments is illegal and\r\n * the move ought to be discarded.\r\n */\r\nconst INVALID_MOVE = 'INVALID_MOVE';\n\n/*\r\n * Copyright 2018 The boardgame.io Authors\r\n *\r\n * Use of this source code is governed by a MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n */\r\n/**\r\n * Plugin that allows using Immer to make immutable changes\r\n * to G by just mutating it.\r\n */\r\nconst ImmerPlugin = {\r\n    name: 'plugin-immer',\r\n    fnWrap: (move) => (G, ctx, ...args) => {\r\n        let isInvalid = false;\r\n        const newG = (0,immer__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(G, (G) => {\r\n            const result = move(G, ctx, ...args);\r\n            if (result === INVALID_MOVE) {\r\n                isInvalid = true;\r\n                return;\r\n            }\r\n            return result;\r\n        });\r\n        if (isInvalid)\r\n            return INVALID_MOVE;\r\n        return newG;\r\n    },\r\n};\n\nvar GameMethod;\r\n(function (GameMethod) {\r\n    GameMethod[\"MOVE\"] = \"MOVE\";\r\n    GameMethod[\"GAME_ON_END\"] = \"GAME_ON_END\";\r\n    GameMethod[\"PHASE_ON_BEGIN\"] = \"PHASE_ON_BEGIN\";\r\n    GameMethod[\"PHASE_ON_END\"] = \"PHASE_ON_END\";\r\n    GameMethod[\"TURN_ON_BEGIN\"] = \"TURN_ON_BEGIN\";\r\n    GameMethod[\"TURN_ON_MOVE\"] = \"TURN_ON_MOVE\";\r\n    GameMethod[\"TURN_ON_END\"] = \"TURN_ON_END\";\r\n})(GameMethod || (GameMethod = {}));\n\n/*\r\n * Copyright 2018 The boardgame.io Authors\r\n *\r\n * Use of this source code is governed by a MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n */\r\nvar Errors;\r\n(function (Errors) {\r\n    Errors[\"CalledOutsideHook\"] = \"Events must be called from moves or the `onBegin`, `onEnd`, and `onMove` hooks.\\nThis error probably means you called an event from other game code, like an `endIf` trigger or one of the `turn.order` methods.\";\r\n    Errors[\"EndTurnInOnEnd\"] = \"`endTurn` is disallowed in `onEnd` hooks \\u2014 the turn is already ending.\";\r\n    Errors[\"MaxTurnEndings\"] = \"Maximum number of turn endings exceeded for this update.\\nThis likely means game code is triggering an infinite loop.\";\r\n    Errors[\"PhaseEventInOnEnd\"] = \"`setPhase` & `endPhase` are disallowed in a phase\\u2019s `onEnd` hook \\u2014 the phase is already ending.\\nIf you\\u2019re trying to dynamically choose the next phase when a phase ends, use the phase\\u2019s `next` trigger.\";\r\n    Errors[\"StageEventInOnEnd\"] = \"`setStage`, `endStage` & `setActivePlayers` are disallowed in `onEnd` hooks.\";\r\n    Errors[\"StageEventInPhaseBegin\"] = \"`setStage`, `endStage` & `setActivePlayers` are disallowed in a phase\\u2019s `onBegin` hook.\\nUse `setActivePlayers` in a `turn.onBegin` hook or declare stages with `turn.activePlayers` instead.\";\r\n    Errors[\"StageEventInTurnBegin\"] = \"`setStage` & `endStage` are disallowed in `turn.onBegin`.\\nUse `setActivePlayers` or declare stages with `turn.activePlayers` instead.\";\r\n})(Errors || (Errors = {}));\r\n/**\r\n * Events\r\n */\r\nclass Events {\r\n    constructor(flow, ctx, playerID) {\r\n        this.flow = flow;\r\n        this.playerID = playerID;\r\n        this.dispatch = [];\r\n        this.initialTurn = ctx.turn;\r\n        this.updateTurnContext(ctx, undefined);\r\n        // This is an arbitrarily large upper threshold, which could be made\r\n        // configurable via a game option if the need arises.\r\n        this.maxEndedTurnsPerAction = ctx.numPlayers * 100;\r\n    }\r\n    api() {\r\n        const events = {\r\n            _private: this,\r\n        };\r\n        for (const type of this.flow.eventNames) {\r\n            events[type] = (...args) => {\r\n                this.dispatch.push({\r\n                    type,\r\n                    args,\r\n                    phase: this.currentPhase,\r\n                    turn: this.currentTurn,\r\n                    calledFrom: this.currentMethod,\r\n                    // Used to capture a stack trace in case it is needed later.\r\n                    error: new Error('Events Plugin Error'),\r\n                });\r\n            };\r\n        }\r\n        return events;\r\n    }\r\n    isUsed() {\r\n        return this.dispatch.length > 0;\r\n    }\r\n    updateTurnContext(ctx, methodType) {\r\n        this.currentPhase = ctx.phase;\r\n        this.currentTurn = ctx.turn;\r\n        this.currentMethod = methodType;\r\n    }\r\n    unsetCurrentMethod() {\r\n        this.currentMethod = undefined;\r\n    }\r\n    /**\r\n     * Updates ctx with the triggered events.\r\n     * @param {object} state - The state object { G, ctx }.\r\n     */\r\n    update(state) {\r\n        const initialState = state;\r\n        const stateWithError = ({ stack }, message) => ({\r\n            ...initialState,\r\n            plugins: {\r\n                ...initialState.plugins,\r\n                events: {\r\n                    ...initialState.plugins.events,\r\n                    data: { error: message + '\\n' + stack },\r\n                },\r\n            },\r\n        });\r\n        EventQueue: for (let i = 0; i < this.dispatch.length; i++) {\r\n            const event = this.dispatch[i];\r\n            const turnHasEnded = event.turn !== state.ctx.turn;\r\n            // This protects against potential infinite loops if specific events are called on hooks.\r\n            // The moment we exceed the defined threshold, we just bail out of all phases.\r\n            const endedTurns = this.currentTurn - this.initialTurn;\r\n            if (endedTurns >= this.maxEndedTurnsPerAction) {\r\n                return stateWithError(event.error, Errors.MaxTurnEndings);\r\n            }\r\n            if (event.calledFrom === undefined) {\r\n                return stateWithError(event.error, Errors.CalledOutsideHook);\r\n            }\r\n            // Stop processing events once the game has finished.\r\n            if (state.ctx.gameover)\r\n                break EventQueue;\r\n            switch (event.type) {\r\n                case 'endStage':\r\n                case 'setStage':\r\n                case 'setActivePlayers': {\r\n                    switch (event.calledFrom) {\r\n                        // Disallow all stage events in onEnd and phase.onBegin hooks.\r\n                        case GameMethod.TURN_ON_END:\r\n                        case GameMethod.PHASE_ON_END:\r\n                            return stateWithError(event.error, Errors.StageEventInOnEnd);\r\n                        case GameMethod.PHASE_ON_BEGIN:\r\n                            return stateWithError(event.error, Errors.StageEventInPhaseBegin);\r\n                        // Disallow setStage & endStage in turn.onBegin hooks.\r\n                        case GameMethod.TURN_ON_BEGIN:\r\n                            if (event.type === 'setActivePlayers')\r\n                                break;\r\n                            return stateWithError(event.error, Errors.StageEventInTurnBegin);\r\n                    }\r\n                    // If the turn already ended, don't try to process stage events.\r\n                    if (turnHasEnded)\r\n                        continue EventQueue;\r\n                    break;\r\n                }\r\n                case 'endTurn': {\r\n                    if (event.calledFrom === GameMethod.TURN_ON_END ||\r\n                        event.calledFrom === GameMethod.PHASE_ON_END) {\r\n                        return stateWithError(event.error, Errors.EndTurnInOnEnd);\r\n                    }\r\n                    // If the turn already ended some other way,\r\n                    // don't try to end the turn again.\r\n                    if (turnHasEnded)\r\n                        continue EventQueue;\r\n                    break;\r\n                }\r\n                case 'endPhase':\r\n                case 'setPhase': {\r\n                    if (event.calledFrom === GameMethod.PHASE_ON_END) {\r\n                        return stateWithError(event.error, Errors.PhaseEventInOnEnd);\r\n                    }\r\n                    // If the phase already ended some other way,\r\n                    // don't try to end the phase again.\r\n                    if (event.phase !== state.ctx.phase)\r\n                        continue EventQueue;\r\n                    break;\r\n                }\r\n            }\r\n            const action = automaticGameEvent(event.type, event.args, this.playerID);\r\n            state = this.flow.processEvent(state, action);\r\n        }\r\n        return state;\r\n    }\r\n}\n\n/*\r\n * Copyright 2020 The boardgame.io Authors\r\n *\r\n * Use of this source code is governed by a MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n */\r\nconst EventsPlugin = {\r\n    name: 'events',\r\n    noClient: ({ api }) => api._private.isUsed(),\r\n    isInvalid: ({ data }) => data.error || false,\r\n    // Update the events plugin’s internal turn context each time a move\r\n    // or hook is called. This allows events called after turn or phase\r\n    // endings to dispatch the current turn and phase correctly.\r\n    fnWrap: (method, methodType) => (G, ctx, ...args) => {\r\n        const api = ctx.events;\r\n        if (api)\r\n            api._private.updateTurnContext(ctx, methodType);\r\n        G = method(G, ctx, ...args);\r\n        if (api)\r\n            api._private.unsetCurrentMethod();\r\n        return G;\r\n    },\r\n    dangerouslyFlushRawState: ({ state, api }) => api._private.update(state),\r\n    api: ({ game, ctx, playerID }) => new Events(game.flow, ctx, playerID).api(),\r\n};\n\n/*\r\n * Copyright 2018 The boardgame.io Authors\r\n *\r\n * Use of this source code is governed by a MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n */\r\n/**\r\n * Plugin that makes it possible to add metadata to log entries.\r\n * During a move, you can set metadata using ctx.log.setMetadata and it will be\r\n * available on the log entry for that move.\r\n */\r\nconst LogPlugin = {\r\n    name: 'log',\r\n    flush: () => ({}),\r\n    api: ({ data }) => {\r\n        return {\r\n            setMetadata: (metadata) => {\r\n                data.metadata = metadata;\r\n            },\r\n        };\r\n    },\r\n    setup: () => ({}),\r\n};\n\n/**\r\n * Check if a value can be serialized (e.g. using `JSON.stringify`).\r\n * Adapted from: https://stackoverflow.com/a/30712764/3829557\r\n */\r\nfunction isSerializable(value) {\r\n    // Primitives are OK.\r\n    if (value === undefined ||\r\n        value === null ||\r\n        typeof value === 'boolean' ||\r\n        typeof value === 'number' ||\r\n        typeof value === 'string') {\r\n        return true;\r\n    }\r\n    // A non-primitive value that is neither a POJO or an array cannot be serialized.\r\n    if (!lodash_isplainobject__WEBPACK_IMPORTED_MODULE_0___default()(value) && !Array.isArray(value)) {\r\n        return false;\r\n    }\r\n    // Recurse entries if the value is an object or array.\r\n    for (const key in value) {\r\n        if (!isSerializable(value[key]))\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Plugin that checks whether state is serializable, in order to avoid\r\n * network serialization bugs.\r\n */\r\nconst SerializablePlugin = {\r\n    name: 'plugin-serializable',\r\n    fnWrap: (move) => (G, ctx, ...args) => {\r\n        const result = move(G, ctx, ...args);\r\n        // Check state in non-production environments.\r\n        if ( true && !isSerializable(result)) {\r\n            throw new Error('Move state is not JSON-serialiazable.\\n' +\r\n                'See https://boardgame.io/documentation/#/?id=state for more information.');\r\n        }\r\n        return result;\r\n    },\r\n};\n\n/*\r\n * Copyright 2018 The boardgame.io Authors\r\n *\r\n * Use of this source code is governed by a MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n */\r\nconst production = \"development\" === 'production';\r\nconst logfn = production ? () => { } : (...msg) => console.log(...msg);\r\nconst errorfn = (...msg) => console.error(...msg);\r\nfunction info(msg) {\r\n    logfn(`INFO: ${msg}`);\r\n}\r\nfunction error(error) {\r\n    errorfn('ERROR:', error);\r\n}\n\n/*\r\n * Copyright 2018 The boardgame.io Authors\r\n *\r\n * Use of this source code is governed by a MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n */\r\n/**\r\n * List of plugins that are always added.\r\n */\r\nconst CORE_PLUGINS = [ImmerPlugin, _plugin_random_087f861e_js__WEBPACK_IMPORTED_MODULE_2__.R, LogPlugin, SerializablePlugin];\r\nconst DEFAULT_PLUGINS = [...CORE_PLUGINS, EventsPlugin];\r\n/**\r\n * Allow plugins to intercept actions and process them.\r\n */\r\nconst ProcessAction = (state, action, opts) => {\r\n    // TODO(#723): Extend error handling to plugins.\r\n    opts.game.plugins\r\n        .filter((plugin) => plugin.action !== undefined)\r\n        .filter((plugin) => plugin.name === action.payload.type)\r\n        .forEach((plugin) => {\r\n        const name = plugin.name;\r\n        const pluginState = state.plugins[name] || { data: {} };\r\n        const data = plugin.action(pluginState.data, action.payload);\r\n        state = {\r\n            ...state,\r\n            plugins: {\r\n                ...state.plugins,\r\n                [name]: { ...pluginState, data },\r\n            },\r\n        };\r\n    });\r\n    return state;\r\n};\r\n/**\r\n * The API's created by various plugins are stored in the plugins\r\n * section of the state object:\r\n *\r\n * {\r\n *   G: {},\r\n *   ctx: {},\r\n *   plugins: {\r\n *     plugin-a: {\r\n *       data: {},  // this is generated by the plugin at Setup / Flush.\r\n *       api: {},   // this is ephemeral and generated by Enhance.\r\n *     }\r\n *   }\r\n * }\r\n *\r\n * This function takes these API's and stuffs them back into\r\n * ctx for consumption inside a move function or hook.\r\n */\r\nconst EnhanceCtx = (state) => {\r\n    const ctx = { ...state.ctx };\r\n    const plugins = state.plugins || {};\r\n    Object.entries(plugins).forEach(([name, { api }]) => {\r\n        ctx[name] = api;\r\n    });\r\n    return ctx;\r\n};\r\n/**\r\n * Applies the provided plugins to the given move / flow function.\r\n *\r\n * @param methodToWrap - The move function or hook to apply the plugins to.\r\n * @param methodType - The type of the move or hook being wrapped.\r\n * @param plugins - The list of plugins.\r\n */\r\nconst FnWrap = (methodToWrap, methodType, plugins) => {\r\n    return [...CORE_PLUGINS, ...plugins, EventsPlugin]\r\n        .filter((plugin) => plugin.fnWrap !== undefined)\r\n        .reduce((method, { fnWrap }) => fnWrap(method, methodType), methodToWrap);\r\n};\r\n/**\r\n * Allows the plugin to generate its initial state.\r\n */\r\nconst Setup = (state, opts) => {\r\n    [...DEFAULT_PLUGINS, ...opts.game.plugins]\r\n        .filter((plugin) => plugin.setup !== undefined)\r\n        .forEach((plugin) => {\r\n        const name = plugin.name;\r\n        const data = plugin.setup({\r\n            G: state.G,\r\n            ctx: state.ctx,\r\n            game: opts.game,\r\n        });\r\n        state = {\r\n            ...state,\r\n            plugins: {\r\n                ...state.plugins,\r\n                [name]: { data },\r\n            },\r\n        };\r\n    });\r\n    return state;\r\n};\r\n/**\r\n * Invokes the plugin before a move or event.\r\n * The API that the plugin generates is stored inside\r\n * the `plugins` section of the state (which is subsequently\r\n * merged into ctx).\r\n */\r\nconst Enhance = (state, opts) => {\r\n    [...DEFAULT_PLUGINS, ...opts.game.plugins]\r\n        .filter((plugin) => plugin.api !== undefined)\r\n        .forEach((plugin) => {\r\n        const name = plugin.name;\r\n        const pluginState = state.plugins[name] || { data: {} };\r\n        const api = plugin.api({\r\n            G: state.G,\r\n            ctx: state.ctx,\r\n            data: pluginState.data,\r\n            game: opts.game,\r\n            playerID: opts.playerID,\r\n        });\r\n        state = {\r\n            ...state,\r\n            plugins: {\r\n                ...state.plugins,\r\n                [name]: { ...pluginState, api },\r\n            },\r\n        };\r\n    });\r\n    return state;\r\n};\r\n/**\r\n * Allows plugins to update their state after a move / event.\r\n */\r\nconst Flush = (state, opts) => {\r\n    // We flush the events plugin first, then custom plugins and the core plugins.\r\n    // This means custom plugins cannot use the events API but will be available in event hooks.\r\n    // Note that plugins are flushed in reverse, to allow custom plugins calling each other.\r\n    [...CORE_PLUGINS, ...opts.game.plugins, EventsPlugin]\r\n        .reverse()\r\n        .forEach((plugin) => {\r\n        const name = plugin.name;\r\n        const pluginState = state.plugins[name] || { data: {} };\r\n        if (plugin.flush) {\r\n            const newData = plugin.flush({\r\n                G: state.G,\r\n                ctx: state.ctx,\r\n                game: opts.game,\r\n                api: pluginState.api,\r\n                data: pluginState.data,\r\n            });\r\n            state = {\r\n                ...state,\r\n                plugins: {\r\n                    ...state.plugins,\r\n                    [plugin.name]: { data: newData },\r\n                },\r\n            };\r\n        }\r\n        else if (plugin.dangerouslyFlushRawState) {\r\n            state = plugin.dangerouslyFlushRawState({\r\n                state,\r\n                game: opts.game,\r\n                api: pluginState.api,\r\n                data: pluginState.data,\r\n            });\r\n            // Remove everything other than data.\r\n            const data = state.plugins[name].data;\r\n            state = {\r\n                ...state,\r\n                plugins: {\r\n                    ...state.plugins,\r\n                    [plugin.name]: { data },\r\n                },\r\n            };\r\n        }\r\n    });\r\n    return state;\r\n};\r\n/**\r\n * Allows plugins to indicate if they should not be materialized on the client.\r\n * This will cause the client to discard the state update and wait for the\r\n * master instead.\r\n */\r\nconst NoClient = (state, opts) => {\r\n    return [...DEFAULT_PLUGINS, ...opts.game.plugins]\r\n        .filter((plugin) => plugin.noClient !== undefined)\r\n        .map((plugin) => {\r\n        const name = plugin.name;\r\n        const pluginState = state.plugins[name];\r\n        if (pluginState) {\r\n            return plugin.noClient({\r\n                G: state.G,\r\n                ctx: state.ctx,\r\n                game: opts.game,\r\n                api: pluginState.api,\r\n                data: pluginState.data,\r\n            });\r\n        }\r\n        return false;\r\n    })\r\n        .includes(true);\r\n};\r\n/**\r\n * Allows plugins to indicate if the entire action should be thrown out\r\n * as invalid. This will cancel the entire state update.\r\n */\r\nconst IsInvalid = (state, opts) => {\r\n    const firstInvalidReturn = [...DEFAULT_PLUGINS, ...opts.game.plugins]\r\n        .filter((plugin) => plugin.isInvalid !== undefined)\r\n        .map((plugin) => {\r\n        const { name } = plugin;\r\n        const pluginState = state.plugins[name];\r\n        const message = plugin.isInvalid({\r\n            G: state.G,\r\n            ctx: state.ctx,\r\n            game: opts.game,\r\n            data: pluginState && pluginState.data,\r\n        });\r\n        return message ? { plugin: name, message } : false;\r\n    })\r\n        .find((value) => value);\r\n    return firstInvalidReturn || false;\r\n};\r\n/**\r\n * Update plugin state after move/event & check if plugins consider the update to be valid.\r\n * @returns Tuple of `[updatedState]` or `[originalState, invalidError]`.\r\n */\r\nconst FlushAndValidate = (state, opts) => {\r\n    const updatedState = Flush(state, opts);\r\n    const isInvalid = IsInvalid(updatedState, opts);\r\n    if (!isInvalid)\r\n        return [updatedState];\r\n    const { plugin, message } = isInvalid;\r\n    error(`${plugin} plugin declared action invalid:\\n${message}`);\r\n    return [state, isInvalid];\r\n};\r\n/**\r\n * Allows plugins to customize their data for specific players.\r\n * For example, a plugin may want to share no data with the client, or\r\n * want to keep some player data secret from opponents.\r\n */\r\nconst PlayerView = ({ G, ctx, plugins = {} }, { game, playerID }) => {\r\n    [...DEFAULT_PLUGINS, ...game.plugins].forEach(({ name, playerView }) => {\r\n        if (!playerView)\r\n            return;\r\n        const { data } = plugins[name] || { data: {} };\r\n        const newData = playerView({ G, ctx, game, data, playerID });\r\n        plugins = {\r\n            ...plugins,\r\n            [name]: { data: newData },\r\n        };\r\n    });\r\n    return plugins;\r\n};\n\n/**\r\n * Adjust the given options to use the new minMoves/maxMoves if a legacy moveLimit was given\r\n * @param options The options object to apply backwards compatibility to\r\n * @param enforceMinMoves Use moveLimit to set both minMoves and maxMoves\r\n */\r\nfunction supportDeprecatedMoveLimit(options, enforceMinMoves = false) {\r\n    if (options.moveLimit) {\r\n        if (enforceMinMoves) {\r\n            options.minMoves = options.moveLimit;\r\n        }\r\n        options.maxMoves = options.moveLimit;\r\n        delete options.moveLimit;\r\n    }\r\n}\n\n/*\r\n * Copyright 2017 The boardgame.io Authors\r\n *\r\n * Use of this source code is governed by a MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n */\r\nfunction SetActivePlayers(ctx, arg) {\r\n    let activePlayers = {};\r\n    let _prevActivePlayers = [];\r\n    let _nextActivePlayers = null;\r\n    let _activePlayersMinMoves = {};\r\n    let _activePlayersMaxMoves = {};\r\n    if (Array.isArray(arg)) {\r\n        // support a simple array of player IDs as active players\r\n        const value = {};\r\n        arg.forEach((v) => (value[v] = Stage.NULL));\r\n        activePlayers = value;\r\n    }\r\n    else {\r\n        // process active players argument object\r\n        // stages previously did not enforce minMoves, this behaviour is kept intentionally\r\n        supportDeprecatedMoveLimit(arg);\r\n        if (arg.next) {\r\n            _nextActivePlayers = arg.next;\r\n        }\r\n        if (arg.revert) {\r\n            _prevActivePlayers = [\r\n                ...ctx._prevActivePlayers,\r\n                {\r\n                    activePlayers: ctx.activePlayers,\r\n                    _activePlayersMinMoves: ctx._activePlayersMinMoves,\r\n                    _activePlayersMaxMoves: ctx._activePlayersMaxMoves,\r\n                    _activePlayersNumMoves: ctx._activePlayersNumMoves,\r\n                },\r\n            ];\r\n        }\r\n        if (arg.currentPlayer !== undefined) {\r\n            ApplyActivePlayerArgument(activePlayers, _activePlayersMinMoves, _activePlayersMaxMoves, ctx.currentPlayer, arg.currentPlayer);\r\n        }\r\n        if (arg.others !== undefined) {\r\n            for (let i = 0; i < ctx.playOrder.length; i++) {\r\n                const id = ctx.playOrder[i];\r\n                if (id !== ctx.currentPlayer) {\r\n                    ApplyActivePlayerArgument(activePlayers, _activePlayersMinMoves, _activePlayersMaxMoves, id, arg.others);\r\n                }\r\n            }\r\n        }\r\n        if (arg.all !== undefined) {\r\n            for (let i = 0; i < ctx.playOrder.length; i++) {\r\n                const id = ctx.playOrder[i];\r\n                ApplyActivePlayerArgument(activePlayers, _activePlayersMinMoves, _activePlayersMaxMoves, id, arg.all);\r\n            }\r\n        }\r\n        if (arg.value) {\r\n            for (const id in arg.value) {\r\n                ApplyActivePlayerArgument(activePlayers, _activePlayersMinMoves, _activePlayersMaxMoves, id, arg.value[id]);\r\n            }\r\n        }\r\n        if (arg.minMoves) {\r\n            for (const id in activePlayers) {\r\n                if (_activePlayersMinMoves[id] === undefined) {\r\n                    _activePlayersMinMoves[id] = arg.minMoves;\r\n                }\r\n            }\r\n        }\r\n        if (arg.maxMoves) {\r\n            for (const id in activePlayers) {\r\n                if (_activePlayersMaxMoves[id] === undefined) {\r\n                    _activePlayersMaxMoves[id] = arg.maxMoves;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (Object.keys(activePlayers).length === 0) {\r\n        activePlayers = null;\r\n    }\r\n    if (Object.keys(_activePlayersMinMoves).length === 0) {\r\n        _activePlayersMinMoves = null;\r\n    }\r\n    if (Object.keys(_activePlayersMaxMoves).length === 0) {\r\n        _activePlayersMaxMoves = null;\r\n    }\r\n    const _activePlayersNumMoves = {};\r\n    for (const id in activePlayers) {\r\n        _activePlayersNumMoves[id] = 0;\r\n    }\r\n    return {\r\n        ...ctx,\r\n        activePlayers,\r\n        _activePlayersMinMoves,\r\n        _activePlayersMaxMoves,\r\n        _activePlayersNumMoves,\r\n        _prevActivePlayers,\r\n        _nextActivePlayers,\r\n    };\r\n}\r\n/**\r\n * Update activePlayers, setting it to previous, next or null values\r\n * when it becomes empty.\r\n * @param ctx\r\n */\r\nfunction UpdateActivePlayersOnceEmpty(ctx) {\r\n    let { activePlayers, _activePlayersMinMoves, _activePlayersMaxMoves, _activePlayersNumMoves, _prevActivePlayers, _nextActivePlayers, } = ctx;\r\n    if (activePlayers && Object.keys(activePlayers).length === 0) {\r\n        if (_nextActivePlayers) {\r\n            ctx = SetActivePlayers(ctx, _nextActivePlayers);\r\n            ({\r\n                activePlayers,\r\n                _activePlayersMinMoves,\r\n                _activePlayersMaxMoves,\r\n                _activePlayersNumMoves,\r\n                _prevActivePlayers,\r\n            } = ctx);\r\n        }\r\n        else if (_prevActivePlayers.length > 0) {\r\n            const lastIndex = _prevActivePlayers.length - 1;\r\n            ({\r\n                activePlayers,\r\n                _activePlayersMinMoves,\r\n                _activePlayersMaxMoves,\r\n                _activePlayersNumMoves,\r\n            } = _prevActivePlayers[lastIndex]);\r\n            _prevActivePlayers = _prevActivePlayers.slice(0, lastIndex);\r\n        }\r\n        else {\r\n            activePlayers = null;\r\n            _activePlayersMinMoves = null;\r\n            _activePlayersMaxMoves = null;\r\n        }\r\n    }\r\n    return {\r\n        ...ctx,\r\n        activePlayers,\r\n        _activePlayersMinMoves,\r\n        _activePlayersMaxMoves,\r\n        _activePlayersNumMoves,\r\n        _prevActivePlayers,\r\n    };\r\n}\r\n/**\r\n * Apply an active player argument to the given player ID\r\n * @param {Object} activePlayers\r\n * @param {Object} _activePlayersMinMoves\r\n * @param {Object} _activePlayersMaxMoves\r\n * @param {String} playerID The player to apply the parameter to\r\n * @param {(String|Object)} arg An active player argument\r\n */\r\nfunction ApplyActivePlayerArgument(activePlayers, _activePlayersMinMoves, _activePlayersMaxMoves, playerID, arg) {\r\n    if (typeof arg !== 'object' || arg === Stage.NULL) {\r\n        arg = { stage: arg };\r\n    }\r\n    if (arg.stage !== undefined) {\r\n        // stages previously did not enforce minMoves, this behaviour is kept intentionally\r\n        supportDeprecatedMoveLimit(arg);\r\n        activePlayers[playerID] = arg.stage;\r\n        if (arg.minMoves)\r\n            _activePlayersMinMoves[playerID] = arg.minMoves;\r\n        if (arg.maxMoves)\r\n            _activePlayersMaxMoves[playerID] = arg.maxMoves;\r\n    }\r\n}\r\n/**\r\n * Converts a playOrderPos index into its value in playOrder.\r\n * @param {Array} playOrder - An array of player ID's.\r\n * @param {number} playOrderPos - An index into the above.\r\n */\r\nfunction getCurrentPlayer(playOrder, playOrderPos) {\r\n    // convert to string in case playOrder is set to number[]\r\n    return playOrder[playOrderPos] + '';\r\n}\r\n/**\r\n * Called at the start of a turn to initialize turn order state.\r\n *\r\n * TODO: This is called inside StartTurn, which is called from\r\n * both UpdateTurn and StartPhase (so it's called at the beginning\r\n * of a new phase as well as between turns). We should probably\r\n * split it into two.\r\n */\r\nfunction InitTurnOrderState(state, turn) {\r\n    let { G, ctx } = state;\r\n    const { numPlayers } = ctx;\r\n    const ctxWithAPI = EnhanceCtx(state);\r\n    const order = turn.order;\r\n    let playOrder = [...Array.from({ length: numPlayers })].map((_, i) => i + '');\r\n    if (order.playOrder !== undefined) {\r\n        playOrder = order.playOrder(G, ctxWithAPI);\r\n    }\r\n    const playOrderPos = order.first(G, ctxWithAPI);\r\n    const posType = typeof playOrderPos;\r\n    if (posType !== 'number') {\r\n        error(`invalid value returned by turn.order.first — expected number got ${posType} “${playOrderPos}”.`);\r\n    }\r\n    const currentPlayer = getCurrentPlayer(playOrder, playOrderPos);\r\n    ctx = { ...ctx, currentPlayer, playOrderPos, playOrder };\r\n    ctx = SetActivePlayers(ctx, turn.activePlayers || {});\r\n    return ctx;\r\n}\r\n/**\r\n * Called at the end of each turn to update the turn order state.\r\n * @param {object} G - The game object G.\r\n * @param {object} ctx - The game object ctx.\r\n * @param {object} turn - A turn object for this phase.\r\n * @param {string} endTurnArg - An optional argument to endTurn that\r\n                                may specify the next player.\r\n */\r\nfunction UpdateTurnOrderState(state, currentPlayer, turn, endTurnArg) {\r\n    const order = turn.order;\r\n    let { G, ctx } = state;\r\n    let playOrderPos = ctx.playOrderPos;\r\n    let endPhase = false;\r\n    if (endTurnArg && endTurnArg !== true) {\r\n        if (typeof endTurnArg !== 'object') {\r\n            error(`invalid argument to endTurn: ${endTurnArg}`);\r\n        }\r\n        Object.keys(endTurnArg).forEach((arg) => {\r\n            switch (arg) {\r\n                case 'remove':\r\n                    currentPlayer = getCurrentPlayer(ctx.playOrder, playOrderPos);\r\n                    break;\r\n                case 'next':\r\n                    playOrderPos = ctx.playOrder.indexOf(endTurnArg.next);\r\n                    currentPlayer = endTurnArg.next;\r\n                    break;\r\n                default:\r\n                    error(`invalid argument to endTurn: ${arg}`);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        const ctxWithAPI = EnhanceCtx(state);\r\n        const t = order.next(G, ctxWithAPI);\r\n        const type = typeof t;\r\n        if (t !== undefined && type !== 'number') {\r\n            error(`invalid value returned by turn.order.next — expected number or undefined got ${type} “${t}”.`);\r\n        }\r\n        if (t === undefined) {\r\n            endPhase = true;\r\n        }\r\n        else {\r\n            playOrderPos = t;\r\n            currentPlayer = getCurrentPlayer(ctx.playOrder, playOrderPos);\r\n        }\r\n    }\r\n    ctx = {\r\n        ...ctx,\r\n        playOrderPos,\r\n        currentPlayer,\r\n    };\r\n    return { endPhase, ctx };\r\n}\r\n/**\r\n * Set of different turn orders possible in a phase.\r\n * These are meant to be passed to the `turn` setting\r\n * in the flow objects.\r\n *\r\n * Each object defines the first player when the phase / game\r\n * begins, and also a function `next` to determine who the\r\n * next player is when the turn ends.\r\n *\r\n * The phase ends if next() returns undefined.\r\n */\r\nconst TurnOrder = {\r\n    /**\r\n     * DEFAULT\r\n     *\r\n     * The default round-robin turn order.\r\n     */\r\n    DEFAULT: {\r\n        first: (G, ctx) => ctx.turn === 0\r\n            ? ctx.playOrderPos\r\n            : (ctx.playOrderPos + 1) % ctx.playOrder.length,\r\n        next: (G, ctx) => (ctx.playOrderPos + 1) % ctx.playOrder.length,\r\n    },\r\n    /**\r\n     * RESET\r\n     *\r\n     * Similar to DEFAULT, but starts from 0 each time.\r\n     */\r\n    RESET: {\r\n        first: () => 0,\r\n        next: (G, ctx) => (ctx.playOrderPos + 1) % ctx.playOrder.length,\r\n    },\r\n    /**\r\n     * CONTINUE\r\n     *\r\n     * Similar to DEFAULT, but starts with the player who ended the last phase.\r\n     */\r\n    CONTINUE: {\r\n        first: (G, ctx) => ctx.playOrderPos,\r\n        next: (G, ctx) => (ctx.playOrderPos + 1) % ctx.playOrder.length,\r\n    },\r\n    /**\r\n     * ONCE\r\n     *\r\n     * Another round-robin turn order, but goes around just once.\r\n     * The phase ends after all players have played.\r\n     */\r\n    ONCE: {\r\n        first: () => 0,\r\n        next: (G, ctx) => {\r\n            if (ctx.playOrderPos < ctx.playOrder.length - 1) {\r\n                return ctx.playOrderPos + 1;\r\n            }\r\n        },\r\n    },\r\n    /**\r\n     * CUSTOM\r\n     *\r\n     * Identical to DEFAULT, but also sets playOrder at the\r\n     * beginning of the phase.\r\n     *\r\n     * @param {Array} playOrder - The play order.\r\n     */\r\n    CUSTOM: (playOrder) => ({\r\n        playOrder: () => playOrder,\r\n        first: () => 0,\r\n        next: (G, ctx) => (ctx.playOrderPos + 1) % ctx.playOrder.length,\r\n    }),\r\n    /**\r\n     * CUSTOM_FROM\r\n     *\r\n     * Identical to DEFAULT, but also sets playOrder at the\r\n     * beginning of the phase to a value specified by a field\r\n     * in G.\r\n     *\r\n     * @param {string} playOrderField - Field in G.\r\n     */\r\n    CUSTOM_FROM: (playOrderField) => ({\r\n        playOrder: (G) => G[playOrderField],\r\n        first: () => 0,\r\n        next: (G, ctx) => (ctx.playOrderPos + 1) % ctx.playOrder.length,\r\n    }),\r\n};\r\nconst Stage = {\r\n    NULL: null,\r\n};\r\nconst ActivePlayers = {\r\n    /**\r\n     * ALL\r\n     *\r\n     * The turn stays with one player, but any player can play (in any order)\r\n     * until the phase ends.\r\n     */\r\n    ALL: { all: Stage.NULL },\r\n    /**\r\n     * ALL_ONCE\r\n     *\r\n     * The turn stays with one player, but any player can play (once, and in any order).\r\n     * This is typically used in a phase where you want to elicit a response\r\n     * from every player in the game.\r\n     */\r\n    ALL_ONCE: { all: Stage.NULL, minMoves: 1, maxMoves: 1 },\r\n    /**\r\n     * OTHERS\r\n     *\r\n     * The turn stays with one player, and every *other* player can play (in any order)\r\n     * until the phase ends.\r\n     */\r\n    OTHERS: { others: Stage.NULL },\r\n    /**\r\n     * OTHERS_ONCE\r\n     *\r\n     * The turn stays with one player, and every *other* player can play (once, and in any order).\r\n     * This is typically used in a phase where you want to elicit a response\r\n     * from every *other* player in the game.\r\n     */\r\n    OTHERS_ONCE: { others: Stage.NULL, minMoves: 1, maxMoves: 1 },\r\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/boardgame.io/dist/esm/turn-order-0b7dce3d.js\n"));

/***/ }),

/***/ "./node_modules/boardgame.io/dist/esm/util-b1699aa1.js":
/*!*************************************************************!*\
  !*** ./node_modules/boardgame.io/dist/esm/util-b1699aa1.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"A\": function() { return /* binding */ Async; },\n/* harmony export */   \"S\": function() { return /* binding */ Sync; },\n/* harmony export */   \"c\": function() { return /* binding */ createMatch; },\n/* harmony export */   \"i\": function() { return /* binding */ isSynchronous; }\n/* harmony export */ });\n/* harmony import */ var _initialize_9ac1bbf5_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./initialize-9ac1bbf5.js */ \"./node_modules/boardgame.io/dist/esm/initialize-9ac1bbf5.js\");\n\n\nvar Type;\r\n(function (Type) {\r\n    Type[Type[\"SYNC\"] = 0] = \"SYNC\";\r\n    Type[Type[\"ASYNC\"] = 1] = \"ASYNC\";\r\n})(Type || (Type = {}));\r\n/**\r\n * Type guard that checks if a storage implementation is synchronous.\r\n */\r\nfunction isSynchronous(storageAPI) {\r\n    return storageAPI.type() === Type.SYNC;\r\n}\r\nclass Async {\r\n    /* istanbul ignore next */\r\n    type() {\r\n        /* istanbul ignore next */\r\n        return Type.ASYNC;\r\n    }\r\n    /**\r\n     * Create a new match.\r\n     *\r\n     * This might just need to call setState and setMetadata in\r\n     * most implementations.\r\n     *\r\n     * However, it exists as a separate call so that the\r\n     * implementation can provision things differently when\r\n     * a match is created.  For example, it might stow away the\r\n     * initial match state in a separate field for easier retrieval.\r\n     */\r\n    /* istanbul ignore next */\r\n    async createMatch(matchID, opts) {\r\n        if (this.createGame) {\r\n            console.warn('The database connector does not implement a createMatch method.', '\\nUsing the deprecated createGame method instead.');\r\n            return this.createGame(matchID, opts);\r\n        }\r\n        else {\r\n            console.error('The database connector does not implement a createMatch method.');\r\n        }\r\n    }\r\n    /**\r\n     * Return all matches.\r\n     */\r\n    /* istanbul ignore next */\r\n    async listMatches(opts) {\r\n        if (this.listGames) {\r\n            console.warn('The database connector does not implement a listMatches method.', '\\nUsing the deprecated listGames method instead.');\r\n            return this.listGames(opts);\r\n        }\r\n        else {\r\n            console.error('The database connector does not implement a listMatches method.');\r\n        }\r\n    }\r\n}\r\nclass Sync {\r\n    type() {\r\n        return Type.SYNC;\r\n    }\r\n    /**\r\n     * Connect.\r\n     */\r\n    connect() {\r\n        return;\r\n    }\r\n    /**\r\n     * Create a new match.\r\n     *\r\n     * This might just need to call setState and setMetadata in\r\n     * most implementations.\r\n     *\r\n     * However, it exists as a separate call so that the\r\n     * implementation can provision things differently when\r\n     * a match is created.  For example, it might stow away the\r\n     * initial match state in a separate field for easier retrieval.\r\n     */\r\n    /* istanbul ignore next */\r\n    createMatch(matchID, opts) {\r\n        if (this.createGame) {\r\n            console.warn('The database connector does not implement a createMatch method.', '\\nUsing the deprecated createGame method instead.');\r\n            return this.createGame(matchID, opts);\r\n        }\r\n        else {\r\n            console.error('The database connector does not implement a createMatch method.');\r\n        }\r\n    }\r\n    /**\r\n     * Return all matches.\r\n     */\r\n    /* istanbul ignore next */\r\n    listMatches(opts) {\r\n        if (this.listGames) {\r\n            console.warn('The database connector does not implement a listMatches method.', '\\nUsing the deprecated listGames method instead.');\r\n            return this.listGames(opts);\r\n        }\r\n        else {\r\n            console.error('The database connector does not implement a listMatches method.');\r\n        }\r\n    }\r\n}\n\n/**\r\n * Creates a new match metadata object.\r\n */\r\nconst createMetadata = ({ game, unlisted, setupData, numPlayers, }) => {\r\n    const metadata = {\r\n        gameName: game.name,\r\n        unlisted: !!unlisted,\r\n        players: {},\r\n        createdAt: Date.now(),\r\n        updatedAt: Date.now(),\r\n    };\r\n    if (setupData !== undefined)\r\n        metadata.setupData = setupData;\r\n    for (let playerIndex = 0; playerIndex < numPlayers; playerIndex++) {\r\n        metadata.players[playerIndex] = { id: playerIndex };\r\n    }\r\n    return metadata;\r\n};\r\n/**\r\n * Creates initial state and metadata for a new match.\r\n * If the provided `setupData` doesn’t pass the game’s validation,\r\n * an error object is returned instead.\r\n */\r\nconst createMatch = ({ game, numPlayers, setupData, unlisted, }) => {\r\n    if (!numPlayers || typeof numPlayers !== 'number')\r\n        numPlayers = 2;\r\n    const setupDataError = game.validateSetupData && game.validateSetupData(setupData, numPlayers);\r\n    if (setupDataError !== undefined)\r\n        return { setupDataError };\r\n    const metadata = createMetadata({ game, numPlayers, setupData, unlisted });\r\n    const initialState = (0,_initialize_9ac1bbf5_js__WEBPACK_IMPORTED_MODULE_0__.I)({ game, numPlayers, setupData });\r\n    return { metadata, initialState };\r\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYm9hcmRnYW1lLmlvL2Rpc3QvZXNtL3V0aWwtYjE2OTlhYTEuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBK0Q7O0FBRS9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxvQkFBb0I7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsd0NBQXdDO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLDBCQUEwQjtBQUN4RCwwQ0FBMEM7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1Qix3Q0FBd0M7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIsc0NBQXNDLHVDQUF1QztBQUM3RSx5QkFBeUIsMERBQWMsR0FBRyw2QkFBNkI7QUFDdkUsYUFBYTtBQUNiOztBQUV1RSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYm9hcmRnYW1lLmlvL2Rpc3QvZXNtL3V0aWwtYjE2OTlhYTEuanM/MzVjYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJIGFzIEluaXRpYWxpemVHYW1lIH0gZnJvbSAnLi9pbml0aWFsaXplLTlhYzFiYmY1LmpzJztcblxudmFyIFR5cGU7XHJcbihmdW5jdGlvbiAoVHlwZSkge1xyXG4gICAgVHlwZVtUeXBlW1wiU1lOQ1wiXSA9IDBdID0gXCJTWU5DXCI7XHJcbiAgICBUeXBlW1R5cGVbXCJBU1lOQ1wiXSA9IDFdID0gXCJBU1lOQ1wiO1xyXG59KShUeXBlIHx8IChUeXBlID0ge30pKTtcclxuLyoqXHJcbiAqIFR5cGUgZ3VhcmQgdGhhdCBjaGVja3MgaWYgYSBzdG9yYWdlIGltcGxlbWVudGF0aW9uIGlzIHN5bmNocm9ub3VzLlxyXG4gKi9cclxuZnVuY3Rpb24gaXNTeW5jaHJvbm91cyhzdG9yYWdlQVBJKSB7XHJcbiAgICByZXR1cm4gc3RvcmFnZUFQSS50eXBlKCkgPT09IFR5cGUuU1lOQztcclxufVxyXG5jbGFzcyBBc3luYyB7XHJcbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xyXG4gICAgdHlwZSgpIHtcclxuICAgICAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xyXG4gICAgICAgIHJldHVybiBUeXBlLkFTWU5DO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBDcmVhdGUgYSBuZXcgbWF0Y2guXHJcbiAgICAgKlxyXG4gICAgICogVGhpcyBtaWdodCBqdXN0IG5lZWQgdG8gY2FsbCBzZXRTdGF0ZSBhbmQgc2V0TWV0YWRhdGEgaW5cclxuICAgICAqIG1vc3QgaW1wbGVtZW50YXRpb25zLlxyXG4gICAgICpcclxuICAgICAqIEhvd2V2ZXIsIGl0IGV4aXN0cyBhcyBhIHNlcGFyYXRlIGNhbGwgc28gdGhhdCB0aGVcclxuICAgICAqIGltcGxlbWVudGF0aW9uIGNhbiBwcm92aXNpb24gdGhpbmdzIGRpZmZlcmVudGx5IHdoZW5cclxuICAgICAqIGEgbWF0Y2ggaXMgY3JlYXRlZC4gIEZvciBleGFtcGxlLCBpdCBtaWdodCBzdG93IGF3YXkgdGhlXHJcbiAgICAgKiBpbml0aWFsIG1hdGNoIHN0YXRlIGluIGEgc2VwYXJhdGUgZmllbGQgZm9yIGVhc2llciByZXRyaWV2YWwuXHJcbiAgICAgKi9cclxuICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXHJcbiAgICBhc3luYyBjcmVhdGVNYXRjaChtYXRjaElELCBvcHRzKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuY3JlYXRlR2FtZSkge1xyXG4gICAgICAgICAgICBjb25zb2xlLndhcm4oJ1RoZSBkYXRhYmFzZSBjb25uZWN0b3IgZG9lcyBub3QgaW1wbGVtZW50IGEgY3JlYXRlTWF0Y2ggbWV0aG9kLicsICdcXG5Vc2luZyB0aGUgZGVwcmVjYXRlZCBjcmVhdGVHYW1lIG1ldGhvZCBpbnN0ZWFkLicpO1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5jcmVhdGVHYW1lKG1hdGNoSUQsIG9wdHMpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcignVGhlIGRhdGFiYXNlIGNvbm5lY3RvciBkb2VzIG5vdCBpbXBsZW1lbnQgYSBjcmVhdGVNYXRjaCBtZXRob2QuJyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm4gYWxsIG1hdGNoZXMuXHJcbiAgICAgKi9cclxuICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXHJcbiAgICBhc3luYyBsaXN0TWF0Y2hlcyhvcHRzKSB7XHJcbiAgICAgICAgaWYgKHRoaXMubGlzdEdhbWVzKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUud2FybignVGhlIGRhdGFiYXNlIGNvbm5lY3RvciBkb2VzIG5vdCBpbXBsZW1lbnQgYSBsaXN0TWF0Y2hlcyBtZXRob2QuJywgJ1xcblVzaW5nIHRoZSBkZXByZWNhdGVkIGxpc3RHYW1lcyBtZXRob2QgaW5zdGVhZC4nKTtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMubGlzdEdhbWVzKG9wdHMpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcignVGhlIGRhdGFiYXNlIGNvbm5lY3RvciBkb2VzIG5vdCBpbXBsZW1lbnQgYSBsaXN0TWF0Y2hlcyBtZXRob2QuJyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbmNsYXNzIFN5bmMge1xyXG4gICAgdHlwZSgpIHtcclxuICAgICAgICByZXR1cm4gVHlwZS5TWU5DO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBDb25uZWN0LlxyXG4gICAgICovXHJcbiAgICBjb25uZWN0KCkge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogQ3JlYXRlIGEgbmV3IG1hdGNoLlxyXG4gICAgICpcclxuICAgICAqIFRoaXMgbWlnaHQganVzdCBuZWVkIHRvIGNhbGwgc2V0U3RhdGUgYW5kIHNldE1ldGFkYXRhIGluXHJcbiAgICAgKiBtb3N0IGltcGxlbWVudGF0aW9ucy5cclxuICAgICAqXHJcbiAgICAgKiBIb3dldmVyLCBpdCBleGlzdHMgYXMgYSBzZXBhcmF0ZSBjYWxsIHNvIHRoYXQgdGhlXHJcbiAgICAgKiBpbXBsZW1lbnRhdGlvbiBjYW4gcHJvdmlzaW9uIHRoaW5ncyBkaWZmZXJlbnRseSB3aGVuXHJcbiAgICAgKiBhIG1hdGNoIGlzIGNyZWF0ZWQuICBGb3IgZXhhbXBsZSwgaXQgbWlnaHQgc3RvdyBhd2F5IHRoZVxyXG4gICAgICogaW5pdGlhbCBtYXRjaCBzdGF0ZSBpbiBhIHNlcGFyYXRlIGZpZWxkIGZvciBlYXNpZXIgcmV0cmlldmFsLlxyXG4gICAgICovXHJcbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xyXG4gICAgY3JlYXRlTWF0Y2gobWF0Y2hJRCwgb3B0cykge1xyXG4gICAgICAgIGlmICh0aGlzLmNyZWF0ZUdhbWUpIHtcclxuICAgICAgICAgICAgY29uc29sZS53YXJuKCdUaGUgZGF0YWJhc2UgY29ubmVjdG9yIGRvZXMgbm90IGltcGxlbWVudCBhIGNyZWF0ZU1hdGNoIG1ldGhvZC4nLCAnXFxuVXNpbmcgdGhlIGRlcHJlY2F0ZWQgY3JlYXRlR2FtZSBtZXRob2QgaW5zdGVhZC4nKTtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuY3JlYXRlR2FtZShtYXRjaElELCBvcHRzKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ1RoZSBkYXRhYmFzZSBjb25uZWN0b3IgZG9lcyBub3QgaW1wbGVtZW50IGEgY3JlYXRlTWF0Y2ggbWV0aG9kLicpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJuIGFsbCBtYXRjaGVzLlxyXG4gICAgICovXHJcbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xyXG4gICAgbGlzdE1hdGNoZXMob3B0cykge1xyXG4gICAgICAgIGlmICh0aGlzLmxpc3RHYW1lcykge1xyXG4gICAgICAgICAgICBjb25zb2xlLndhcm4oJ1RoZSBkYXRhYmFzZSBjb25uZWN0b3IgZG9lcyBub3QgaW1wbGVtZW50IGEgbGlzdE1hdGNoZXMgbWV0aG9kLicsICdcXG5Vc2luZyB0aGUgZGVwcmVjYXRlZCBsaXN0R2FtZXMgbWV0aG9kIGluc3RlYWQuJyk7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmxpc3RHYW1lcyhvcHRzKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ1RoZSBkYXRhYmFzZSBjb25uZWN0b3IgZG9lcyBub3QgaW1wbGVtZW50IGEgbGlzdE1hdGNoZXMgbWV0aG9kLicpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxuXG4vKipcclxuICogQ3JlYXRlcyBhIG5ldyBtYXRjaCBtZXRhZGF0YSBvYmplY3QuXHJcbiAqL1xyXG5jb25zdCBjcmVhdGVNZXRhZGF0YSA9ICh7IGdhbWUsIHVubGlzdGVkLCBzZXR1cERhdGEsIG51bVBsYXllcnMsIH0pID0+IHtcclxuICAgIGNvbnN0IG1ldGFkYXRhID0ge1xyXG4gICAgICAgIGdhbWVOYW1lOiBnYW1lLm5hbWUsXHJcbiAgICAgICAgdW5saXN0ZWQ6ICEhdW5saXN0ZWQsXHJcbiAgICAgICAgcGxheWVyczoge30sXHJcbiAgICAgICAgY3JlYXRlZEF0OiBEYXRlLm5vdygpLFxyXG4gICAgICAgIHVwZGF0ZWRBdDogRGF0ZS5ub3coKSxcclxuICAgIH07XHJcbiAgICBpZiAoc2V0dXBEYXRhICE9PSB1bmRlZmluZWQpXHJcbiAgICAgICAgbWV0YWRhdGEuc2V0dXBEYXRhID0gc2V0dXBEYXRhO1xyXG4gICAgZm9yIChsZXQgcGxheWVySW5kZXggPSAwOyBwbGF5ZXJJbmRleCA8IG51bVBsYXllcnM7IHBsYXllckluZGV4KyspIHtcclxuICAgICAgICBtZXRhZGF0YS5wbGF5ZXJzW3BsYXllckluZGV4XSA9IHsgaWQ6IHBsYXllckluZGV4IH07XHJcbiAgICB9XHJcbiAgICByZXR1cm4gbWV0YWRhdGE7XHJcbn07XHJcbi8qKlxyXG4gKiBDcmVhdGVzIGluaXRpYWwgc3RhdGUgYW5kIG1ldGFkYXRhIGZvciBhIG5ldyBtYXRjaC5cclxuICogSWYgdGhlIHByb3ZpZGVkIGBzZXR1cERhdGFgIGRvZXNu4oCZdCBwYXNzIHRoZSBnYW1l4oCZcyB2YWxpZGF0aW9uLFxyXG4gKiBhbiBlcnJvciBvYmplY3QgaXMgcmV0dXJuZWQgaW5zdGVhZC5cclxuICovXHJcbmNvbnN0IGNyZWF0ZU1hdGNoID0gKHsgZ2FtZSwgbnVtUGxheWVycywgc2V0dXBEYXRhLCB1bmxpc3RlZCwgfSkgPT4ge1xyXG4gICAgaWYgKCFudW1QbGF5ZXJzIHx8IHR5cGVvZiBudW1QbGF5ZXJzICE9PSAnbnVtYmVyJylcclxuICAgICAgICBudW1QbGF5ZXJzID0gMjtcclxuICAgIGNvbnN0IHNldHVwRGF0YUVycm9yID0gZ2FtZS52YWxpZGF0ZVNldHVwRGF0YSAmJiBnYW1lLnZhbGlkYXRlU2V0dXBEYXRhKHNldHVwRGF0YSwgbnVtUGxheWVycyk7XHJcbiAgICBpZiAoc2V0dXBEYXRhRXJyb3IgIT09IHVuZGVmaW5lZClcclxuICAgICAgICByZXR1cm4geyBzZXR1cERhdGFFcnJvciB9O1xyXG4gICAgY29uc3QgbWV0YWRhdGEgPSBjcmVhdGVNZXRhZGF0YSh7IGdhbWUsIG51bVBsYXllcnMsIHNldHVwRGF0YSwgdW5saXN0ZWQgfSk7XHJcbiAgICBjb25zdCBpbml0aWFsU3RhdGUgPSBJbml0aWFsaXplR2FtZSh7IGdhbWUsIG51bVBsYXllcnMsIHNldHVwRGF0YSB9KTtcclxuICAgIHJldHVybiB7IG1ldGFkYXRhLCBpbml0aWFsU3RhdGUgfTtcclxufTtcblxuZXhwb3J0IHsgQXN5bmMgYXMgQSwgU3luYyBhcyBTLCBjcmVhdGVNYXRjaCBhcyBjLCBpc1N5bmNocm9ub3VzIGFzIGkgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/boardgame.io/dist/esm/util-b1699aa1.js\n"));

/***/ }),

/***/ "./node_modules/lodash.isplainobject/index.js":
/*!****************************************************!*\
  !*** ./node_modules/lodash.isplainobject/index.js ***!
  \****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) ||\n      objectToString.call(value) != objectTag || isHostObject(value)) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nmodule.exports = isPlainObject;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoLmlzcGxhaW5vYmplY3QvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxHQUFHO0FBQ2QsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxVQUFVO0FBQ3JCLFdBQVcsVUFBVTtBQUNyQixhQUFhLFVBQVU7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxHQUFHO0FBQ2QsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxHQUFHO0FBQ2QsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixnQkFBZ0I7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2guaXNwbGFpbm9iamVjdC9pbmRleC5qcz8zMWY3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogbG9kYXNoIChDdXN0b20gQnVpbGQpIDxodHRwczovL2xvZGFzaC5jb20vPlxuICogQnVpbGQ6IGBsb2Rhc2ggbW9kdWxhcml6ZSBleHBvcnRzPVwibnBtXCIgLW8gLi9gXG4gKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycyA8aHR0cHM6Ly9qcXVlcnkub3JnLz5cbiAqIFJlbGVhc2VkIHVuZGVyIE1JVCBsaWNlbnNlIDxodHRwczovL2xvZGFzaC5jb20vbGljZW5zZT5cbiAqIEJhc2VkIG9uIFVuZGVyc2NvcmUuanMgMS44LjMgPGh0dHA6Ly91bmRlcnNjb3JlanMub3JnL0xJQ0VOU0U+XG4gKiBDb3B5cmlnaHQgSmVyZW15IEFzaGtlbmFzLCBEb2N1bWVudENsb3VkIGFuZCBJbnZlc3RpZ2F0aXZlIFJlcG9ydGVycyAmIEVkaXRvcnNcbiAqL1xuXG4vKiogYE9iamVjdCN0b1N0cmluZ2AgcmVzdWx0IHJlZmVyZW5jZXMuICovXG52YXIgb2JqZWN0VGFnID0gJ1tvYmplY3QgT2JqZWN0XSc7XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgYSBob3N0IG9iamVjdCBpbiBJRSA8IDkuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSBob3N0IG9iamVjdCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBpc0hvc3RPYmplY3QodmFsdWUpIHtcbiAgLy8gTWFueSBob3N0IG9iamVjdHMgYXJlIGBPYmplY3RgIG9iamVjdHMgdGhhdCBjYW4gY29lcmNlIHRvIHN0cmluZ3NcbiAgLy8gZGVzcGl0ZSBoYXZpbmcgaW1wcm9wZXJseSBkZWZpbmVkIGB0b1N0cmluZ2AgbWV0aG9kcy5cbiAgdmFyIHJlc3VsdCA9IGZhbHNlO1xuICBpZiAodmFsdWUgIT0gbnVsbCAmJiB0eXBlb2YgdmFsdWUudG9TdHJpbmcgIT0gJ2Z1bmN0aW9uJykge1xuICAgIHRyeSB7XG4gICAgICByZXN1bHQgPSAhISh2YWx1ZSArICcnKTtcbiAgICB9IGNhdGNoIChlKSB7fVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbi8qKlxuICogQ3JlYXRlcyBhIHVuYXJ5IGZ1bmN0aW9uIHRoYXQgaW52b2tlcyBgZnVuY2Agd2l0aCBpdHMgYXJndW1lbnQgdHJhbnNmb3JtZWQuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZ1bmMgVGhlIGZ1bmN0aW9uIHRvIHdyYXAuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSB0cmFuc2Zvcm0gVGhlIGFyZ3VtZW50IHRyYW5zZm9ybS5cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IGZ1bmN0aW9uLlxuICovXG5mdW5jdGlvbiBvdmVyQXJnKGZ1bmMsIHRyYW5zZm9ybSkge1xuICByZXR1cm4gZnVuY3Rpb24oYXJnKSB7XG4gICAgcmV0dXJuIGZ1bmModHJhbnNmb3JtKGFyZykpO1xuICB9O1xufVxuXG4vKiogVXNlZCBmb3IgYnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMuICovXG52YXIgZnVuY1Byb3RvID0gRnVuY3Rpb24ucHJvdG90eXBlLFxuICAgIG9iamVjdFByb3RvID0gT2JqZWN0LnByb3RvdHlwZTtcblxuLyoqIFVzZWQgdG8gcmVzb2x2ZSB0aGUgZGVjb21waWxlZCBzb3VyY2Ugb2YgZnVuY3Rpb25zLiAqL1xudmFyIGZ1bmNUb1N0cmluZyA9IGZ1bmNQcm90by50b1N0cmluZztcblxuLyoqIFVzZWQgdG8gY2hlY2sgb2JqZWN0cyBmb3Igb3duIHByb3BlcnRpZXMuICovXG52YXIgaGFzT3duUHJvcGVydHkgPSBvYmplY3RQcm90by5oYXNPd25Qcm9wZXJ0eTtcblxuLyoqIFVzZWQgdG8gaW5mZXIgdGhlIGBPYmplY3RgIGNvbnN0cnVjdG9yLiAqL1xudmFyIG9iamVjdEN0b3JTdHJpbmcgPSBmdW5jVG9TdHJpbmcuY2FsbChPYmplY3QpO1xuXG4vKipcbiAqIFVzZWQgdG8gcmVzb2x2ZSB0aGVcbiAqIFtgdG9TdHJpbmdUYWdgXShodHRwOi8vZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy1vYmplY3QucHJvdG90eXBlLnRvc3RyaW5nKVxuICogb2YgdmFsdWVzLlxuICovXG52YXIgb2JqZWN0VG9TdHJpbmcgPSBvYmplY3RQcm90by50b1N0cmluZztcblxuLyoqIEJ1aWx0LWluIHZhbHVlIHJlZmVyZW5jZXMuICovXG52YXIgZ2V0UHJvdG90eXBlID0gb3ZlckFyZyhPYmplY3QuZ2V0UHJvdG90eXBlT2YsIE9iamVjdCk7XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgb2JqZWN0LWxpa2UuIEEgdmFsdWUgaXMgb2JqZWN0LWxpa2UgaWYgaXQncyBub3QgYG51bGxgXG4gKiBhbmQgaGFzIGEgYHR5cGVvZmAgcmVzdWx0IG9mIFwib2JqZWN0XCIuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSA0LjAuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgb2JqZWN0LWxpa2UsIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogXy5pc09iamVjdExpa2Uoe30pO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNPYmplY3RMaWtlKFsxLCAyLCAzXSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc09iamVjdExpa2UoXy5ub29wKTtcbiAqIC8vID0+IGZhbHNlXG4gKlxuICogXy5pc09iamVjdExpa2UobnVsbCk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBpc09iamVjdExpa2UodmFsdWUpIHtcbiAgcmV0dXJuICEhdmFsdWUgJiYgdHlwZW9mIHZhbHVlID09ICdvYmplY3QnO1xufVxuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGEgcGxhaW4gb2JqZWN0LCB0aGF0IGlzLCBhbiBvYmplY3QgY3JlYXRlZCBieSB0aGVcbiAqIGBPYmplY3RgIGNvbnN0cnVjdG9yIG9yIG9uZSB3aXRoIGEgYFtbUHJvdG90eXBlXV1gIG9mIGBudWxsYC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDAuOC4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIHBsYWluIG9iamVjdCwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBmdW5jdGlvbiBGb28oKSB7XG4gKiAgIHRoaXMuYSA9IDE7XG4gKiB9XG4gKlxuICogXy5pc1BsYWluT2JqZWN0KG5ldyBGb28pO1xuICogLy8gPT4gZmFsc2VcbiAqXG4gKiBfLmlzUGxhaW5PYmplY3QoWzEsIDIsIDNdKTtcbiAqIC8vID0+IGZhbHNlXG4gKlxuICogXy5pc1BsYWluT2JqZWN0KHsgJ3gnOiAwLCAneSc6IDAgfSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc1BsYWluT2JqZWN0KE9iamVjdC5jcmVhdGUobnVsbCkpO1xuICogLy8gPT4gdHJ1ZVxuICovXG5mdW5jdGlvbiBpc1BsYWluT2JqZWN0KHZhbHVlKSB7XG4gIGlmICghaXNPYmplY3RMaWtlKHZhbHVlKSB8fFxuICAgICAgb2JqZWN0VG9TdHJpbmcuY2FsbCh2YWx1ZSkgIT0gb2JqZWN0VGFnIHx8IGlzSG9zdE9iamVjdCh2YWx1ZSkpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgdmFyIHByb3RvID0gZ2V0UHJvdG90eXBlKHZhbHVlKTtcbiAgaWYgKHByb3RvID09PSBudWxsKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgdmFyIEN0b3IgPSBoYXNPd25Qcm9wZXJ0eS5jYWxsKHByb3RvLCAnY29uc3RydWN0b3InKSAmJiBwcm90by5jb25zdHJ1Y3RvcjtcbiAgcmV0dXJuICh0eXBlb2YgQ3RvciA9PSAnZnVuY3Rpb24nICYmXG4gICAgQ3RvciBpbnN0YW5jZW9mIEN0b3IgJiYgZnVuY1RvU3RyaW5nLmNhbGwoQ3RvcikgPT0gb2JqZWN0Q3RvclN0cmluZyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaXNQbGFpbk9iamVjdDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lodash.isplainobject/index.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=C%3A%5CUsers%5Cryanm%5CDocuments%5CProjects%5Cair-land-sea%5Csrc%5Cpages%5Cindex.tsx&page=%2F!":
/*!**************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=C%3A%5CUsers%5Cryanm%5CDocuments%5CProjects%5Cair-land-sea%5Csrc%5Cpages%5Cindex.tsx&page=%2F! ***!
  \**************************************************************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return __webpack_require__(/*! ./src/pages/index.tsx */ \"./src/pages/index.tsx\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWNsaWVudC1wYWdlcy1sb2FkZXIuanM/YWJzb2x1dGVQYWdlUGF0aD1DJTNBJTVDVXNlcnMlNUNyeWFubSU1Q0RvY3VtZW50cyU1Q1Byb2plY3RzJTVDYWlyLWxhbmQtc2VhJTVDc3JjJTVDcGFnZXMlNUNpbmRleC50c3gmcGFnZT0lMkYhLmpzIiwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG1CQUFPLENBQUMsb0RBQXVCO0FBQzlDO0FBQ0E7QUFDQSxPQUFPLElBQVU7QUFDakIsTUFBTSxVQUFVO0FBQ2hCO0FBQ0EsT0FBTztBQUNQO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLz83MDFiIl0sInNvdXJjZXNDb250ZW50IjpbIlxuICAgICh3aW5kb3cuX19ORVhUX1AgPSB3aW5kb3cuX19ORVhUX1AgfHwgW10pLnB1c2goW1xuICAgICAgXCIvXCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiByZXF1aXJlKFwiLi9zcmMvcGFnZXMvaW5kZXgudHN4XCIpO1xuICAgICAgfVxuICAgIF0pO1xuICAgIGlmKG1vZHVsZS5ob3QpIHtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbiAoKSB7XG4gICAgICAgIHdpbmRvdy5fX05FWFRfUC5wdXNoKFtcIi9cIl0pXG4gICAgICB9KTtcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=C%3A%5CUsers%5Cryanm%5CDocuments%5CProjects%5Cair-land-sea%5Csrc%5Cpages%5Cindex.tsx&page=%2F!\n"));

/***/ }),

/***/ "./src/components/board/Board.tsx":
/*!****************************************!*\
  !*** ./src/components/board/Board.tsx ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BoardContext\": function() { return /* binding */ BoardContext; },\n/* harmony export */   \"useBoardContext\": function() { return /* binding */ useBoardContext; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _Hand__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Hand */ \"./src/components/board/Hand.tsx\");\n/* harmony import */ var _TheaterRow__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./TheaterRow */ \"./src/components/board/TheaterRow.tsx\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @chakra-ui/react */ \"./node_modules/@chakra-ui/react/dist/chakra-ui-react.esm.js\");\n/* harmony import */ var _Controls__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Controls */ \"./src/components/board/Controls.tsx\");\n/* harmony import */ var _HelpText__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./HelpText */ \"./src/components/board/HelpText.tsx\");\nvar _this = undefined;\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\n\n\n\nvar BoardContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({});\nvar useBoardContext = function() {\n    _s();\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(BoardContext);\n};\n_s(useBoardContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar Board = function(boardProps) {\n    _s1();\n    var ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\"), activeCardDesc = ref[0], setActiveCardDesc = ref[1];\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(BoardContext.Provider, {\n        value: boardProps,\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_6__.VStack, {\n            h: \"100vh\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_6__.Flex, {\n                    h: \"10%\",\n                    gap: \"3px\",\n                    alignItems: \"center\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Hand__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                        type: \"opponent\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Board.tsx\",\n                        lineNumber: 20,\n                        columnNumber: 11\n                    }, _this)\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Board.tsx\",\n                    lineNumber: 19,\n                    columnNumber: 9\n                }, _this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_6__.Box, {\n                    h: \"60%\",\n                    w: \"100%\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_TheaterRow__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                        setDesc: setActiveCardDesc\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Board.tsx\",\n                        lineNumber: 23,\n                        columnNumber: 11\n                    }, _this)\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Board.tsx\",\n                    lineNumber: 22,\n                    columnNumber: 9\n                }, _this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_6__.Grid, {\n                    h: \"30%\",\n                    w: \"100%\",\n                    templateColumns: \"repeat(4, 1fr)\",\n                    gap: 4,\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_6__.GridItem, {\n                            h: \"100%\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_6__.Flex, {\n                                h: \"100%\",\n                                alignItems: \"center\",\n                                justifyContent: \"center\",\n                                gap: \"3px\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Controls__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {}, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Board.tsx\",\n                                    lineNumber: 33,\n                                    columnNumber: 15\n                                }, _this)\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Board.tsx\",\n                                lineNumber: 27,\n                                columnNumber: 13\n                            }, _this)\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Board.tsx\",\n                            lineNumber: 26,\n                            columnNumber: 11\n                        }, _this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_6__.GridItem, {\n                            colSpan: 2,\n                            h: \"100%\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_HelpText__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {}, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Board.tsx\",\n                                    lineNumber: 37,\n                                    columnNumber: 13\n                                }, _this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_6__.Flex, {\n                                    alignItems: \"center\",\n                                    justifyContent: \"center\",\n                                    gap: \"3px\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Hand__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                                        type: \"self\",\n                                        setDesc: setActiveCardDesc\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Board.tsx\",\n                                        lineNumber: 39,\n                                        columnNumber: 15\n                                    }, _this)\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Board.tsx\",\n                                    lineNumber: 38,\n                                    columnNumber: 13\n                                }, _this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Board.tsx\",\n                            lineNumber: 36,\n                            columnNumber: 11\n                        }, _this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_6__.GridItem, {\n                            h: \"100%\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_6__.Flex, {\n                                h: \"100%\",\n                                alignItems: \"center\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_6__.Text, {\n                                    children: activeCardDesc\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Board.tsx\",\n                                    lineNumber: 44,\n                                    columnNumber: 15\n                                }, _this)\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Board.tsx\",\n                                lineNumber: 43,\n                                columnNumber: 13\n                            }, _this)\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Board.tsx\",\n                            lineNumber: 42,\n                            columnNumber: 11\n                        }, _this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Board.tsx\",\n                    lineNumber: 25,\n                    columnNumber: 9\n                }, _this)\n            ]\n        }, void 0, true, {\n            fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Board.tsx\",\n            lineNumber: 18,\n            columnNumber: 7\n        }, _this)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Board.tsx\",\n        lineNumber: 17,\n        columnNumber: 5\n    }, _this);\n};\n_s1(Board, \"v2x6wirwKCy++9DuW8s383qRkbI=\");\n_c = Board;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Board);\nvar _c;\n$RefreshReg$(_c, \"Board\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9ib2FyZC9Cb2FyZC50c3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7O0FBQTREO0FBR2xDO0FBQ1k7QUFDcUM7QUFDekM7QUFDQTtBQUUzQixJQUFNYSxZQUFZLGlCQUFHWixvREFBYSxDQUFDLEVBQUUsQ0FBMEIsQ0FBQztBQUNoRSxJQUFNYSxlQUFlLEdBQUcsV0FBTWQ7O0lBQUFBLE9BQUFBLGlEQUFVLENBQUNhLFlBQVksQ0FBQztBQUFELENBQUMsQ0FBQztHQUFqREMsZUFBZTtBQUU1QixJQUFNQyxLQUFLLEdBQUcsU0FBQ0MsVUFBaUMsRUFBa0I7O0lBQ2hFLElBQTRDZCxHQUFZLEdBQVpBLCtDQUFRLENBQUMsRUFBRSxDQUFDLEVBQWpEZSxjQUFjLEdBQXVCZixHQUFZLEdBQW5DLEVBQUVnQixpQkFBaUIsR0FBSWhCLEdBQVksR0FBaEI7SUFFeEMscUJBQ0UsOERBQUNXLFlBQVksQ0FBQ00sUUFBUTtRQUFDQyxLQUFLLEVBQUVKLFVBQVU7a0JBQ3RDLDRFQUFDVixvREFBTTtZQUFDZSxDQUFDLEVBQUMsT0FBTzs7OEJBQ2YsOERBQUNkLGtEQUFJO29CQUFDYyxDQUFDLEVBQUMsS0FBSztvQkFBQ0MsR0FBRyxFQUFDLEtBQUs7b0JBQUNDLFVBQVUsRUFBQyxRQUFROzhCQUN6Qyw0RUFBQ3BCLDZDQUFJO3dCQUFDcUIsSUFBSSxFQUFDLFVBQVU7Ozs7OzZCQUFHOzs7Ozt5QkFDbkI7OEJBQ1AsOERBQUNuQixpREFBRztvQkFBQ2dCLENBQUMsRUFBQyxLQUFLO29CQUFDSSxDQUFDLEVBQUMsTUFBTTs4QkFDbkIsNEVBQUNyQixtREFBVTt3QkFBQ3NCLE9BQU8sRUFBRVIsaUJBQWlCOzs7Ozs2QkFBSTs7Ozs7eUJBQ3RDOzhCQUNOLDhEQUFDVCxrREFBSTtvQkFBQ1ksQ0FBQyxFQUFDLEtBQUs7b0JBQUNJLENBQUMsRUFBQyxNQUFNO29CQUFDRSxlQUFlLEVBQUMsZ0JBQWdCO29CQUFDTCxHQUFHLEVBQUUsQ0FBQzs7c0NBQzVELDhEQUFDWixzREFBUTs0QkFBQ1csQ0FBQyxFQUFDLE1BQU07c0NBQ2hCLDRFQUFDZCxrREFBSTtnQ0FDSGMsQ0FBQyxFQUFDLE1BQU07Z0NBQ1JFLFVBQVUsRUFBQyxRQUFRO2dDQUNuQkssY0FBYyxFQUFDLFFBQVE7Z0NBQ3ZCTixHQUFHLEVBQUMsS0FBSzswQ0FFVCw0RUFBQ1gsaURBQVE7Ozs7eUNBQUc7Ozs7O3FDQUNQOzs7OztpQ0FDRTtzQ0FDWCw4REFBQ0Qsc0RBQVE7NEJBQUNtQixPQUFPLEVBQUUsQ0FBQzs0QkFBRVIsQ0FBQyxFQUFDLE1BQU07OzhDQUM1Qiw4REFBQ1QsaURBQVE7Ozs7eUNBQUc7OENBQ1osOERBQUNMLGtEQUFJO29DQUFDZ0IsVUFBVSxFQUFDLFFBQVE7b0NBQUNLLGNBQWMsRUFBQyxRQUFRO29DQUFDTixHQUFHLEVBQUMsS0FBSzs4Q0FDekQsNEVBQUNuQiw2Q0FBSTt3Q0FBQ3FCLElBQUksRUFBQyxNQUFNO3dDQUFDRSxPQUFPLEVBQUVSLGlCQUFpQjs7Ozs7NkNBQUk7Ozs7O3lDQUMzQzs7Ozs7O2lDQUNFO3NDQUNYLDhEQUFDUixzREFBUTs0QkFBQ1csQ0FBQyxFQUFDLE1BQU07c0NBQ2hCLDRFQUFDZCxrREFBSTtnQ0FBQ2MsQ0FBQyxFQUFDLE1BQU07Z0NBQUNFLFVBQVUsRUFBQyxRQUFROzBDQUNoQyw0RUFBQ2Ysa0RBQUk7OENBQUVTLGNBQWM7Ozs7O3lDQUFROzs7OztxQ0FDeEI7Ozs7O2lDQUNFOzs7Ozs7eUJBQ047Ozs7OztpQkFDQTs7Ozs7YUFDYSxDQUN4QjtBQUNKLENBQUM7SUF0Q0tGLEtBQUs7QUFBTEEsS0FBQUEsS0FBSztBQXdDWCwrREFBZUEsS0FBSyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9jb21wb25lbnRzL2JvYXJkL0JvYXJkLnRzeD81NDY4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUNvbnRleHQsIGNyZWF0ZUNvbnRleHQsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyBCb2FyZFByb3BzIH0gZnJvbSAnYm9hcmRnYW1lLmlvL3JlYWN0JztcclxuaW1wb3J0IHsgR2FtZVN0YXRlIH0gZnJvbSAnLi4vLi4vZ2FtZS9nYW1lVHlwZXMnO1xyXG5pbXBvcnQgSGFuZCBmcm9tICcuL0hhbmQnO1xyXG5pbXBvcnQgVGhlYXRlclJvdyBmcm9tICcuL1RoZWF0ZXJSb3cnO1xyXG5pbXBvcnQgeyBCb3gsIFZTdGFjaywgRmxleCwgVGV4dCwgR3JpZCwgR3JpZEl0ZW0gfSBmcm9tICdAY2hha3JhLXVpL3JlYWN0JztcclxuaW1wb3J0IENvbnRyb2xzIGZyb20gJy4vQ29udHJvbHMnO1xyXG5pbXBvcnQgSGVscFRleHQgZnJvbSAnLi9IZWxwVGV4dCc7XHJcblxyXG5leHBvcnQgY29uc3QgQm9hcmRDb250ZXh0ID0gY3JlYXRlQ29udGV4dCh7fSBhcyBCb2FyZFByb3BzPEdhbWVTdGF0ZT4pO1xyXG5leHBvcnQgY29uc3QgdXNlQm9hcmRDb250ZXh0ID0gKCkgPT4gdXNlQ29udGV4dChCb2FyZENvbnRleHQpO1xyXG5cclxuY29uc3QgQm9hcmQgPSAoYm9hcmRQcm9wczogQm9hcmRQcm9wczxHYW1lU3RhdGU+KTogSlNYLkVsZW1lbnQgPT4ge1xyXG4gIGNvbnN0IFthY3RpdmVDYXJkRGVzYywgc2V0QWN0aXZlQ2FyZERlc2NdID0gdXNlU3RhdGUoJycpO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPEJvYXJkQ29udGV4dC5Qcm92aWRlciB2YWx1ZT17Ym9hcmRQcm9wc30+XHJcbiAgICAgIDxWU3RhY2sgaD1cIjEwMHZoXCI+XHJcbiAgICAgICAgPEZsZXggaD1cIjEwJVwiIGdhcD1cIjNweFwiIGFsaWduSXRlbXM9XCJjZW50ZXJcIj5cclxuICAgICAgICAgIDxIYW5kIHR5cGU9XCJvcHBvbmVudFwiIC8+XHJcbiAgICAgICAgPC9GbGV4PlxyXG4gICAgICAgIDxCb3ggaD1cIjYwJVwiIHc9XCIxMDAlXCI+XHJcbiAgICAgICAgICA8VGhlYXRlclJvdyBzZXREZXNjPXtzZXRBY3RpdmVDYXJkRGVzY30gLz5cclxuICAgICAgICA8L0JveD5cclxuICAgICAgICA8R3JpZCBoPVwiMzAlXCIgdz1cIjEwMCVcIiB0ZW1wbGF0ZUNvbHVtbnM9XCJyZXBlYXQoNCwgMWZyKVwiIGdhcD17NH0+XHJcbiAgICAgICAgICA8R3JpZEl0ZW0gaD1cIjEwMCVcIj5cclxuICAgICAgICAgICAgPEZsZXhcclxuICAgICAgICAgICAgICBoPVwiMTAwJVwiXHJcbiAgICAgICAgICAgICAgYWxpZ25JdGVtcz1cImNlbnRlclwiXHJcbiAgICAgICAgICAgICAganVzdGlmeUNvbnRlbnQ9XCJjZW50ZXJcIlxyXG4gICAgICAgICAgICAgIGdhcD1cIjNweFwiXHJcbiAgICAgICAgICAgID5cclxuICAgICAgICAgICAgICA8Q29udHJvbHMgLz5cclxuICAgICAgICAgICAgPC9GbGV4PlxyXG4gICAgICAgICAgPC9HcmlkSXRlbT5cclxuICAgICAgICAgIDxHcmlkSXRlbSBjb2xTcGFuPXsyfSBoPVwiMTAwJVwiPlxyXG4gICAgICAgICAgICA8SGVscFRleHQgLz5cclxuICAgICAgICAgICAgPEZsZXggYWxpZ25JdGVtcz1cImNlbnRlclwiIGp1c3RpZnlDb250ZW50PVwiY2VudGVyXCIgZ2FwPVwiM3B4XCI+XHJcbiAgICAgICAgICAgICAgPEhhbmQgdHlwZT1cInNlbGZcIiBzZXREZXNjPXtzZXRBY3RpdmVDYXJkRGVzY30gLz5cclxuICAgICAgICAgICAgPC9GbGV4PlxyXG4gICAgICAgICAgPC9HcmlkSXRlbT5cclxuICAgICAgICAgIDxHcmlkSXRlbSBoPVwiMTAwJVwiPlxyXG4gICAgICAgICAgICA8RmxleCBoPVwiMTAwJVwiIGFsaWduSXRlbXM9XCJjZW50ZXJcIj5cclxuICAgICAgICAgICAgICA8VGV4dD57YWN0aXZlQ2FyZERlc2N9PC9UZXh0PlxyXG4gICAgICAgICAgICA8L0ZsZXg+XHJcbiAgICAgICAgICA8L0dyaWRJdGVtPlxyXG4gICAgICAgIDwvR3JpZD5cclxuICAgICAgPC9WU3RhY2s+XHJcbiAgICA8L0JvYXJkQ29udGV4dC5Qcm92aWRlcj5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgQm9hcmQ7XHJcbiJdLCJuYW1lcyI6WyJ1c2VDb250ZXh0IiwiY3JlYXRlQ29udGV4dCIsInVzZVN0YXRlIiwiSGFuZCIsIlRoZWF0ZXJSb3ciLCJCb3giLCJWU3RhY2siLCJGbGV4IiwiVGV4dCIsIkdyaWQiLCJHcmlkSXRlbSIsIkNvbnRyb2xzIiwiSGVscFRleHQiLCJCb2FyZENvbnRleHQiLCJ1c2VCb2FyZENvbnRleHQiLCJCb2FyZCIsImJvYXJkUHJvcHMiLCJhY3RpdmVDYXJkRGVzYyIsInNldEFjdGl2ZUNhcmREZXNjIiwiUHJvdmlkZXIiLCJ2YWx1ZSIsImgiLCJnYXAiLCJhbGlnbkl0ZW1zIiwidHlwZSIsInciLCJzZXREZXNjIiwidGVtcGxhdGVDb2x1bW5zIiwianVzdGlmeUNvbnRlbnQiLCJjb2xTcGFuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/components/board/Board.tsx\n"));

/***/ }),

/***/ "./src/components/board/Card.tsx":
/*!***************************************!*\
  !*** ./src/components/board/Card.tsx ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @swc/helpers/src/_tagged_template_literal.mjs */ \"./node_modules/@swc/helpers/src/_tagged_template_literal.mjs\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @chakra-ui/react */ \"./node_modules/@chakra-ui/react/dist/chakra-ui-react.esm.js\");\n/* harmony import */ var config_theme__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! config/theme */ \"./src/config/theme.ts\");\n/* harmony import */ var _Board__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Board */ \"./src/components/board/Board.tsx\");\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @emotion/react */ \"./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n\nvar _this = undefined;\nfunction _templateObject() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])([\n        \"\\n        transition-duration: 0.3s;\\n        transition-property: transform;\\n        &:hover {\\n          transform: scale(1.1);\\n        }\\n      \"\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\nvar _s = $RefreshSig$();\n\n\n\n\nvar Card = function(param) {\n    var card = param.card, deployed = param.deployed, setDesc = param.setDesc;\n    var getCardId = function getCardId() {\n        return G.players[Number(playerID)].cards.findIndex(function(c) {\n            return c.cardID === card.cardID;\n        });\n    };\n    _s();\n    var ref = (0,_Board__WEBPACK_IMPORTED_MODULE_3__.useBoardContext)(), G = ref.G, moves = ref.moves, playerID = ref.playerID;\n    var cardInfo = card.cardInfo, strength = card.strength, faceDown = card.faceDown;\n    var name = cardInfo.name, desc = cardInfo.desc, theater = cardInfo.theater;\n    var cardDisplay = faceDown ? strength : \"\".concat(strength, \" \").concat(name);\n    var description = deployed === \"opponent\" && faceDown ? \"\" : \"\".concat(name, \" (\").concat(strength, \"): \").concat(desc);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__.Box, {\n        w: \"75px\",\n        h: \"125px\",\n        bg: faceDown ? config_theme__WEBPACK_IMPORTED_MODULE_2__.theme.faceDown : config_theme__WEBPACK_IMPORTED_MODULE_2__.theme[theater],\n        border: \"2px solid black\",\n        color: \"white\",\n        borderRadius: \"10%\",\n        cursor: \"pointer\",\n        marginRight: deployed != null ? \"-50px\" : \"0\",\n        onClick: !deployed ? function() {\n            return moves.selectCard(getCardId());\n        } : undefined,\n        tabIndex: 0,\n        css: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_5__.css)(_templateObject()),\n        onMouseOver: function() {\n            return setDesc ? setDesc(description) : undefined;\n        },\n        onMouseOut: function() {\n            return setDesc ? setDesc(\"\") : undefined;\n        },\n        children: cardDisplay\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Card.tsx\",\n        lineNumber: 30,\n        columnNumber: 5\n    }, _this);\n};\n_s(Card, \"fNNFxL4+Y6kwYyNSUa1wRELsRuY=\", false, function() {\n    return [\n        _Board__WEBPACK_IMPORTED_MODULE_3__.useBoardContext\n    ];\n});\n_c = Card;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Card);\nvar _c;\n$RefreshReg$(_c, \"Card\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9ib2FyZC9DYXJkLnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7O0FBQXVDO0FBQ0Y7QUFFSztBQUNMO0FBUXJDLElBQU1JLElBQUksR0FBRyxnQkFBd0M7UUFBckNDLElBQUksU0FBSkEsSUFBSSxFQUFFQyxRQUFRLFNBQVJBLFFBQVEsRUFBRUMsT0FBTyxTQUFQQSxPQUFPO1FBTzVCQyxTQUFTLEdBQWxCLFNBQVNBLFNBQVMsR0FBVztRQUMzQixPQUFPQyxDQUFDLENBQUNDLE9BQU8sQ0FBQ0MsTUFBTSxDQUFDQyxRQUFRLENBQUMsQ0FBQyxDQUFDQyxLQUFLLENBQUNDLFNBQVMsQ0FDaEQsU0FBQ0MsQ0FBQzttQkFBS0EsQ0FBQyxDQUFDQyxNQUFNLEtBQUtYLElBQUksQ0FBQ1csTUFBTTtTQUFBLENBQ2hDLENBQUM7SUFDSixDQUFDOztJQVZELElBQStCZCxHQUFpQixHQUFqQkEsdURBQWUsRUFBRSxFQUF4Q08sQ0FBQyxHQUFzQlAsR0FBaUIsQ0FBeENPLENBQUMsRUFBRVEsS0FBSyxHQUFlZixHQUFpQixDQUFyQ2UsS0FBSyxFQUFFTCxRQUFRLEdBQUtWLEdBQWlCLENBQTlCVSxRQUFRO0lBQzFCLElBQVFNLFFBQVEsR0FBeUJiLElBQUksQ0FBckNhLFFBQVEsRUFBRUMsUUFBUSxHQUFlZCxJQUFJLENBQTNCYyxRQUFRLEVBQUVDLFFBQVEsR0FBS2YsSUFBSSxDQUFqQmUsUUFBUTtJQUNwQyxJQUFRQyxJQUFJLEdBQW9CSCxRQUFRLENBQWhDRyxJQUFJLEVBQUVDLElBQUksR0FBY0osUUFBUSxDQUExQkksSUFBSSxFQUFFQyxPQUFPLEdBQUtMLFFBQVEsQ0FBcEJLLE9BQU87SUFFM0IsSUFBTUMsV0FBVyxHQUFHSixRQUFRLEdBQUdELFFBQVEsR0FBRyxFQUFDLENBQWNFLE1BQUksQ0FBaEJGLFFBQVEsRUFBQyxHQUFDLENBQU8sUUFBTEUsSUFBSSxDQUFFO0lBUS9ELElBQU1JLFdBQVcsR0FDZm5CLFFBQVEsS0FBSyxVQUFVLElBQUljLFFBQVEsR0FBRyxFQUFFLEdBQUcsRUFBQyxDQUFXRCxNQUFRLENBQWpCRSxJQUFJLEVBQUMsSUFBRSxDQUFXLENBQUtDLE1BQUksQ0FBbEJILFFBQVEsRUFBQyxLQUFHLENBQU8sUUFBTEcsSUFBSSxDQUFFO0lBRTdFLHFCQUNFLDhEQUFDdEIsaURBQUc7UUFDRjBCLENBQUMsRUFBQyxNQUFNO1FBQ1JDLENBQUMsRUFBQyxPQUFPO1FBQ1RDLEVBQUUsRUFBRVIsUUFBUSxHQUFHbkIsd0RBQWlCLEdBQUdBLCtDQUFLLENBQUNzQixPQUFPLENBQUM7UUFDakRNLE1BQU0sRUFBQyxpQkFBaUI7UUFDeEJDLEtBQUssRUFBQyxPQUFPO1FBQ2JDLFlBQVksRUFBQyxLQUFLO1FBQ2xCQyxNQUFNLEVBQUMsU0FBUztRQUNoQkMsV0FBVyxFQUFFM0IsUUFBUSxJQUFJLElBQUksR0FBRyxPQUFPLEdBQUcsR0FBRztRQUM3QzRCLE9BQU8sRUFBRSxDQUFDNUIsUUFBUSxHQUFHO21CQUFNVyxLQUFLLENBQUNrQixVQUFVLENBQUMzQixTQUFTLEVBQUUsQ0FBQztTQUFBLEdBQUc0QixTQUFTO1FBQ3BFQyxRQUFRLEVBQUUsQ0FBQztRQUNYbEMsR0FBRyxFQUFFQSxtREFBRztRQU9SbUMsV0FBVyxFQUFFO21CQUFPL0IsT0FBTyxHQUFHQSxPQUFPLENBQUNrQixXQUFXLENBQUMsR0FBR1csU0FBUztTQUFDO1FBQy9ERyxVQUFVLEVBQUU7bUJBQU9oQyxPQUFPLEdBQUdBLE9BQU8sQ0FBQyxFQUFFLENBQUMsR0FBRzZCLFNBQVM7U0FBQztrQkFFcERaLFdBQVc7Ozs7O2FBQ1IsQ0FDTjtBQUNKLENBQUM7R0F6Q0twQixJQUFJOztRQUN1QkYsbURBQWU7OztBQUQxQ0UsS0FBQUEsSUFBSTtBQTJDViwrREFBZUEsSUFBSSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9jb21wb25lbnRzL2JvYXJkL0NhcmQudHN4PzRiNjIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQm94IH0gZnJvbSAnQGNoYWtyYS11aS9yZWFjdCc7XHJcbmltcG9ydCB7IHRoZW1lIH0gZnJvbSAnY29uZmlnL3RoZW1lJztcclxuaW1wb3J0IHsgQ2FyZCBhcyBHYW1lQ2FyZCB9IGZyb20gJ2dhbWUvY2FyZHMnO1xyXG5pbXBvcnQgeyB1c2VCb2FyZENvbnRleHQgfSBmcm9tICcuL0JvYXJkJztcclxuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xyXG5cclxuaW50ZXJmYWNlIFByb3BzIHtcclxuICBjYXJkOiBHYW1lQ2FyZDtcclxuICBkZXBsb3llZD86ICdzZWxmJyB8ICdvcHBvbmVudCc7XHJcbiAgc2V0RGVzYz86IChkZXNjOiBzdHJpbmcpID0+IHZvaWQ7XHJcbn1cclxuXHJcbmNvbnN0IENhcmQgPSAoeyBjYXJkLCBkZXBsb3llZCwgc2V0RGVzYyB9OiBQcm9wcykgPT4ge1xyXG4gIGNvbnN0IHsgRywgbW92ZXMsIHBsYXllcklEIH0gPSB1c2VCb2FyZENvbnRleHQoKTtcclxuICBjb25zdCB7IGNhcmRJbmZvLCBzdHJlbmd0aCwgZmFjZURvd24gfSA9IGNhcmQ7XHJcbiAgY29uc3QgeyBuYW1lLCBkZXNjLCB0aGVhdGVyIH0gPSBjYXJkSW5mbztcclxuXHJcbiAgY29uc3QgY2FyZERpc3BsYXkgPSBmYWNlRG93biA/IHN0cmVuZ3RoIDogYCR7c3RyZW5ndGh9ICR7bmFtZX1gO1xyXG5cclxuICBmdW5jdGlvbiBnZXRDYXJkSWQoKTogbnVtYmVyIHtcclxuICAgIHJldHVybiBHLnBsYXllcnNbTnVtYmVyKHBsYXllcklEKV0uY2FyZHMuZmluZEluZGV4KFxyXG4gICAgICAoYykgPT4gYy5jYXJkSUQgPT09IGNhcmQuY2FyZElELFxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIGNvbnN0IGRlc2NyaXB0aW9uID1cclxuICAgIGRlcGxveWVkID09PSAnb3Bwb25lbnQnICYmIGZhY2VEb3duID8gJycgOiBgJHtuYW1lfSAoJHtzdHJlbmd0aH0pOiAke2Rlc2N9YDtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxCb3hcclxuICAgICAgdz1cIjc1cHhcIlxyXG4gICAgICBoPVwiMTI1cHhcIlxyXG4gICAgICBiZz17ZmFjZURvd24gPyB0aGVtZVsnZmFjZURvd24nXSA6IHRoZW1lW3RoZWF0ZXJdfVxyXG4gICAgICBib3JkZXI9XCIycHggc29saWQgYmxhY2tcIlxyXG4gICAgICBjb2xvcj1cIndoaXRlXCJcclxuICAgICAgYm9yZGVyUmFkaXVzPVwiMTAlXCJcclxuICAgICAgY3Vyc29yPVwicG9pbnRlclwiXHJcbiAgICAgIG1hcmdpblJpZ2h0PXtkZXBsb3llZCAhPSBudWxsID8gJy01MHB4JyA6ICcwJ31cclxuICAgICAgb25DbGljaz17IWRlcGxveWVkID8gKCkgPT4gbW92ZXMuc2VsZWN0Q2FyZChnZXRDYXJkSWQoKSkgOiB1bmRlZmluZWR9XHJcbiAgICAgIHRhYkluZGV4PXswfVxyXG4gICAgICBjc3M9e2Nzc2BcclxuICAgICAgICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAwLjNzO1xyXG4gICAgICAgIHRyYW5zaXRpb24tcHJvcGVydHk6IHRyYW5zZm9ybTtcclxuICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS4xKTtcclxuICAgICAgICB9XHJcbiAgICAgIGB9XHJcbiAgICAgIG9uTW91c2VPdmVyPXsoKSA9PiAoc2V0RGVzYyA/IHNldERlc2MoZGVzY3JpcHRpb24pIDogdW5kZWZpbmVkKX1cclxuICAgICAgb25Nb3VzZU91dD17KCkgPT4gKHNldERlc2MgPyBzZXREZXNjKCcnKSA6IHVuZGVmaW5lZCl9XHJcbiAgICA+XHJcbiAgICAgIHtjYXJkRGlzcGxheX1cclxuICAgIDwvQm94PlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDYXJkO1xyXG4iXSwibmFtZXMiOlsiQm94IiwidGhlbWUiLCJ1c2VCb2FyZENvbnRleHQiLCJjc3MiLCJDYXJkIiwiY2FyZCIsImRlcGxveWVkIiwic2V0RGVzYyIsImdldENhcmRJZCIsIkciLCJwbGF5ZXJzIiwiTnVtYmVyIiwicGxheWVySUQiLCJjYXJkcyIsImZpbmRJbmRleCIsImMiLCJjYXJkSUQiLCJtb3ZlcyIsImNhcmRJbmZvIiwic3RyZW5ndGgiLCJmYWNlRG93biIsIm5hbWUiLCJkZXNjIiwidGhlYXRlciIsImNhcmREaXNwbGF5IiwiZGVzY3JpcHRpb24iLCJ3IiwiaCIsImJnIiwiYm9yZGVyIiwiY29sb3IiLCJib3JkZXJSYWRpdXMiLCJjdXJzb3IiLCJtYXJnaW5SaWdodCIsIm9uQ2xpY2siLCJzZWxlY3RDYXJkIiwidW5kZWZpbmVkIiwidGFiSW5kZXgiLCJvbk1vdXNlT3ZlciIsIm9uTW91c2VPdXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/components/board/Card.tsx\n"));

/***/ }),

/***/ "./src/components/board/CardIcon.tsx":
/*!*******************************************!*\
  !*** ./src/components/board/CardIcon.tsx ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @chakra-ui/react */ \"./node_modules/@chakra-ui/react/dist/chakra-ui-react.esm.js\");\nvar _this = undefined;\n\n\nvar CardIcon = function() {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__.Box, {\n        bg: \"black\",\n        w: \"1.5em\",\n        h: \"2em\",\n        borderRadius: \"15%\"\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\CardIcon.tsx\",\n        lineNumber: 4,\n        columnNumber: 10\n    }, _this);\n};\n_c = CardIcon;\n/* harmony default export */ __webpack_exports__[\"default\"] = (CardIcon);\nvar _c;\n$RefreshReg$(_c, \"CardIcon\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9ib2FyZC9DYXJkSWNvbi50c3guanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUF1QztBQUV2QyxJQUFNQyxRQUFRLEdBQUcsV0FBTTtJQUNyQixxQkFBTyw4REFBQ0QsaURBQUc7UUFBQ0UsRUFBRSxFQUFDLE9BQU87UUFBQ0MsQ0FBQyxFQUFDLE9BQU87UUFBQ0MsQ0FBQyxFQUFDLEtBQUs7UUFBQ0MsWUFBWSxFQUFDLEtBQUs7Ozs7O2FBQUcsQ0FBQztBQUNqRSxDQUFDO0FBRktKLEtBQUFBLFFBQVE7QUFJZCwrREFBZUEsUUFBUSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9jb21wb25lbnRzL2JvYXJkL0NhcmRJY29uLnRzeD8xYTc2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJveCB9IGZyb20gJ0BjaGFrcmEtdWkvcmVhY3QnO1xyXG5cclxuY29uc3QgQ2FyZEljb24gPSAoKSA9PiB7XHJcbiAgcmV0dXJuIDxCb3ggYmc9XCJibGFja1wiIHc9XCIxLjVlbVwiIGg9XCIyZW1cIiBib3JkZXJSYWRpdXM9XCIxNSVcIiAvPjtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IENhcmRJY29uO1xyXG4iXSwibmFtZXMiOlsiQm94IiwiQ2FyZEljb24iLCJiZyIsInciLCJoIiwiYm9yZGVyUmFkaXVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/components/board/CardIcon.tsx\n"));

/***/ }),

/***/ "./src/components/board/Controls.tsx":
/*!*******************************************!*\
  !*** ./src/components/board/Controls.tsx ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @chakra-ui/react */ \"./node_modules/@chakra-ui/react/dist/chakra-ui-react.esm.js\");\n/* harmony import */ var game_gameUtil__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! game/gameUtil */ \"./src/game/gameUtil.ts\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Board__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Board */ \"./src/components/board/Board.tsx\");\n/* harmony import */ var _WithdrawTable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./WithdrawTable */ \"./src/components/board/WithdrawTable.tsx\");\nvar _this = undefined;\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\n\n\nvar WithdrawDialog = function(param) {\n    var isOpen = param.isOpen, onClose = param.onClose;\n    var onConfirm = function onConfirm() {\n        moves.withdraw();\n        onClose();\n    };\n    _s();\n    var ref = (0,_Board__WEBPACK_IMPORTED_MODULE_3__.useBoardContext)(), G = ref.G, playerID = ref.playerID, moves = ref.moves;\n    var cancelRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)();\n    var player = G.players.find(function(p) {\n        return p.ID !== playerID;\n    });\n    var opponentPoints = (0,game_gameUtil__WEBPACK_IMPORTED_MODULE_1__.getPointsScored)(player.firstPlayer, player.cards.length);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__.AlertDialog, {\n        motionPreset: \"slideInBottom\",\n        leastDestructiveRef: cancelRef,\n        onClose: onClose,\n        isOpen: isOpen,\n        isCentered: true,\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__.AlertDialogOverlay, {}, void 0, false, {\n                fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Controls.tsx\",\n                lineNumber: 50,\n                columnNumber: 7\n            }, _this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__.AlertDialogContent, {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__.AlertDialogHeader, {\n                        children: \"Withdraw?\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Controls.tsx\",\n                        lineNumber: 53,\n                        columnNumber: 9\n                    }, _this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__.AlertDialogBody, {\n                        children: [\n                            \"Opponent will score \",\n                            opponentPoints,\n                            \" points if you withdraw.\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Controls.tsx\",\n                        lineNumber: 54,\n                        columnNumber: 9\n                    }, _this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__.AlertDialogFooter, {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__.Button, {\n                                ref: cancelRef,\n                                onClick: onClose,\n                                children: \"No\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Controls.tsx\",\n                                lineNumber: 58,\n                                columnNumber: 11\n                            }, _this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__.Button, {\n                                colorScheme: \"red\",\n                                ml: 3,\n                                onClick: onConfirm,\n                                children: \"Yes\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Controls.tsx\",\n                                lineNumber: 61,\n                                columnNumber: 11\n                            }, _this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Controls.tsx\",\n                        lineNumber: 57,\n                        columnNumber: 9\n                    }, _this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Controls.tsx\",\n                lineNumber: 52,\n                columnNumber: 7\n            }, _this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Controls.tsx\",\n        lineNumber: 43,\n        columnNumber: 5\n    }, _this);\n};\n_s(WithdrawDialog, \"V2/fdZ5CoNrbIUpgK0QemoMN4tc=\", false, function() {\n    return [\n        _Board__WEBPACK_IMPORTED_MODULE_3__.useBoardContext\n    ];\n});\n_c = WithdrawDialog;\nvar ScoreInfoModel = function(param) {\n    var isOpen = param.isOpen, onClose = param.onClose;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__.Modal, {\n            isOpen: isOpen,\n            onClose: onClose,\n            size: \"xl\",\n            isCentered: true,\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__.ModalOverlay, {}, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Controls.tsx\",\n                    lineNumber: 80,\n                    columnNumber: 9\n                }, _this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__.ModalContent, {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__.ModalHeader, {\n                            children: \"Scoring Info\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Controls.tsx\",\n                            lineNumber: 82,\n                            columnNumber: 11\n                        }, _this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__.ModalBody, {\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_WithdrawTable__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {}, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Controls.tsx\",\n                                lineNumber: 84,\n                                columnNumber: 13\n                            }, _this)\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Controls.tsx\",\n                            lineNumber: 83,\n                            columnNumber: 11\n                        }, _this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__.ModalFooter, {\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__.Button, {\n                                colorScheme: \"blue\",\n                                mr: 3,\n                                onClick: onClose,\n                                children: \"Close\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Controls.tsx\",\n                                lineNumber: 87,\n                                columnNumber: 13\n                            }, _this)\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Controls.tsx\",\n                            lineNumber: 86,\n                            columnNumber: 11\n                        }, _this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Controls.tsx\",\n                    lineNumber: 81,\n                    columnNumber: 9\n                }, _this)\n            ]\n        }, void 0, true, {\n            fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Controls.tsx\",\n            lineNumber: 79,\n            columnNumber: 7\n        }, _this)\n    }, void 0, false);\n};\n_c1 = ScoreInfoModel;\nvar Controls = function() {\n    _s1();\n    var ref = (0,_Board__WEBPACK_IMPORTED_MODULE_3__.useBoardContext)(), undo = ref.undo, ctx = ref.ctx, isActive = ref.isActive;\n    var ref1 = (0,_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__.useDisclosure)(), isDialogOpen = ref1.isOpen, onDialogOpen = ref1.onOpen, onDialogClose = ref1.onClose;\n    var ref2 = (0,_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__.useDisclosure)(), isModalOpen = ref2.isOpen, onModalOpen = ref2.onOpen, onModalClose = ref2.onClose;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__.Flex, {\n        gap: \"5px\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__.Button, {\n                colorScheme: \"red\",\n                onClick: undo,\n                disabled: !ctx.numMoves || !isActive,\n                children: \"⭮\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Controls.tsx\",\n                lineNumber: 112,\n                columnNumber: 7\n            }, _this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__.Button, {\n                colorScheme: \"red\",\n                variant: \"outline\",\n                onClick: onDialogOpen,\n                disabled: !isActive,\n                children: \"Withdraw\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Controls.tsx\",\n                lineNumber: 120,\n                columnNumber: 7\n            }, _this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__.Button, {\n                colorScheme: \"blue\",\n                onClick: onModalOpen,\n                children: \"?\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Controls.tsx\",\n                lineNumber: 129,\n                columnNumber: 7\n            }, _this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(WithdrawDialog, {\n                isOpen: isDialogOpen,\n                onClose: onDialogClose\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Controls.tsx\",\n                lineNumber: 133,\n                columnNumber: 7\n            }, _this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ScoreInfoModel, {\n                isOpen: isModalOpen,\n                onClose: onModalClose\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Controls.tsx\",\n                lineNumber: 134,\n                columnNumber: 7\n            }, _this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Controls.tsx\",\n        lineNumber: 111,\n        columnNumber: 5\n    }, _this);\n};\n_s1(Controls, \"Vgg+McsSbkKOFfO1h4HTmW1wSXk=\", false, function() {\n    return [\n        _Board__WEBPACK_IMPORTED_MODULE_3__.useBoardContext,\n        _chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__.useDisclosure,\n        _chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__.useDisclosure\n    ];\n});\n_c2 = Controls;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Controls);\nvar _c, _c1, _c2;\n$RefreshReg$(_c, \"WithdrawDialog\");\n$RefreshReg$(_c1, \"ScoreInfoModel\");\n$RefreshReg$(_c2, \"Controls\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/board/Controls.tsx\n"));

/***/ }),

/***/ "./src/components/board/Hand.tsx":
/*!***************************************!*\
  !*** ./src/components/board/Hand.tsx ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Board__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Board */ \"./src/components/board/Board.tsx\");\n/* harmony import */ var _Card__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Card */ \"./src/components/board/Card.tsx\");\n/* harmony import */ var _CardIcon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./CardIcon */ \"./src/components/board/CardIcon.tsx\");\nvar _this = undefined;\n\nvar _s = $RefreshSig$();\n\n\n\nvar Hand = function(param) {\n    var type = param.type, setDesc = param.setDesc;\n    var ref;\n    _s();\n    var ref1 = (0,_Board__WEBPACK_IMPORTED_MODULE_1__.useBoardContext)(), G = ref1.G, playerID = ref1.playerID;\n    if (type === \"self\") {\n        var ref2;\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n            children: (ref2 = G.players.find(function(p) {\n                return p.ID === playerID;\n            })) === null || ref2 === void 0 ? void 0 : ref2.cards.map(function(card) {\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Card__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                    card: card,\n                    setDesc: setDesc\n                }, card.cardID, false, {\n                    fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Hand.tsx\",\n                    lineNumber: 19,\n                    columnNumber: 13\n                }, _this);\n            })\n        }, void 0, false);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: (ref = G.players.find(function(p) {\n            return p.ID !== playerID;\n        })) === null || ref === void 0 ? void 0 : ref.cards.map(function(card) {\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_CardIcon__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {}, card.cardID, false, {\n                fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Hand.tsx\",\n                lineNumber: 30,\n                columnNumber: 11\n            }, _this);\n        })\n    }, void 0, false);\n};\n_s(Hand, \"T/kAuhCNPCp8d58oqAQ0ySd3q/4=\", false, function() {\n    return [\n        _Board__WEBPACK_IMPORTED_MODULE_1__.useBoardContext\n    ];\n});\n_c = Hand;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Hand);\nvar _c;\n$RefreshReg$(_c, \"Hand\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9ib2FyZC9IYW5kLnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7O0FBQTBDO0FBQ2hCO0FBQ1E7QUFPbEMsSUFBTUcsSUFBSSxHQUFHLGdCQUE4QjtRQUEzQkMsSUFBSSxTQUFKQSxJQUFJLEVBQUVDLE9BQU8sU0FBUEEsT0FBTztRQWlCdEJDLEdBQ2dDOztJQWpCckMsSUFBd0JOLElBQWlCLEdBQWpCQSx1REFBZSxFQUFFLEVBQWpDTSxDQUFDLEdBQWVOLElBQWlCLENBQWpDTSxDQUFDLEVBQUVDLFFBQVEsR0FBS1AsSUFBaUIsQ0FBOUJPLFFBQVE7SUFFbkIsSUFBSUgsSUFBSSxLQUFLLE1BQU0sRUFBRTtZQUdkRSxJQUNnQztRQUhyQyxxQkFDRTtzQkFDR0EsQ0FBQUEsSUFDZ0MsR0FEaENBLENBQUMsQ0FBQ0UsT0FBTyxDQUNQQyxJQUFJLENBQUMsU0FBQ0MsQ0FBQzt1QkFBS0EsQ0FBQyxDQUFDQyxFQUFFLEtBQUtKLFFBQVE7YUFBQSxDQUFDLGNBRGhDRCxJQUNnQyxXQUN4QixHQUZSQSxLQUFBQSxDQUVRLEdBRlJBLElBQ2dDLENBQzdCTSxLQUFLLENBQUNDLEdBQUcsQ0FBQyxTQUFDQyxJQUFJO3FDQUNmLDhEQUFDYiw2Q0FBSTtvQkFBbUJhLElBQUksRUFBRUEsSUFBSTtvQkFBRVQsT0FBTyxFQUFFQSxPQUFPO21CQUF6Q1MsSUFBSSxDQUFDQyxNQUFNOzs7O3lCQUFrQzthQUN6RCxDQUFDO3lCQUNILENBQ0g7SUFDSixDQUFDO0lBRUQscUJBQ0U7a0JBQ0dULENBQUFBLEdBQ2dDLEdBRGhDQSxDQUFDLENBQUNFLE9BQU8sQ0FDUEMsSUFBSSxDQUFDLFNBQUNDLENBQUM7bUJBQUtBLENBQUMsQ0FBQ0MsRUFBRSxLQUFLSixRQUFRO1NBQUEsQ0FBQyxjQURoQ0QsR0FDZ0MsV0FDeEIsR0FGUkEsS0FBQUEsQ0FFUSxHQUZSQSxHQUNnQyxDQUM3Qk0sS0FBSyxDQUFDQyxHQUFHLENBQUMsU0FBQ0MsSUFBSTtpQ0FDZiw4REFBQ1osaURBQVEsTUFBTVksSUFBSSxDQUFDQyxNQUFNOzs7O3FCQUFJO1NBQy9CLENBQUM7cUJBQ0gsQ0FDSDtBQUNKLENBQUM7R0F4QktaLElBQUk7O1FBQ2dCSCxtREFBZTs7O0FBRG5DRyxLQUFBQSxJQUFJO0FBMEJWLCtEQUFlQSxJQUFJLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbXBvbmVudHMvYm9hcmQvSGFuZC50c3g/NTJkMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VCb2FyZENvbnRleHQgfSBmcm9tICcuL0JvYXJkJztcclxuaW1wb3J0IENhcmQgZnJvbSAnLi9DYXJkJztcclxuaW1wb3J0IENhcmRJY29uIGZyb20gJy4vQ2FyZEljb24nO1xyXG5cclxuaW50ZXJmYWNlIFByb3BzIHtcclxuICB0eXBlOiAnc2VsZicgfCAnb3Bwb25lbnQnO1xyXG4gIHNldERlc2M/OiAoZGVzYzogc3RyaW5nKSA9PiB2b2lkO1xyXG59XHJcblxyXG5jb25zdCBIYW5kID0gKHsgdHlwZSwgc2V0RGVzYyB9OiBQcm9wcykgPT4ge1xyXG4gIGNvbnN0IHsgRywgcGxheWVySUQgfSA9IHVzZUJvYXJkQ29udGV4dCgpO1xyXG5cclxuICBpZiAodHlwZSA9PT0gJ3NlbGYnKSB7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8PlxyXG4gICAgICAgIHtHLnBsYXllcnNcclxuICAgICAgICAgIC5maW5kKChwKSA9PiBwLklEID09PSBwbGF5ZXJJRClcclxuICAgICAgICAgID8uY2FyZHMubWFwKChjYXJkKSA9PiAoXHJcbiAgICAgICAgICAgIDxDYXJkIGtleT17Y2FyZC5jYXJkSUR9IGNhcmQ9e2NhcmR9IHNldERlc2M9e3NldERlc2N9IC8+XHJcbiAgICAgICAgICApKX1cclxuICAgICAgPC8+XHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDw+XHJcbiAgICAgIHtHLnBsYXllcnNcclxuICAgICAgICAuZmluZCgocCkgPT4gcC5JRCAhPT0gcGxheWVySUQpXHJcbiAgICAgICAgPy5jYXJkcy5tYXAoKGNhcmQpID0+IChcclxuICAgICAgICAgIDxDYXJkSWNvbiBrZXk9e2NhcmQuY2FyZElEfSAvPlxyXG4gICAgICAgICkpfVxyXG4gICAgPC8+XHJcbiAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IEhhbmQ7XHJcbiJdLCJuYW1lcyI6WyJ1c2VCb2FyZENvbnRleHQiLCJDYXJkIiwiQ2FyZEljb24iLCJIYW5kIiwidHlwZSIsInNldERlc2MiLCJHIiwicGxheWVySUQiLCJwbGF5ZXJzIiwiZmluZCIsInAiLCJJRCIsImNhcmRzIiwibWFwIiwiY2FyZCIsImNhcmRJRCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/board/Hand.tsx\n"));

/***/ }),

/***/ "./src/components/board/HelpText.tsx":
/*!*******************************************!*\
  !*** ./src/components/board/HelpText.tsx ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @chakra-ui/react */ \"./node_modules/@chakra-ui/react/dist/chakra-ui-react.esm.js\");\n/* harmony import */ var _Board__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Board */ \"./src/components/board/Board.tsx\");\nvar _this = undefined;\n\nvar _s = $RefreshSig$();\n\n\nvar HelpText = function() {\n    _s();\n    var ref = (0,_Board__WEBPACK_IMPORTED_MODULE_1__.useBoardContext)(), isActive = ref.isActive, ctx = ref.ctx;\n    var stage = ctx.activePlayers && ctx.activePlayers[ctx.currentPlayer] || null;\n    // todo: make more descriptive\n    var text = isActive ? \"\".concat(ctx.phase, \" : \").concat(stage) : \"Waiting for Opponent...\";\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.Text, {\n        fontSize: \"lg\",\n        textAlign: \"center\",\n        children: text\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\HelpText.tsx\",\n        lineNumber: 14,\n        columnNumber: 5\n    }, _this);\n};\n_s(HelpText, \"SsowwfILzKIc87fdBLfNo3vOC6s=\", false, function() {\n    return [\n        _Board__WEBPACK_IMPORTED_MODULE_1__.useBoardContext\n    ];\n});\n_c = HelpText;\n/* harmony default export */ __webpack_exports__[\"default\"] = (HelpText);\nvar _c;\n$RefreshReg$(_c, \"HelpText\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9ib2FyZC9IZWxwVGV4dC50c3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7O0FBQXdDO0FBQ0U7QUFFMUMsSUFBTUUsUUFBUSxHQUFHLFdBQW1COztJQUNsQyxJQUEwQkQsR0FBaUIsR0FBakJBLHVEQUFlLEVBQUUsRUFBbkNFLFFBQVEsR0FBVUYsR0FBaUIsQ0FBbkNFLFFBQVEsRUFBRUMsR0FBRyxHQUFLSCxHQUFpQixDQUF6QkcsR0FBRztJQUVyQixJQUFNQyxLQUFLLEdBQ1QsR0FBSSxDQUFDQyxhQUFhLElBQUlGLEdBQUcsQ0FBQ0UsYUFBYSxDQUFDRixHQUFHLENBQUNHLGFBQWEsQ0FBQyxJQUFLLElBQUk7SUFFckUsOEJBQThCO0lBQzlCLElBQU1DLElBQUksR0FBR0wsUUFBUSxHQUFHLEVBQUMsQ0FBaUJFLE1BQUssQ0FBcEJELEdBQUcsQ0FBQ0ssS0FBSyxFQUFDLEtBQUcsQ0FBUSxRQUFOSixLQUFLLENBQUUsR0FBRyx5QkFBeUI7SUFFN0UscUJBQ0UsOERBQUNMLGtEQUFJO1FBQUNVLFFBQVEsRUFBQyxJQUFJO1FBQUNDLFNBQVMsRUFBQyxRQUFRO2tCQUNuQ0gsSUFBSTs7Ozs7YUFDQSxDQUNQO0FBQ0osQ0FBQztHQWRLTixRQUFROztRQUNjRCxtREFBZTs7O0FBRHJDQyxLQUFBQSxRQUFRO0FBZ0JkLCtEQUFlQSxRQUFRLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbXBvbmVudHMvYm9hcmQvSGVscFRleHQudHN4PzRlZDgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVGV4dCB9IGZyb20gJ0BjaGFrcmEtdWkvcmVhY3QnO1xyXG5pbXBvcnQgeyB1c2VCb2FyZENvbnRleHQgfSBmcm9tICcuL0JvYXJkJztcclxuXHJcbmNvbnN0IEhlbHBUZXh0ID0gKCk6IEpTWC5FbGVtZW50ID0+IHtcclxuICBjb25zdCB7IGlzQWN0aXZlLCBjdHggfSA9IHVzZUJvYXJkQ29udGV4dCgpO1xyXG5cclxuICBjb25zdCBzdGFnZTogc3RyaW5nIHwgbnVsbCA9XHJcbiAgICAoY3R4LmFjdGl2ZVBsYXllcnMgJiYgY3R4LmFjdGl2ZVBsYXllcnNbY3R4LmN1cnJlbnRQbGF5ZXJdKSB8fCBudWxsO1xyXG5cclxuICAvLyB0b2RvOiBtYWtlIG1vcmUgZGVzY3JpcHRpdmVcclxuICBjb25zdCB0ZXh0ID0gaXNBY3RpdmUgPyBgJHtjdHgucGhhc2V9IDogJHtzdGFnZX1gIDogJ1dhaXRpbmcgZm9yIE9wcG9uZW50Li4uJztcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxUZXh0IGZvbnRTaXplPVwibGdcIiB0ZXh0QWxpZ249XCJjZW50ZXJcIj5cclxuICAgICAge3RleHR9XHJcbiAgICA8L1RleHQ+XHJcbiAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IEhlbHBUZXh0O1xyXG4iXSwibmFtZXMiOlsiVGV4dCIsInVzZUJvYXJkQ29udGV4dCIsIkhlbHBUZXh0IiwiaXNBY3RpdmUiLCJjdHgiLCJzdGFnZSIsImFjdGl2ZVBsYXllcnMiLCJjdXJyZW50UGxheWVyIiwidGV4dCIsInBoYXNlIiwiZm9udFNpemUiLCJ0ZXh0QWxpZ24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/components/board/HelpText.tsx\n"));

/***/ }),

/***/ "./src/components/board/SupremeCommanderCard.tsx":
/*!*******************************************************!*\
  !*** ./src/components/board/SupremeCommanderCard.tsx ***!
  \*******************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @chakra-ui/react */ \"./node_modules/@chakra-ui/react/dist/chakra-ui-react.esm.js\");\n/* harmony import */ var config_theme__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! config/theme */ \"./src/config/theme.ts\");\n/* harmony import */ var _Board__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Board */ \"./src/components/board/Board.tsx\");\nvar _this = undefined;\n\nvar _s = $RefreshSig$();\n\n\n\nvar SupremeCommanderCard = function(param) {\n    var playerID = param.playerID;\n    _s();\n    var ref = (0,_Board__WEBPACK_IMPORTED_MODULE_2__.useBoardContext)(), G = ref.G, clientPlayerID = ref.playerID;\n    var player = G.players.find(function(p) {\n        return p.ID === playerID;\n    });\n    var color = (player === null || player === void 0 ? void 0 : player.firstPlayer) ? config_theme__WEBPACK_IMPORTED_MODULE_1__.theme.first : config_theme__WEBPACK_IMPORTED_MODULE_1__.theme.second;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_3__.Stack, {\n        w: \"75px\",\n        h: \"125px\",\n        border: \"2px solid \".concat(color),\n        borderRadius: \"10%\",\n        textAlign: \"center\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_3__.Text, {\n                color: color,\n                size: \"md\",\n                children: (player === null || player === void 0 ? void 0 : player.firstPlayer) ? \"1st\" : \"2nd\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\SupremeCommanderCard.tsx\",\n                lineNumber: 22,\n                columnNumber: 7\n            }, _this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_3__.Text, {\n                size: \"md\",\n                children: [\n                    \"Player \",\n                    playerID,\n                    playerID === clientPlayerID && \" (You)\"\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\SupremeCommanderCard.tsx\",\n                lineNumber: 25,\n                columnNumber: 7\n            }, _this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_3__.Text, {\n                size: \"md\",\n                children: [\n                    \"Score: \",\n                    player === null || player === void 0 ? void 0 : player.score\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\SupremeCommanderCard.tsx\",\n                lineNumber: 29,\n                columnNumber: 7\n            }, _this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\SupremeCommanderCard.tsx\",\n        lineNumber: 15,\n        columnNumber: 5\n    }, _this);\n};\n_s(SupremeCommanderCard, \"JXkecYaZ3GDGs4QjffaBoCEZGBo=\", false, function() {\n    return [\n        _Board__WEBPACK_IMPORTED_MODULE_2__.useBoardContext\n    ];\n});\n_c = SupremeCommanderCard;\n/* harmony default export */ __webpack_exports__[\"default\"] = (SupremeCommanderCard);\nvar _c;\n$RefreshReg$(_c, \"SupremeCommanderCard\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9ib2FyZC9TdXByZW1lQ29tbWFuZGVyQ2FyZC50c3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7OztBQUErQztBQUNWO0FBQ0s7QUFFMUMsSUFBTUksb0JBQW9CLEdBQUcsZ0JBSVY7UUFIakJDLFFBQVEsU0FBUkEsUUFBUTs7SUFJUixJQUF3Q0YsR0FBaUIsR0FBakJBLHVEQUFlLEVBQUUsRUFBakRHLENBQUMsR0FBK0JILEdBQWlCLENBQWpERyxDQUFDLEVBQUVELGNBQXdCLEdBQUtGLEdBQWlCLENBQTlDRSxRQUFRO0lBQ25CLElBQU1HLE1BQU0sR0FBR0YsQ0FBQyxDQUFDRyxPQUFPLENBQUNDLElBQUksQ0FBQyxTQUFDQyxDQUFDO2VBQUtBLENBQUMsQ0FBQ0MsRUFBRSxLQUFLUCxRQUFRO0tBQUEsQ0FBQztJQUN2RCxJQUFNUSxLQUFLLEdBQUdMLENBQUFBLE1BQU0sYUFBTkEsTUFBTSxXQUFhLEdBQW5CQSxLQUFBQSxDQUFtQixHQUFuQkEsTUFBTSxDQUFFTSxXQUFXLElBQUdaLHFEQUFjLEdBQUdBLHNEQUFlO0lBRXBFLHFCQUNFLDhEQUFDRCxtREFBSztRQUNKYyxDQUFDLEVBQUMsTUFBTTtRQUNSQyxDQUFDLEVBQUMsT0FBTztRQUNUQyxNQUFNLEVBQUUsWUFBVyxDQUFRLE9BQU5KLEtBQUssQ0FBRTtRQUM1QkssWUFBWSxFQUFDLEtBQUs7UUFDbEJDLFNBQVMsRUFBQyxRQUFROzswQkFFbEIsOERBQUNuQixrREFBSTtnQkFBQ2EsS0FBSyxFQUFFQSxLQUFLO2dCQUFFTyxJQUFJLEVBQUMsSUFBSTswQkFDMUJaLENBQUFBLE1BQU0sYUFBTkEsTUFBTSxXQUFhLEdBQW5CQSxLQUFBQSxDQUFtQixHQUFuQkEsTUFBTSxDQUFFTSxXQUFXLElBQUcsS0FBSyxHQUFHLEtBQUs7Ozs7O3FCQUMvQjswQkFDUCw4REFBQ2Qsa0RBQUk7Z0JBQUNvQixJQUFJLEVBQUMsSUFBSTs7b0JBQUMsU0FDUDtvQkFBQ2YsUUFBUTtvQkFDZkEsUUFBUSxLQUFLRSxjQUFjLElBQUksUUFBUTs7Ozs7O3FCQUNuQzswQkFDUCw4REFBQ1Asa0RBQUk7Z0JBQUNvQixJQUFJLEVBQUMsSUFBSTs7b0JBQUMsU0FBTztvQkFBQ1osTUFBTSxhQUFOQSxNQUFNLFdBQU8sR0FBYkEsS0FBQUEsQ0FBYSxHQUFiQSxNQUFNLENBQUVhLEtBQUs7Ozs7OztxQkFBUTs7Ozs7O2FBQ3ZDLENBQ1I7QUFDSixDQUFDO0dBM0JLakIsb0JBQW9COztRQUtnQkQsbURBQWU7OztBQUxuREMsS0FBQUEsb0JBQW9CO0FBNkIxQiwrREFBZUEsb0JBQW9CLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbXBvbmVudHMvYm9hcmQvU3VwcmVtZUNvbW1hbmRlckNhcmQudHN4P2EwYzEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVGV4dCwgU3RhY2sgfSBmcm9tICdAY2hha3JhLXVpL3JlYWN0JztcclxuaW1wb3J0IHsgdGhlbWUgfSBmcm9tICdjb25maWcvdGhlbWUnO1xyXG5pbXBvcnQgeyB1c2VCb2FyZENvbnRleHQgfSBmcm9tICcuL0JvYXJkJztcclxuXHJcbmNvbnN0IFN1cHJlbWVDb21tYW5kZXJDYXJkID0gKHtcclxuICBwbGF5ZXJJRCxcclxufToge1xyXG4gIHBsYXllcklEOiBzdHJpbmc7XHJcbn0pOiBKU1guRWxlbWVudCA9PiB7XHJcbiAgY29uc3QgeyBHLCBwbGF5ZXJJRDogY2xpZW50UGxheWVySUQgfSA9IHVzZUJvYXJkQ29udGV4dCgpO1xyXG4gIGNvbnN0IHBsYXllciA9IEcucGxheWVycy5maW5kKChwKSA9PiBwLklEID09PSBwbGF5ZXJJRCk7XHJcbiAgY29uc3QgY29sb3IgPSBwbGF5ZXI/LmZpcnN0UGxheWVyID8gdGhlbWVbJ2ZpcnN0J10gOiB0aGVtZVsnc2Vjb25kJ107XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8U3RhY2tcclxuICAgICAgdz1cIjc1cHhcIlxyXG4gICAgICBoPVwiMTI1cHhcIlxyXG4gICAgICBib3JkZXI9e2AycHggc29saWQgJHtjb2xvcn1gfVxyXG4gICAgICBib3JkZXJSYWRpdXM9XCIxMCVcIlxyXG4gICAgICB0ZXh0QWxpZ249XCJjZW50ZXJcIlxyXG4gICAgPlxyXG4gICAgICA8VGV4dCBjb2xvcj17Y29sb3J9IHNpemU9XCJtZFwiPlxyXG4gICAgICAgIHtwbGF5ZXI/LmZpcnN0UGxheWVyID8gJzFzdCcgOiAnMm5kJ31cclxuICAgICAgPC9UZXh0PlxyXG4gICAgICA8VGV4dCBzaXplPVwibWRcIj5cclxuICAgICAgICBQbGF5ZXIge3BsYXllcklEfVxyXG4gICAgICAgIHtwbGF5ZXJJRCA9PT0gY2xpZW50UGxheWVySUQgJiYgJyAoWW91KSd9XHJcbiAgICAgIDwvVGV4dD5cclxuICAgICAgPFRleHQgc2l6ZT1cIm1kXCI+U2NvcmU6IHtwbGF5ZXI/LnNjb3JlfTwvVGV4dD5cclxuICAgIDwvU3RhY2s+XHJcbiAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFN1cHJlbWVDb21tYW5kZXJDYXJkO1xyXG4iXSwibmFtZXMiOlsiVGV4dCIsIlN0YWNrIiwidGhlbWUiLCJ1c2VCb2FyZENvbnRleHQiLCJTdXByZW1lQ29tbWFuZGVyQ2FyZCIsInBsYXllcklEIiwiRyIsImNsaWVudFBsYXllcklEIiwicGxheWVyIiwicGxheWVycyIsImZpbmQiLCJwIiwiSUQiLCJjb2xvciIsImZpcnN0UGxheWVyIiwidyIsImgiLCJib3JkZXIiLCJib3JkZXJSYWRpdXMiLCJ0ZXh0QWxpZ24iLCJzaXplIiwic2NvcmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/components/board/SupremeCommanderCard.tsx\n"));

/***/ }),

/***/ "./src/components/board/Theater.tsx":
/*!******************************************!*\
  !*** ./src/components/board/Theater.tsx ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @chakra-ui/react */ \"./node_modules/@chakra-ui/react/dist/chakra-ui-react.esm.js\");\n/* harmony import */ var config_theme__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! config/theme */ \"./src/config/theme.ts\");\n/* harmony import */ var _Board__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Board */ \"./src/components/board/Board.tsx\");\n/* harmony import */ var _Card__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Card */ \"./src/components/board/Card.tsx\");\nvar _this = undefined;\n\nvar _s = $RefreshSig$();\n\n\n\n\nvar Theater = function(param) {\n    var theater = param.theater, setDesc = param.setDesc;\n    var getTheaterId = function getTheaterId() {\n        return G.playingField.findIndex(function(t) {\n            return t.theater === theaterName;\n        });\n    };\n    var onRightClick = // todo: better way to play card face down\n    function onRightClick(e) {\n        e.preventDefault();\n        moves.improvise(getTheaterId());\n        return false;\n    };\n    _s();\n    var theaterName = theater.theater, deployedCards = theater.deployedCards;\n    var ref = (0,_Board__WEBPACK_IMPORTED_MODULE_2__.useBoardContext)(), G = ref.G, moves = ref.moves, playerID = ref.playerID;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__.Box, {\n        w: \"25%\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__.Flex, {\n                height: \"150px\",\n                alignItems: \"center\",\n                children: deployedCards[(Number(playerID) ^ 1).toString()].map(function(card) {\n                    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Card__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                        card: card,\n                        deployed: \"opponent\",\n                        setDesc: setDesc\n                    }, card.cardID, false, {\n                        fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Theater.tsx\",\n                        lineNumber: 31,\n                        columnNumber: 11\n                    }, _this);\n                })\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Theater.tsx\",\n                lineNumber: 29,\n                columnNumber: 7\n            }, _this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__.Box, {\n                color: \"white\",\n                bg: config_theme__WEBPACK_IMPORTED_MODULE_1__.theme[theaterName],\n                textAlign: \"center\",\n                children: [\n                    \"- \",\n                    theaterName.toUpperCase(),\n                    \" -\"\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Theater.tsx\",\n                lineNumber: 39,\n                columnNumber: 7\n            }, _this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__.Flex, {\n                height: \"150px\",\n                alignItems: \"center\",\n                _hover: {\n                    bg: \"gainsboro\"\n                },\n                cursor: \"pointer\",\n                onClick: function() {\n                    return moves.deploy(getTheaterId());\n                },\n                onContextMenu: onRightClick,\n                children: deployedCards[playerID].map(function(card) {\n                    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Card__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                        card: card,\n                        deployed: \"self\",\n                        setDesc: setDesc\n                    }, card.cardID, false, {\n                        fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Theater.tsx\",\n                        lineNumber: 51,\n                        columnNumber: 11\n                    }, _this);\n                })\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Theater.tsx\",\n                lineNumber: 42,\n                columnNumber: 7\n            }, _this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\Theater.tsx\",\n        lineNumber: 28,\n        columnNumber: 5\n    }, _this);\n};\n_s(Theater, \"fNNFxL4+Y6kwYyNSUa1wRELsRuY=\", false, function() {\n    return [\n        _Board__WEBPACK_IMPORTED_MODULE_2__.useBoardContext\n    ];\n});\n_c = Theater;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Theater);\nvar _c;\n$RefreshReg$(_c, \"Theater\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9ib2FyZC9UaGVhdGVyLnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7OztBQUE2QztBQUNSO0FBRUs7QUFDaEI7QUFPMUIsSUFBTUssT0FBTyxHQUFHLGdCQUE4QztRQUEzQ0MsT0FBTyxTQUFQQSxPQUFPLEVBQUVDLE9BQU8sU0FBUEEsT0FBTztRQUl4QkMsWUFBWSxHQUFyQixTQUFTQSxZQUFZLEdBQVc7UUFDOUIsT0FBT0MsQ0FBQyxDQUFDQyxZQUFZLENBQUNDLFNBQVMsQ0FBQyxTQUFDQyxDQUFDO21CQUFLQSxDQUFDLENBQUNOLE9BQU8sS0FBS08sV0FBVztTQUFBLENBQUMsQ0FBQztJQUNwRSxDQUFDO1FBR1FDLFlBQVksR0FEckIsMENBQTBDO0lBQzFDLFNBQVNBLFlBQVksQ0FBQ0MsQ0FBTSxFQUFFO1FBQzVCQSxDQUFDLENBQUNDLGNBQWMsRUFBRSxDQUFDO1FBQ25CQyxLQUFLLENBQUNDLFNBQVMsQ0FBQ1YsWUFBWSxFQUFFLENBQUMsQ0FBQztRQUNoQyxPQUFPLEtBQUssQ0FBQztJQUNmLENBQUM7O0lBWkQsSUFBUUYsV0FBb0IsR0FBb0JBLE9BQU8sQ0FBL0NBLE9BQU8sRUFBZWEsYUFBYSxHQUFLYixPQUFPLENBQXpCYSxhQUFhO0lBQzNDLElBQStCaEIsR0FBaUIsR0FBakJBLHVEQUFlLEVBQUUsRUFBeENNLENBQUMsR0FBc0JOLEdBQWlCLENBQXhDTSxDQUFDLEVBQUVRLEtBQUssR0FBZWQsR0FBaUIsQ0FBckNjLEtBQUssRUFBRUcsUUFBUSxHQUFLakIsR0FBaUIsQ0FBOUJpQixRQUFRO0lBYTFCLHFCQUNFLDhEQUFDcEIsaURBQUc7UUFBQ3FCLENBQUMsRUFBQyxLQUFLOzswQkFDViw4REFBQ3BCLGtEQUFJO2dCQUFDcUIsTUFBTSxFQUFDLE9BQU87Z0JBQUNDLFVBQVUsRUFBQyxRQUFROzBCQUNyQ0osYUFBYSxDQUFDLENBQUNLLE1BQU0sQ0FBQ0osUUFBUSxDQUFDLEdBQUcsQ0FBQyxFQUFFSyxRQUFRLEVBQUUsQ0FBQyxDQUFDQyxHQUFHLENBQUMsU0FBQ0MsSUFBSTt5Q0FDekQsOERBQUN2Qiw2Q0FBSTt3QkFFSHVCLElBQUksRUFBRUEsSUFBSTt3QkFDVkMsUUFBUSxFQUFDLFVBQVU7d0JBQ25CckIsT0FBTyxFQUFFQSxPQUFPO3VCQUhYb0IsSUFBSSxDQUFDRSxNQUFNOzs7OzZCQUloQjtpQkFDSCxDQUFDOzs7OztxQkFDRzswQkFDUCw4REFBQzdCLGlEQUFHO2dCQUFDOEIsS0FBSyxFQUFDLE9BQU87Z0JBQUNDLEVBQUUsRUFBRTdCLCtDQUFLLENBQUNXLFdBQVcsQ0FBQztnQkFBRW1CLFNBQVMsRUFBQyxRQUFROztvQkFBQyxJQUMxRDtvQkFBQ25CLFdBQVcsQ0FBQ29CLFdBQVcsRUFBRTtvQkFBQyxJQUMvQjs7Ozs7O3FCQUFNOzBCQUNOLDhEQUFDaEMsa0RBQUk7Z0JBQ0hxQixNQUFNLEVBQUMsT0FBTztnQkFDZEMsVUFBVSxFQUFDLFFBQVE7Z0JBQ25CVyxNQUFNLEVBQUU7b0JBQUVILEVBQUUsRUFBRSxXQUFXO2lCQUFFO2dCQUMzQkksTUFBTSxFQUFDLFNBQVM7Z0JBQ2hCQyxPQUFPLEVBQUU7MkJBQU1uQixLQUFLLENBQUNvQixNQUFNLENBQUM3QixZQUFZLEVBQUUsQ0FBQztpQkFBQTtnQkFDM0M4QixhQUFhLEVBQUV4QixZQUFZOzBCQUUxQkssYUFBYSxDQUFDQyxRQUFRLENBQUUsQ0FBQ00sR0FBRyxDQUFDLFNBQUNDLElBQUk7eUNBQ2pDLDhEQUFDdkIsNkNBQUk7d0JBRUh1QixJQUFJLEVBQUVBLElBQUk7d0JBQ1ZDLFFBQVEsRUFBQyxNQUFNO3dCQUNmckIsT0FBTyxFQUFFQSxPQUFPO3VCQUhYb0IsSUFBSSxDQUFDRSxNQUFNOzs7OzZCQUloQjtpQkFDSCxDQUFDOzs7OztxQkFDRzs7Ozs7O2FBQ0gsQ0FDTjtBQUNKLENBQUM7R0FqREt4QixPQUFPOztRQUVvQkYsbURBQWU7OztBQUYxQ0UsS0FBQUEsT0FBTztBQW1EYiwrREFBZUEsT0FBTyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9jb21wb25lbnRzL2JvYXJkL1RoZWF0ZXIudHN4P2E4ZWIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQm94LCBGbGV4IH0gZnJvbSAnQGNoYWtyYS11aS9yZWFjdCc7XHJcbmltcG9ydCB7IHRoZW1lIH0gZnJvbSAnY29uZmlnL3RoZW1lJztcclxuaW1wb3J0IHsgVGhlYXRlciBhcyBHYW1lVGhlYXRlciB9IGZyb20gJ2dhbWUvZ2FtZVR5cGVzJztcclxuaW1wb3J0IHsgdXNlQm9hcmRDb250ZXh0IH0gZnJvbSAnLi9Cb2FyZCc7XHJcbmltcG9ydCBDYXJkIGZyb20gJy4vQ2FyZCc7XHJcblxyXG5pbnRlcmZhY2UgUHJvcHMge1xyXG4gIHRoZWF0ZXI6IEdhbWVUaGVhdGVyO1xyXG4gIHNldERlc2M/OiAoZGVzYzogc3RyaW5nKSA9PiB2b2lkO1xyXG59XHJcblxyXG5jb25zdCBUaGVhdGVyID0gKHsgdGhlYXRlciwgc2V0RGVzYyB9OiBQcm9wcyk6IEpTWC5FbGVtZW50ID0+IHtcclxuICBjb25zdCB7IHRoZWF0ZXI6IHRoZWF0ZXJOYW1lLCBkZXBsb3llZENhcmRzIH0gPSB0aGVhdGVyO1xyXG4gIGNvbnN0IHsgRywgbW92ZXMsIHBsYXllcklEIH0gPSB1c2VCb2FyZENvbnRleHQoKTtcclxuXHJcbiAgZnVuY3Rpb24gZ2V0VGhlYXRlcklkKCk6IG51bWJlciB7XHJcbiAgICByZXR1cm4gRy5wbGF5aW5nRmllbGQuZmluZEluZGV4KCh0KSA9PiB0LnRoZWF0ZXIgPT09IHRoZWF0ZXJOYW1lKTtcclxuICB9XHJcblxyXG4gIC8vIHRvZG86IGJldHRlciB3YXkgdG8gcGxheSBjYXJkIGZhY2UgZG93blxyXG4gIGZ1bmN0aW9uIG9uUmlnaHRDbGljayhlOiBhbnkpIHtcclxuICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgIG1vdmVzLmltcHJvdmlzZShnZXRUaGVhdGVySWQoKSk7XHJcbiAgICByZXR1cm4gZmFsc2U7XHJcbiAgfVxyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPEJveCB3PVwiMjUlXCI+XHJcbiAgICAgIDxGbGV4IGhlaWdodD1cIjE1MHB4XCIgYWxpZ25JdGVtcz1cImNlbnRlclwiPlxyXG4gICAgICAgIHtkZXBsb3llZENhcmRzWyhOdW1iZXIocGxheWVySUQpIF4gMSkudG9TdHJpbmcoKV0ubWFwKChjYXJkKSA9PiAoXHJcbiAgICAgICAgICA8Q2FyZFxyXG4gICAgICAgICAgICBrZXk9e2NhcmQuY2FyZElEfVxyXG4gICAgICAgICAgICBjYXJkPXtjYXJkfVxyXG4gICAgICAgICAgICBkZXBsb3llZD1cIm9wcG9uZW50XCJcclxuICAgICAgICAgICAgc2V0RGVzYz17c2V0RGVzY31cclxuICAgICAgICAgIC8+XHJcbiAgICAgICAgKSl9XHJcbiAgICAgIDwvRmxleD5cclxuICAgICAgPEJveCBjb2xvcj1cIndoaXRlXCIgYmc9e3RoZW1lW3RoZWF0ZXJOYW1lXX0gdGV4dEFsaWduPVwiY2VudGVyXCI+XHJcbiAgICAgICAgLSB7dGhlYXRlck5hbWUudG9VcHBlckNhc2UoKX0gLVxyXG4gICAgICA8L0JveD5cclxuICAgICAgPEZsZXhcclxuICAgICAgICBoZWlnaHQ9XCIxNTBweFwiXHJcbiAgICAgICAgYWxpZ25JdGVtcz1cImNlbnRlclwiXHJcbiAgICAgICAgX2hvdmVyPXt7IGJnOiAnZ2FpbnNib3JvJyB9fVxyXG4gICAgICAgIGN1cnNvcj1cInBvaW50ZXJcIlxyXG4gICAgICAgIG9uQ2xpY2s9eygpID0+IG1vdmVzLmRlcGxveShnZXRUaGVhdGVySWQoKSl9XHJcbiAgICAgICAgb25Db250ZXh0TWVudT17b25SaWdodENsaWNrfVxyXG4gICAgICA+XHJcbiAgICAgICAge2RlcGxveWVkQ2FyZHNbcGxheWVySUQhXS5tYXAoKGNhcmQpID0+IChcclxuICAgICAgICAgIDxDYXJkXHJcbiAgICAgICAgICAgIGtleT17Y2FyZC5jYXJkSUR9XHJcbiAgICAgICAgICAgIGNhcmQ9e2NhcmR9XHJcbiAgICAgICAgICAgIGRlcGxveWVkPVwic2VsZlwiXHJcbiAgICAgICAgICAgIHNldERlc2M9e3NldERlc2N9XHJcbiAgICAgICAgICAvPlxyXG4gICAgICAgICkpfVxyXG4gICAgICA8L0ZsZXg+XHJcbiAgICA8L0JveD5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgVGhlYXRlcjtcclxuIl0sIm5hbWVzIjpbIkJveCIsIkZsZXgiLCJ0aGVtZSIsInVzZUJvYXJkQ29udGV4dCIsIkNhcmQiLCJUaGVhdGVyIiwidGhlYXRlciIsInNldERlc2MiLCJnZXRUaGVhdGVySWQiLCJHIiwicGxheWluZ0ZpZWxkIiwiZmluZEluZGV4IiwidCIsInRoZWF0ZXJOYW1lIiwib25SaWdodENsaWNrIiwiZSIsInByZXZlbnREZWZhdWx0IiwibW92ZXMiLCJpbXByb3Zpc2UiLCJkZXBsb3llZENhcmRzIiwicGxheWVySUQiLCJ3IiwiaGVpZ2h0IiwiYWxpZ25JdGVtcyIsIk51bWJlciIsInRvU3RyaW5nIiwibWFwIiwiY2FyZCIsImRlcGxveWVkIiwiY2FyZElEIiwiY29sb3IiLCJiZyIsInRleHRBbGlnbiIsInRvVXBwZXJDYXNlIiwiX2hvdmVyIiwiY3Vyc29yIiwib25DbGljayIsImRlcGxveSIsIm9uQ29udGV4dE1lbnUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/components/board/Theater.tsx\n"));

/***/ }),

/***/ "./src/components/board/TheaterRow.tsx":
/*!*********************************************!*\
  !*** ./src/components/board/TheaterRow.tsx ***!
  \*********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @chakra-ui/react */ \"./node_modules/@chakra-ui/react/dist/chakra-ui-react.esm.js\");\n/* harmony import */ var _Board__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Board */ \"./src/components/board/Board.tsx\");\n/* harmony import */ var _SupremeCommanderCard__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SupremeCommanderCard */ \"./src/components/board/SupremeCommanderCard.tsx\");\n/* harmony import */ var _Theater__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Theater */ \"./src/components/board/Theater.tsx\");\nvar _this = undefined;\n\nvar _s = $RefreshSig$();\n\n\n\n\nvar TheaterRow = function(param) {\n    var setDesc = param.setDesc;\n    _s();\n    var ref = (0,_Board__WEBPACK_IMPORTED_MODULE_1__.useBoardContext)(), G = ref.G, playerID = ref.playerID;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__.Flex, {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__.Flex, {\n                h: \"300px\",\n                alignItems: \"flex-end\",\n                marginRight: \"10px\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_SupremeCommanderCard__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                    playerID: playerID\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\TheaterRow.tsx\",\n                    lineNumber: 16,\n                    columnNumber: 9\n                }, _this)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\TheaterRow.tsx\",\n                lineNumber: 15,\n                columnNumber: 7\n            }, _this),\n            G.playingField.map(function(theater) {\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Theater__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                    theater: theater,\n                    setDesc: setDesc\n                }, theater.theater, false, {\n                    fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\TheaterRow.tsx\",\n                    lineNumber: 19,\n                    columnNumber: 9\n                }, _this);\n            }),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__.Flex, {\n                h: \"300px\",\n                alignItems: \"flex-start\",\n                marginLeft: \"10px\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_SupremeCommanderCard__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                    playerID: (Number(playerID) ^ 1).toString()\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\TheaterRow.tsx\",\n                    lineNumber: 22,\n                    columnNumber: 9\n                }, _this)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\TheaterRow.tsx\",\n                lineNumber: 21,\n                columnNumber: 7\n            }, _this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\TheaterRow.tsx\",\n        lineNumber: 14,\n        columnNumber: 5\n    }, _this);\n};\n_s(TheaterRow, \"T/kAuhCNPCp8d58oqAQ0ySd3q/4=\", false, function() {\n    return [\n        _Board__WEBPACK_IMPORTED_MODULE_1__.useBoardContext\n    ];\n});\n_c = TheaterRow;\n/* harmony default export */ __webpack_exports__[\"default\"] = (TheaterRow);\nvar _c;\n$RefreshReg$(_c, \"TheaterRow\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9ib2FyZC9UaGVhdGVyUm93LnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7OztBQUF3QztBQUNFO0FBQ2dCO0FBQzFCO0FBTWhDLElBQU1JLFVBQVUsR0FBRyxnQkFBd0I7UUFBckJDLE9BQU8sU0FBUEEsT0FBTzs7SUFDM0IsSUFBd0JKLEdBQWlCLEdBQWpCQSx1REFBZSxFQUFFLEVBQWpDSyxDQUFDLEdBQWVMLEdBQWlCLENBQWpDSyxDQUFDLEVBQUVDLFFBQVEsR0FBS04sR0FBaUIsQ0FBOUJNLFFBQVE7SUFFbkIscUJBQ0UsOERBQUNQLGtEQUFJO1FBQUNRLFVBQVUsRUFBQyxRQUFRO1FBQUNDLGNBQWMsRUFBQyxRQUFROzswQkFDL0MsOERBQUNULGtEQUFJO2dCQUFDVSxDQUFDLEVBQUMsT0FBTztnQkFBQ0YsVUFBVSxFQUFDLFVBQVU7Z0JBQUNHLFdBQVcsRUFBQyxNQUFNOzBCQUN0RCw0RUFBQ1QsNkRBQW9CO29CQUFDSyxRQUFRLEVBQUVBLFFBQVE7Ozs7O3lCQUFLOzs7OztxQkFDeEM7WUFDTkQsQ0FBQyxDQUFDTSxZQUFZLENBQUNDLEdBQUcsQ0FBQyxTQUFDQyxPQUFPO3FDQUMxQiw4REFBQ1gsZ0RBQU87b0JBQXVCVyxPQUFPLEVBQUVBLE9BQU87b0JBQUVULE9BQU8sRUFBRUEsT0FBTzttQkFBbkRTLE9BQU8sQ0FBQ0EsT0FBTzs7Ozt5QkFBd0M7YUFDdEUsQ0FBQzswQkFDRiw4REFBQ2Qsa0RBQUk7Z0JBQUNVLENBQUMsRUFBQyxPQUFPO2dCQUFDRixVQUFVLEVBQUMsWUFBWTtnQkFBQ08sVUFBVSxFQUFDLE1BQU07MEJBQ3ZELDRFQUFDYiw2REFBb0I7b0JBQUNLLFFBQVEsRUFBRSxDQUFDUyxNQUFNLENBQUNULFFBQVEsQ0FBQyxHQUFHLENBQUMsRUFBRVUsUUFBUSxFQUFFOzs7Ozt5QkFBSTs7Ozs7cUJBQ2hFOzs7Ozs7YUFDRixDQUNQO0FBQ0osQ0FBQztHQWhCS2IsVUFBVTs7UUFDVUgsbURBQWU7OztBQURuQ0csS0FBQUEsVUFBVTtBQWtCaEIsK0RBQWVBLFVBQVUsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvY29tcG9uZW50cy9ib2FyZC9UaGVhdGVyUm93LnRzeD9jODA5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZsZXggfSBmcm9tICdAY2hha3JhLXVpL3JlYWN0JztcclxuaW1wb3J0IHsgdXNlQm9hcmRDb250ZXh0IH0gZnJvbSAnLi9Cb2FyZCc7XHJcbmltcG9ydCBTdXByZW1lQ29tbWFuZGVyQ2FyZCBmcm9tICcuL1N1cHJlbWVDb21tYW5kZXJDYXJkJztcclxuaW1wb3J0IFRoZWF0ZXIgZnJvbSAnLi9UaGVhdGVyJztcclxuXHJcbmludGVyZmFjZSBQcm9wcyB7XHJcbiAgc2V0RGVzYz86IChkZXNjOiBzdHJpbmcpID0+IHZvaWQ7XHJcbn1cclxuXHJcbmNvbnN0IFRoZWF0ZXJSb3cgPSAoeyBzZXREZXNjIH06IFByb3BzKSA9PiB7XHJcbiAgY29uc3QgeyBHLCBwbGF5ZXJJRCB9ID0gdXNlQm9hcmRDb250ZXh0KCk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8RmxleCBhbGlnbkl0ZW1zPVwiY2VudGVyXCIganVzdGlmeUNvbnRlbnQ9XCJjZW50ZXJcIj5cclxuICAgICAgPEZsZXggaD1cIjMwMHB4XCIgYWxpZ25JdGVtcz1cImZsZXgtZW5kXCIgbWFyZ2luUmlnaHQ9XCIxMHB4XCI+XHJcbiAgICAgICAgPFN1cHJlbWVDb21tYW5kZXJDYXJkIHBsYXllcklEPXtwbGF5ZXJJRCF9IC8+XHJcbiAgICAgIDwvRmxleD5cclxuICAgICAge0cucGxheWluZ0ZpZWxkLm1hcCgodGhlYXRlcikgPT4gKFxyXG4gICAgICAgIDxUaGVhdGVyIGtleT17dGhlYXRlci50aGVhdGVyfSB0aGVhdGVyPXt0aGVhdGVyfSBzZXREZXNjPXtzZXREZXNjfSAvPlxyXG4gICAgICApKX1cclxuICAgICAgPEZsZXggaD1cIjMwMHB4XCIgYWxpZ25JdGVtcz1cImZsZXgtc3RhcnRcIiBtYXJnaW5MZWZ0PVwiMTBweFwiPlxyXG4gICAgICAgIDxTdXByZW1lQ29tbWFuZGVyQ2FyZCBwbGF5ZXJJRD17KE51bWJlcihwbGF5ZXJJRCkgXiAxKS50b1N0cmluZygpfSAvPlxyXG4gICAgICA8L0ZsZXg+XHJcbiAgICA8L0ZsZXg+XHJcbiAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFRoZWF0ZXJSb3c7XHJcbiJdLCJuYW1lcyI6WyJGbGV4IiwidXNlQm9hcmRDb250ZXh0IiwiU3VwcmVtZUNvbW1hbmRlckNhcmQiLCJUaGVhdGVyIiwiVGhlYXRlclJvdyIsInNldERlc2MiLCJHIiwicGxheWVySUQiLCJhbGlnbkl0ZW1zIiwianVzdGlmeUNvbnRlbnQiLCJoIiwibWFyZ2luUmlnaHQiLCJwbGF5aW5nRmllbGQiLCJtYXAiLCJ0aGVhdGVyIiwibWFyZ2luTGVmdCIsIk51bWJlciIsInRvU3RyaW5nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/components/board/TheaterRow.tsx\n"));

/***/ }),

/***/ "./src/components/board/WithdrawTable.tsx":
/*!************************************************!*\
  !*** ./src/components/board/WithdrawTable.tsx ***!
  \************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @chakra-ui/react */ \"./node_modules/@chakra-ui/react/dist/chakra-ui-react.esm.js\");\n/* harmony import */ var _Board__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Board */ \"./src/components/board/Board.tsx\");\nvar _this = undefined;\n\nvar _s = $RefreshSig$();\n\n\nvar scoringChartP1 = [\n    {\n        cardsRemaining: \"4 - 6\",\n        opponentPoints: 2\n    },\n    {\n        cardsRemaining: \"2 - 3\",\n        opponentPoints: 3\n    },\n    {\n        cardsRemaining: \"1\",\n        opponentPoints: 4\n    },\n    {\n        cardsRemaining: \"0\",\n        opponentPoints: 6\n    }, \n];\nvar scoringChartP2 = [\n    {\n        cardsRemaining: \"5 - 6\",\n        opponentPoints: 2\n    },\n    {\n        cardsRemaining: \"3 - 4\",\n        opponentPoints: 3\n    },\n    {\n        cardsRemaining: \"2\",\n        opponentPoints: 4\n    },\n    {\n        cardsRemaining: \"0 - 1\",\n        opponentPoints: 6\n    }, \n];\nvar WithdrawTable = function(param) {\n    var scoringChart = param.scoringChart;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.TableContainer, {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.Table, {\n            size: \"sm\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.Thead, {\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.Tr, {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.Th, {\n                                isNumeric: true,\n                                children: \"Cards Remaining In Hand\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\WithdrawTable.tsx\",\n                                lineNumber: 46,\n                                columnNumber: 13\n                            }, _this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.Th, {\n                                isNumeric: true,\n                                children: \"Points Opponent Will Score\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\WithdrawTable.tsx\",\n                                lineNumber: 47,\n                                columnNumber: 13\n                            }, _this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\WithdrawTable.tsx\",\n                        lineNumber: 45,\n                        columnNumber: 11\n                    }, _this)\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\WithdrawTable.tsx\",\n                    lineNumber: 44,\n                    columnNumber: 9\n                }, _this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.Tbody, {\n                    children: scoringChart.map(function(data) {\n                        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.Tr, {\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.Td, {\n                                    isNumeric: true,\n                                    children: data.cardsRemaining\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\WithdrawTable.tsx\",\n                                    lineNumber: 53,\n                                    columnNumber: 15\n                                }, _this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.Td, {\n                                    isNumeric: true,\n                                    children: data.opponentPoints\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\WithdrawTable.tsx\",\n                                    lineNumber: 54,\n                                    columnNumber: 15\n                                }, _this)\n                            ]\n                        }, data.opponentPoints, true, {\n                            fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\WithdrawTable.tsx\",\n                            lineNumber: 52,\n                            columnNumber: 13\n                        }, _this);\n                    })\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\WithdrawTable.tsx\",\n                    lineNumber: 50,\n                    columnNumber: 9\n                }, _this)\n            ]\n        }, void 0, true, {\n            fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\WithdrawTable.tsx\",\n            lineNumber: 43,\n            columnNumber: 7\n        }, _this)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\WithdrawTable.tsx\",\n        lineNumber: 42,\n        columnNumber: 5\n    }, _this);\n};\n_c = WithdrawTable;\nvar TabbedWithdrawTables = function() {\n    var ref;\n    _s();\n    var ref1 = (0,_Board__WEBPACK_IMPORTED_MODULE_1__.useBoardContext)(), G = ref1.G, playerID = ref1.playerID;\n    var firstPlayer = (ref = G.players.find(function(p) {\n        return p.ID === playerID;\n    })) === null || ref === void 0 ? void 0 : ref.firstPlayer;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.Tabs, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.TabList, {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.Tab, {\n                        children: [\n                            \"1st Player \",\n                            firstPlayer && \"(You)\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\WithdrawTable.tsx\",\n                        lineNumber: 71,\n                        columnNumber: 9\n                    }, _this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.Tab, {\n                        children: [\n                            \"2nd Player \",\n                            !firstPlayer && \"(You)\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\WithdrawTable.tsx\",\n                        lineNumber: 72,\n                        columnNumber: 9\n                    }, _this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\WithdrawTable.tsx\",\n                lineNumber: 70,\n                columnNumber: 7\n            }, _this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.TabPanels, {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.TabPanel, {\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(WithdrawTable, {\n                            scoringChart: scoringChartP1\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\WithdrawTable.tsx\",\n                            lineNumber: 77,\n                            columnNumber: 11\n                        }, _this)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\WithdrawTable.tsx\",\n                        lineNumber: 76,\n                        columnNumber: 9\n                    }, _this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.TabPanel, {\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(WithdrawTable, {\n                            scoringChart: scoringChartP2\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\WithdrawTable.tsx\",\n                            lineNumber: 80,\n                            columnNumber: 11\n                        }, _this)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\WithdrawTable.tsx\",\n                        lineNumber: 79,\n                        columnNumber: 9\n                    }, _this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\WithdrawTable.tsx\",\n                lineNumber: 75,\n                columnNumber: 7\n            }, _this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\components\\\\board\\\\WithdrawTable.tsx\",\n        lineNumber: 69,\n        columnNumber: 5\n    }, _this);\n};\n_s(TabbedWithdrawTables, \"T/kAuhCNPCp8d58oqAQ0ySd3q/4=\", false, function() {\n    return [\n        _Board__WEBPACK_IMPORTED_MODULE_1__.useBoardContext\n    ];\n});\n_c1 = TabbedWithdrawTables;\n/* harmony default export */ __webpack_exports__[\"default\"] = (TabbedWithdrawTables);\nvar _c, _c1;\n$RefreshReg$(_c, \"WithdrawTable\");\n$RefreshReg$(_c1, \"TabbedWithdrawTables\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9ib2FyZC9XaXRoZHJhd1RhYmxlLnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBOzs7QUFhMEI7QUFDZ0I7QUFPMUMsSUFBTWEsY0FBYyxHQUFtQjtJQUNyQztRQUFFQyxjQUFjLEVBQUUsT0FBTztRQUFFQyxjQUFjLEVBQUUsQ0FBQztLQUFFO0lBQzlDO1FBQUVELGNBQWMsRUFBRSxPQUFPO1FBQUVDLGNBQWMsRUFBRSxDQUFDO0tBQUU7SUFDOUM7UUFBRUQsY0FBYyxFQUFFLEdBQUc7UUFBRUMsY0FBYyxFQUFFLENBQUM7S0FBRTtJQUMxQztRQUFFRCxjQUFjLEVBQUUsR0FBRztRQUFFQyxjQUFjLEVBQUUsQ0FBQztLQUFFO0NBQzNDO0FBRUQsSUFBTUMsY0FBYyxHQUFtQjtJQUNyQztRQUFFRixjQUFjLEVBQUUsT0FBTztRQUFFQyxjQUFjLEVBQUUsQ0FBQztLQUFFO0lBQzlDO1FBQUVELGNBQWMsRUFBRSxPQUFPO1FBQUVDLGNBQWMsRUFBRSxDQUFDO0tBQUU7SUFDOUM7UUFBRUQsY0FBYyxFQUFFLEdBQUc7UUFBRUMsY0FBYyxFQUFFLENBQUM7S0FBRTtJQUMxQztRQUFFRCxjQUFjLEVBQUUsT0FBTztRQUFFQyxjQUFjLEVBQUUsQ0FBQztLQUFFO0NBQy9DO0FBRUQsSUFBTUUsYUFBYSxHQUFHLGdCQUlIO1FBSGpCQyxZQUFZLFNBQVpBLFlBQVk7SUFJWixxQkFDRSw4REFBQ2pCLDREQUFjO2tCQUNiLDRFQUFDRCxtREFBSztZQUFDbUIsSUFBSSxFQUFDLElBQUk7OzhCQUNkLDhEQUFDWCxtREFBSzs4QkFDSiw0RUFBQ0MsZ0RBQUU7OzBDQUNELDhEQUFDRixnREFBRTtnQ0FBQ2EsU0FBUzswQ0FBQyx5QkFBdUI7Ozs7O3FDQUFLOzBDQUMxQyw4REFBQ2IsZ0RBQUU7Z0NBQUNhLFNBQVM7MENBQUMsNEJBQTBCOzs7OztxQ0FBSzs7Ozs7OzZCQUMxQzs7Ozs7eUJBQ0M7OEJBQ1IsOERBQUNmLG1EQUFLOzhCQUNIYSxZQUFZLENBQUNHLEdBQUcsQ0FBQyxTQUFDQyxJQUFJOzZDQUNyQiw4REFBQ2IsZ0RBQUU7OzhDQUNELDhEQUFDSCxnREFBRTtvQ0FBQ2MsU0FBUzs4Q0FBRUUsSUFBSSxDQUFDUixjQUFjOzs7Ozt5Q0FBTTs4Q0FDeEMsOERBQUNSLGdEQUFFO29DQUFDYyxTQUFTOzhDQUFFRSxJQUFJLENBQUNQLGNBQWM7Ozs7O3lDQUFNOzsyQkFGakNPLElBQUksQ0FBQ1AsY0FBYzs7OztpQ0FHdkI7cUJBQ04sQ0FBQzs7Ozs7eUJBQ0k7Ozs7OztpQkFDRjs7Ozs7YUFDTyxDQUNqQjtBQUNKLENBQUM7QUF6QktFLEtBQUFBLGFBQWE7QUEyQm5CLElBQU1NLG9CQUFvQixHQUFHLFdBQU07UUFHYkMsR0FBd0M7O0lBRjVELElBQXdCWixJQUFpQixHQUFqQkEsdURBQWUsRUFBRSxFQUFqQ1ksQ0FBQyxHQUFlWixJQUFpQixDQUFqQ1ksQ0FBQyxFQUFFQyxRQUFRLEdBQUtiLElBQWlCLENBQTlCYSxRQUFRO0lBRW5CLElBQU1DLFdBQVcsR0FBR0YsQ0FBQUEsR0FBd0MsR0FBeENBLENBQUMsQ0FBQ0csT0FBTyxDQUFDQyxJQUFJLENBQUMsU0FBQ0MsQ0FBQztlQUFLQSxDQUFDLENBQUNDLEVBQUUsS0FBS0wsUUFBUTtLQUFBLENBQUMsY0FBeENELEdBQXdDLFdBQWEsR0FBckRBLEtBQUFBLENBQXFELEdBQXJEQSxHQUF3QyxDQUFFRSxXQUFXO0lBRXpFLHFCQUNFLDhEQUFDdkIsa0RBQUk7OzBCQUNILDhEQUFDRCxxREFBTzs7a0NBQ04sOERBQUNFLGlEQUFHOzs0QkFBQyxhQUFXOzRCQUFDc0IsV0FBVyxJQUFJLE9BQU87Ozs7Ozs2QkFBTztrQ0FDOUMsOERBQUN0QixpREFBRzs7NEJBQUMsYUFBVzs0QkFBQyxDQUFDc0IsV0FBVyxJQUFJLE9BQU87Ozs7Ozs2QkFBTzs7Ozs7O3FCQUN2QzswQkFFViw4REFBQ2hCLHVEQUFTOztrQ0FDUiw4REFBQ0Msc0RBQVE7a0NBQ1AsNEVBQUNNLGFBQWE7NEJBQUNDLFlBQVksRUFBRUwsY0FBYzs7Ozs7aUNBQUk7Ozs7OzZCQUN0QztrQ0FDWCw4REFBQ0Ysc0RBQVE7a0NBQ1AsNEVBQUNNLGFBQWE7NEJBQUNDLFlBQVksRUFBRUYsY0FBYzs7Ozs7aUNBQUk7Ozs7OzZCQUN0Qzs7Ozs7O3FCQUNEOzs7Ozs7YUFDUCxDQUNQO0FBQ0osQ0FBQztHQXRCS08sb0JBQW9COztRQUNBWCxtREFBZTs7O0FBRG5DVyxNQUFBQSxvQkFBb0I7QUF3QjFCLCtEQUFlQSxvQkFBb0IsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvY29tcG9uZW50cy9ib2FyZC9XaXRoZHJhd1RhYmxlLnRzeD81MGNkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XHJcbiAgVGFibGUsXHJcbiAgVGFibGVDb250YWluZXIsXHJcbiAgVGFiTGlzdCxcclxuICBUYWJzLFxyXG4gIFRhYixcclxuICBUYm9keSxcclxuICBUZCxcclxuICBUaCxcclxuICBUaGVhZCxcclxuICBUcixcclxuICBUYWJQYW5lbHMsXHJcbiAgVGFiUGFuZWwsXHJcbn0gZnJvbSAnQGNoYWtyYS11aS9yZWFjdCc7XHJcbmltcG9ydCB7IHVzZUJvYXJkQ29udGV4dCB9IGZyb20gJy4vQm9hcmQnO1xyXG5cclxuaW50ZXJmYWNlIFNjb3JpbmdDaGFydCB7XHJcbiAgY2FyZHNSZW1haW5pbmc6IHN0cmluZztcclxuICBvcHBvbmVudFBvaW50czogbnVtYmVyO1xyXG59XHJcblxyXG5jb25zdCBzY29yaW5nQ2hhcnRQMTogU2NvcmluZ0NoYXJ0W10gPSBbXHJcbiAgeyBjYXJkc1JlbWFpbmluZzogJzQgLSA2Jywgb3Bwb25lbnRQb2ludHM6IDIgfSxcclxuICB7IGNhcmRzUmVtYWluaW5nOiAnMiAtIDMnLCBvcHBvbmVudFBvaW50czogMyB9LFxyXG4gIHsgY2FyZHNSZW1haW5pbmc6ICcxJywgb3Bwb25lbnRQb2ludHM6IDQgfSxcclxuICB7IGNhcmRzUmVtYWluaW5nOiAnMCcsIG9wcG9uZW50UG9pbnRzOiA2IH0sXHJcbl07XHJcblxyXG5jb25zdCBzY29yaW5nQ2hhcnRQMjogU2NvcmluZ0NoYXJ0W10gPSBbXHJcbiAgeyBjYXJkc1JlbWFpbmluZzogJzUgLSA2Jywgb3Bwb25lbnRQb2ludHM6IDIgfSxcclxuICB7IGNhcmRzUmVtYWluaW5nOiAnMyAtIDQnLCBvcHBvbmVudFBvaW50czogMyB9LFxyXG4gIHsgY2FyZHNSZW1haW5pbmc6ICcyJywgb3Bwb25lbnRQb2ludHM6IDQgfSxcclxuICB7IGNhcmRzUmVtYWluaW5nOiAnMCAtIDEnLCBvcHBvbmVudFBvaW50czogNiB9LFxyXG5dO1xyXG5cclxuY29uc3QgV2l0aGRyYXdUYWJsZSA9ICh7XHJcbiAgc2NvcmluZ0NoYXJ0LFxyXG59OiB7XHJcbiAgc2NvcmluZ0NoYXJ0OiBTY29yaW5nQ2hhcnRbXTtcclxufSk6IEpTWC5FbGVtZW50ID0+IHtcclxuICByZXR1cm4gKFxyXG4gICAgPFRhYmxlQ29udGFpbmVyPlxyXG4gICAgICA8VGFibGUgc2l6ZT1cInNtXCI+XHJcbiAgICAgICAgPFRoZWFkPlxyXG4gICAgICAgICAgPFRyPlxyXG4gICAgICAgICAgICA8VGggaXNOdW1lcmljPkNhcmRzIFJlbWFpbmluZyBJbiBIYW5kPC9UaD5cclxuICAgICAgICAgICAgPFRoIGlzTnVtZXJpYz5Qb2ludHMgT3Bwb25lbnQgV2lsbCBTY29yZTwvVGg+XHJcbiAgICAgICAgICA8L1RyPlxyXG4gICAgICAgIDwvVGhlYWQ+XHJcbiAgICAgICAgPFRib2R5PlxyXG4gICAgICAgICAge3Njb3JpbmdDaGFydC5tYXAoKGRhdGEpID0+IChcclxuICAgICAgICAgICAgPFRyIGtleT17ZGF0YS5vcHBvbmVudFBvaW50c30+XHJcbiAgICAgICAgICAgICAgPFRkIGlzTnVtZXJpYz57ZGF0YS5jYXJkc1JlbWFpbmluZ308L1RkPlxyXG4gICAgICAgICAgICAgIDxUZCBpc051bWVyaWM+e2RhdGEub3Bwb25lbnRQb2ludHN9PC9UZD5cclxuICAgICAgICAgICAgPC9Ucj5cclxuICAgICAgICAgICkpfVxyXG4gICAgICAgIDwvVGJvZHk+XHJcbiAgICAgIDwvVGFibGU+XHJcbiAgICA8L1RhYmxlQ29udGFpbmVyPlxyXG4gICk7XHJcbn07XHJcblxyXG5jb25zdCBUYWJiZWRXaXRoZHJhd1RhYmxlcyA9ICgpID0+IHtcclxuICBjb25zdCB7IEcsIHBsYXllcklEIH0gPSB1c2VCb2FyZENvbnRleHQoKTtcclxuXHJcbiAgY29uc3QgZmlyc3RQbGF5ZXIgPSBHLnBsYXllcnMuZmluZCgocCkgPT4gcC5JRCA9PT0gcGxheWVySUQpPy5maXJzdFBsYXllcjtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxUYWJzPlxyXG4gICAgICA8VGFiTGlzdD5cclxuICAgICAgICA8VGFiPjFzdCBQbGF5ZXIge2ZpcnN0UGxheWVyICYmICcoWW91KSd9PC9UYWI+XHJcbiAgICAgICAgPFRhYj4ybmQgUGxheWVyIHshZmlyc3RQbGF5ZXIgJiYgJyhZb3UpJ308L1RhYj5cclxuICAgICAgPC9UYWJMaXN0PlxyXG5cclxuICAgICAgPFRhYlBhbmVscz5cclxuICAgICAgICA8VGFiUGFuZWw+XHJcbiAgICAgICAgICA8V2l0aGRyYXdUYWJsZSBzY29yaW5nQ2hhcnQ9e3Njb3JpbmdDaGFydFAxfSAvPlxyXG4gICAgICAgIDwvVGFiUGFuZWw+XHJcbiAgICAgICAgPFRhYlBhbmVsPlxyXG4gICAgICAgICAgPFdpdGhkcmF3VGFibGUgc2NvcmluZ0NoYXJ0PXtzY29yaW5nQ2hhcnRQMn0gLz5cclxuICAgICAgICA8L1RhYlBhbmVsPlxyXG4gICAgICA8L1RhYlBhbmVscz5cclxuICAgIDwvVGFicz5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgVGFiYmVkV2l0aGRyYXdUYWJsZXM7XHJcbiJdLCJuYW1lcyI6WyJUYWJsZSIsIlRhYmxlQ29udGFpbmVyIiwiVGFiTGlzdCIsIlRhYnMiLCJUYWIiLCJUYm9keSIsIlRkIiwiVGgiLCJUaGVhZCIsIlRyIiwiVGFiUGFuZWxzIiwiVGFiUGFuZWwiLCJ1c2VCb2FyZENvbnRleHQiLCJzY29yaW5nQ2hhcnRQMSIsImNhcmRzUmVtYWluaW5nIiwib3Bwb25lbnRQb2ludHMiLCJzY29yaW5nQ2hhcnRQMiIsIldpdGhkcmF3VGFibGUiLCJzY29yaW5nQ2hhcnQiLCJzaXplIiwiaXNOdW1lcmljIiwibWFwIiwiZGF0YSIsIlRhYmJlZFdpdGhkcmF3VGFibGVzIiwiRyIsInBsYXllcklEIiwiZmlyc3RQbGF5ZXIiLCJwbGF5ZXJzIiwiZmluZCIsInAiLCJJRCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/board/WithdrawTable.tsx\n"));

/***/ }),

/***/ "./src/config/index.ts":
/*!*****************************!*\
  !*** ./src/config/index.ts ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DEFAULT_PORT\": function() { return /* binding */ DEFAULT_PORT; },\n/* harmony export */   \"GAME_ID\": function() { return /* binding */ GAME_ID; },\n/* harmony export */   \"isProduction\": function() { return /* binding */ isProduction; }\n/* harmony export */ });\nvar DEFAULT_PORT = 3001;\nvar isProduction = \"development\" === \"production\";\nvar GAME_ID = \"airlandsea\";\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29uZmlnL2luZGV4LnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFPLElBQU1BLFlBQVksR0FBRyxJQUFJLENBQUM7QUFDMUIsSUFBTUMsWUFBWSxHQUFHQyxhQURmLEtBQ3dDLFlBQVksQ0FBQztBQUMzRCxJQUFNQyxPQUFPLEdBQUcsWUFBWSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9jb25maWcvaW5kZXgudHM/ZGE5MCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgREVGQVVMVF9QT1JUID0gMzAwMTtcclxuZXhwb3J0IGNvbnN0IGlzUHJvZHVjdGlvbiA9IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbic7XHJcbmV4cG9ydCBjb25zdCBHQU1FX0lEID0gJ2FpcmxhbmRzZWEnO1xyXG4iXSwibmFtZXMiOlsiREVGQVVMVF9QT1JUIiwiaXNQcm9kdWN0aW9uIiwicHJvY2VzcyIsIkdBTUVfSUQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/config/index.ts\n"));

/***/ }),

/***/ "./src/config/theme.ts":
/*!*****************************!*\
  !*** ./src/config/theme.ts ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"theme\": function() { return /* binding */ theme; }\n/* harmony export */ });\nvar theme = {\n    air: \"#5b574b\",\n    land: \"#5a7237\",\n    sea: \"#356479\",\n    faceDown: \"#34312e\",\n    first: \"#c56569\",\n    second: \"#687daf\"\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29uZmlnL3RoZW1lLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxJQUFNQSxLQUFLLEdBQTJCO0lBQzNDQyxHQUFHLEVBQUUsU0FBUztJQUNkQyxJQUFJLEVBQUUsU0FBUztJQUNmQyxHQUFHLEVBQUUsU0FBUztJQUNkQyxRQUFRLEVBQUUsU0FBUztJQUNuQkMsS0FBSyxFQUFFLFNBQVM7SUFDaEJDLE1BQU0sRUFBRSxTQUFTO0NBQ2xCLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbmZpZy90aGVtZS50cz9hNGJmIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCB0aGVtZTogUmVjb3JkPHN0cmluZywgc3RyaW5nPiA9IHtcclxuICBhaXI6ICcjNWI1NzRiJyxcclxuICBsYW5kOiAnIzVhNzIzNycsXHJcbiAgc2VhOiAnIzM1NjQ3OScsXHJcbiAgZmFjZURvd246ICcjMzQzMTJlJyxcclxuICBmaXJzdDogJyNjNTY1NjknLFxyXG4gIHNlY29uZDogJyM2ODdkYWYnLFxyXG59O1xyXG4iXSwibmFtZXMiOlsidGhlbWUiLCJhaXIiLCJsYW5kIiwic2VhIiwiZmFjZURvd24iLCJmaXJzdCIsInNlY29uZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/config/theme.ts\n"));

/***/ }),

/***/ "./src/game/cardInfo.ts":
/*!******************************!*\
  !*** ./src/game/cardInfo.ts ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cardInfoRecords\": function() { return /* binding */ cardInfoRecords; }\n/* harmony export */ });\nvar cardInfoRecords = {\n    Support: {\n        name: \"Support\",\n        desc: \"You gain +3 strength in each adjacent theater.\",\n        strength: 1,\n        theater: \"air\",\n        type: \"ongoing\"\n    },\n    Air_Drop: {\n        name: \"Air Drop\",\n        desc: \"On your next turn, you may play a battle card to a non-matching theater.\",\n        strength: 2,\n        theater: \"air\",\n        type: \"instant\"\n    },\n    Maneuver_Air: {\n        name: \"Maneuver\",\n        desc: \"Flip a battle card in an adjacent theater.\",\n        strength: 3,\n        theater: \"air\",\n        type: \"instant\"\n    },\n    Aerodrome: {\n        name: \"Aerodrome\",\n        desc: \"You may play battle cards of strength 3 or less to non-matching theaters.\",\n        strength: 4,\n        theater: \"air\",\n        type: \"ongoing\",\n        ongoingType: \"player\"\n    },\n    Containment: {\n        name: \"Containment\",\n        desc: \"If either player plays a battle card face-down, immediately discard that card.\",\n        strength: 5,\n        theater: \"air\",\n        type: \"ongoing\",\n        ongoingType: \"global\"\n    },\n    Heavy_Bombers: {\n        name: \"Heavy Bombers\",\n        desc: \"\",\n        strength: 6,\n        theater: \"air\",\n        type: \"none\"\n    },\n    Reinforce: {\n        name: \"Reinforce\",\n        desc: \"Look at the top card of the battle deck. You may play it face-down to an adjacent theater.\",\n        strength: 1,\n        theater: \"land\",\n        type: \"instant\"\n    },\n    Ambush: {\n        name: \"Ambush\",\n        desc: \"Flip a battle card in any theater.\",\n        strength: 2,\n        theater: \"land\",\n        type: \"instant\"\n    },\n    Maneuver_Land: {\n        name: \"Maneuver\",\n        desc: \"Flip a battle card in an adjacent theater.\",\n        strength: 3,\n        theater: \"land\",\n        type: \"instant\"\n    },\n    Cover_Fire: {\n        name: \"Cover Fire\",\n        desc: \"All battle cards covered by this card are now strength 4.\",\n        strength: 4,\n        theater: \"land\",\n        type: \"ongoing\",\n        ongoingType: \"player\"\n    },\n    Disrupt: {\n        name: \"Disrupt\",\n        desc: \"Your opponent chooses and flips 1 of their battle cards. Then you flip 1 of yours.\",\n        strength: 5,\n        theater: \"land\",\n        type: \"instant\"\n    },\n    Heavy_Tanks: {\n        name: \"Heavy Tanks\",\n        desc: \"\",\n        strength: 6,\n        theater: \"land\",\n        type: \"none\"\n    },\n    Transport: {\n        name: \"Transport\",\n        desc: \"You may move 1 of your battle cards to a different theater.\",\n        strength: 1,\n        theater: \"sea\",\n        type: \"instant\"\n    },\n    Escalation: {\n        name: \"Escalation\",\n        desc: \"All of your face-down battle cards are now strength 4.\",\n        strength: 2,\n        theater: \"sea\",\n        type: \"ongoing\",\n        ongoingType: \"player\"\n    },\n    Maneuver_Sea: {\n        name: \"Maneuver\",\n        desc: \"Flip a battle card in an adjacent theater.\",\n        strength: 3,\n        theater: \"sea\",\n        type: \"instant\"\n    },\n    Redeploy: {\n        name: \"Redeploy\",\n        desc: \"Return 1 of your face-down battle cards to your hand. If you do, gain an extra turn.\",\n        strength: 4,\n        theater: \"sea\",\n        type: \"instant\"\n    },\n    Blockade: {\n        name: \"Blockade\",\n        desc: \"If a battle card is played in an adjacent theater with 3 or more cards already in it (counting both players' cards), discard that card with no effect.\",\n        strength: 5,\n        theater: \"sea\",\n        type: \"ongoing\",\n        ongoingType: \"global\"\n    },\n    Super_Battleship: {\n        name: \"Super Battleship\",\n        desc: \"\",\n        strength: 6,\n        theater: \"sea\",\n        type: \"none\"\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/game/cardInfo.ts\n"));

/***/ }),

/***/ "./src/game/cards.ts":
/*!***************************!*\
  !*** ./src/game/cards.ts ***!
  \***************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"battleCards\": function() { return /* binding */ battleCards; }\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @swc/helpers/src/_object_spread.mjs */ \"./node_modules/@swc/helpers/src/_object_spread.mjs\");\n/* harmony import */ var _swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @swc/helpers/src/_object_spread_props.mjs */ \"./node_modules/@swc/helpers/src/_object_spread_props.mjs\");\n/* harmony import */ var _cardInfo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cardInfo */ \"./src/game/cardInfo.ts\");\n\n\n\nvar genericCard = {\n    cardID: \"Generic Card\",\n    cardInfo: {\n        name: \"None\",\n        desc: \"None\",\n        strength: -1,\n        theater: \"air\",\n        type: \"none\"\n    },\n    strength: -1,\n    covered: false,\n    faceDown: false\n};\nvar battleCards = [\n    (0,_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"])((0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, genericCard), {\n        cardID: \"Support\",\n        cardInfo: _cardInfo__WEBPACK_IMPORTED_MODULE_0__.cardInfoRecords.Support,\n        strength: _cardInfo__WEBPACK_IMPORTED_MODULE_0__.cardInfoRecords.Support.strength\n    }),\n    (0,_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"])((0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, genericCard), {\n        cardID: \"Air_Drop\",\n        cardInfo: _cardInfo__WEBPACK_IMPORTED_MODULE_0__.cardInfoRecords.Air_Drop,\n        strength: _cardInfo__WEBPACK_IMPORTED_MODULE_0__.cardInfoRecords.Air_Drop.strength\n    }),\n    (0,_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"])((0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, genericCard), {\n        cardID: \"Maneuver_Air\",\n        cardInfo: _cardInfo__WEBPACK_IMPORTED_MODULE_0__.cardInfoRecords.Maneuver_Air,\n        strength: _cardInfo__WEBPACK_IMPORTED_MODULE_0__.cardInfoRecords.Maneuver_Air.strength\n    }),\n    (0,_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"])((0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, genericCard), {\n        cardID: \"Aerodrome\",\n        cardInfo: _cardInfo__WEBPACK_IMPORTED_MODULE_0__.cardInfoRecords.Aerodrome,\n        strength: _cardInfo__WEBPACK_IMPORTED_MODULE_0__.cardInfoRecords.Aerodrome.strength\n    }),\n    (0,_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"])((0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, genericCard), {\n        cardID: \"Containment\",\n        cardInfo: _cardInfo__WEBPACK_IMPORTED_MODULE_0__.cardInfoRecords.Containment,\n        strength: _cardInfo__WEBPACK_IMPORTED_MODULE_0__.cardInfoRecords.Containment.strength\n    }),\n    (0,_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"])((0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, genericCard), {\n        cardID: \"Heavy_Bombers\",\n        cardInfo: _cardInfo__WEBPACK_IMPORTED_MODULE_0__.cardInfoRecords.Heavy_Bombers,\n        strength: _cardInfo__WEBPACK_IMPORTED_MODULE_0__.cardInfoRecords.Heavy_Bombers.strength\n    }),\n    (0,_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"])((0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, genericCard), {\n        cardID: \"Reinforce\",\n        cardInfo: _cardInfo__WEBPACK_IMPORTED_MODULE_0__.cardInfoRecords.Reinforce,\n        strength: _cardInfo__WEBPACK_IMPORTED_MODULE_0__.cardInfoRecords.Reinforce.strength\n    }),\n    (0,_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"])((0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, genericCard), {\n        cardID: \"Ambush\",\n        cardInfo: _cardInfo__WEBPACK_IMPORTED_MODULE_0__.cardInfoRecords.Ambush,\n        strength: _cardInfo__WEBPACK_IMPORTED_MODULE_0__.cardInfoRecords.Ambush.strength\n    }),\n    (0,_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"])((0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, genericCard), {\n        cardID: \"Maneuver_Land\",\n        cardInfo: _cardInfo__WEBPACK_IMPORTED_MODULE_0__.cardInfoRecords.Maneuver_Land,\n        strength: _cardInfo__WEBPACK_IMPORTED_MODULE_0__.cardInfoRecords.Maneuver_Land.strength\n    }),\n    (0,_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"])((0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, genericCard), {\n        cardID: \"Cover_Fire\",\n        cardInfo: _cardInfo__WEBPACK_IMPORTED_MODULE_0__.cardInfoRecords.Cover_Fire,\n        strength: _cardInfo__WEBPACK_IMPORTED_MODULE_0__.cardInfoRecords.Cover_Fire.strength\n    }),\n    (0,_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"])((0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, genericCard), {\n        cardID: \"Disrupt\",\n        cardInfo: _cardInfo__WEBPACK_IMPORTED_MODULE_0__.cardInfoRecords.Disrupt,\n        strength: _cardInfo__WEBPACK_IMPORTED_MODULE_0__.cardInfoRecords.Disrupt.strength\n    }),\n    (0,_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"])((0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, genericCard), {\n        cardID: \"Heavy_Tanks\",\n        cardInfo: _cardInfo__WEBPACK_IMPORTED_MODULE_0__.cardInfoRecords.Heavy_Tanks,\n        strength: _cardInfo__WEBPACK_IMPORTED_MODULE_0__.cardInfoRecords.Heavy_Tanks.strength\n    }),\n    (0,_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"])((0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, genericCard), {\n        cardID: \"Transport\",\n        cardInfo: _cardInfo__WEBPACK_IMPORTED_MODULE_0__.cardInfoRecords.Transport,\n        strength: _cardInfo__WEBPACK_IMPORTED_MODULE_0__.cardInfoRecords.Transport.strength\n    }),\n    (0,_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"])((0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, genericCard), {\n        cardID: \"Escalation\",\n        cardInfo: _cardInfo__WEBPACK_IMPORTED_MODULE_0__.cardInfoRecords.Escalation,\n        strength: _cardInfo__WEBPACK_IMPORTED_MODULE_0__.cardInfoRecords.Escalation.strength\n    }),\n    (0,_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"])((0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, genericCard), {\n        cardID: \"Maneuver_Sea\",\n        cardInfo: _cardInfo__WEBPACK_IMPORTED_MODULE_0__.cardInfoRecords.Maneuver_Sea,\n        strength: _cardInfo__WEBPACK_IMPORTED_MODULE_0__.cardInfoRecords.Maneuver_Sea.strength\n    }),\n    (0,_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"])((0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, genericCard), {\n        cardID: \"Redeploy\",\n        cardInfo: _cardInfo__WEBPACK_IMPORTED_MODULE_0__.cardInfoRecords.Redeploy,\n        strength: _cardInfo__WEBPACK_IMPORTED_MODULE_0__.cardInfoRecords.Redeploy.strength\n    }),\n    (0,_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"])((0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, genericCard), {\n        cardID: \"Blockade\",\n        cardInfo: _cardInfo__WEBPACK_IMPORTED_MODULE_0__.cardInfoRecords.Blockade,\n        strength: _cardInfo__WEBPACK_IMPORTED_MODULE_0__.cardInfoRecords.Blockade.strength\n    }),\n    (0,_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"])((0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, genericCard), {\n        cardID: \"Super_Battleship\",\n        cardInfo: _cardInfo__WEBPACK_IMPORTED_MODULE_0__.cardInfoRecords.Super_Battleship,\n        strength: _cardInfo__WEBPACK_IMPORTED_MODULE_0__.cardInfoRecords.Super_Battleship.strength\n    }), \n];\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/game/cards.ts\n"));

/***/ }),

/***/ "./src/game/gameUtil.ts":
/*!******************************!*\
  !*** ./src/game/gameUtil.ts ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CalculateCardStrength\": function() { return /* binding */ CalculateCardStrength; },\n/* harmony export */   \"CardEffect\": function() { return /* binding */ CardEffect; },\n/* harmony export */   \"Flip\": function() { return /* binding */ Flip; },\n/* harmony export */   \"GetAdjacentTheaters\": function() { return /* binding */ GetAdjacentTheaters; },\n/* harmony export */   \"SetValidTheaters\": function() { return /* binding */ SetValidTheaters; },\n/* harmony export */   \"getPointsScored\": function() { return /* binding */ getPointsScored; }\n/* harmony export */ });\nfunction getPointsScored(firstPlayer, cardsLeft) {\n    var points = 0;\n    if (firstPlayer) {\n        switch(cardsLeft){\n            case 6:\n            case 5:\n            case 4:\n                points = 2;\n                break;\n            case 3:\n            case 2:\n                points = 3;\n                break;\n            case 1:\n                points = 4;\n                break;\n            case 0:\n                points = 6;\n                break;\n        }\n    } else {\n        switch(cardsLeft){\n            case 6:\n            case 5:\n                points = 2;\n                break;\n            case 4:\n            case 3:\n                points = 3;\n                break;\n            case 2:\n                points = 4;\n                break;\n            case 1:\n            case 0:\n                points = 6;\n                break;\n        }\n    }\n    return points;\n}\nfunction Flip(G, ctx) {\n// flip() {\n//   if (!this.covered) {\n//     if (this.faceDown) {\n//       this.strength = this.cardInfo.strength;\n//       this.faceDown = false;\n//     } else {\n//       this.strength = 2;\n//       this.faceDown = true;\n//     }\n//   }\n// },\n// effect: (G, ctx) => {},\n}\nfunction CardEffect(G, ctx, cardID) {\n    switch(cardID){\n        case \"Support\":\n            break;\n        case \"Air_Drop\":\n            break;\n        case \"Maneuver_Air\":\n            break;\n        case \"Aerodrome\":\n            break;\n        case \"Containment\":\n            break;\n        case \"Heavy_Bombers\":\n            break;\n        case \"Reinforce\":\n            break;\n        case \"Ambush\":\n            break;\n        case \"Maneuver_Land\":\n            break;\n        case \"Cover_Fire\":\n            break;\n        case \"Disrupt\":\n            break;\n        case \"Heavy_Tanks\":\n            break;\n        case \"Transport\":\n            break;\n        case \"Escalation\":\n            break;\n        case \"Maneuver_Sea\":\n            break;\n        case \"Redeploy\":\n            break;\n        case \"Blockade\":\n            break;\n        case \"Super_Battleship\":\n            break;\n        default:\n            break;\n    }\n}\nfunction SetValidTheaters(G, ctx, card) {\n    var validTheater = card.cardInfo.theater;\n    G.playingField.map(function(theater) {\n        //need to check for ongoing effects here\n        theater.isValid = theater.theater === validTheater;\n    });\n}\nfunction CalculateCardStrength(G, player, card) {\n    //need to check for ongoing effects here\n    if (card.faceDown) return 2;\n    else {\n        return card.strength;\n    }\n}\nfunction GetAdjacentTheaters(G, theaterID) {\n    if (theaterID === 1) {\n        return [\n            G.playingField[0].theater,\n            G.playingField[2].theater\n        ];\n    } else {\n        return [\n            G.playingField[1].theater\n        ];\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2FtZS9nYW1lVXRpbC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFJTyxTQUFTQSxlQUFlLENBQzdCQyxXQUFvQixFQUNwQkMsU0FBaUIsRUFDVDtJQUNSLElBQUlDLE1BQU0sR0FBRyxDQUFDO0lBQ2QsSUFBSUYsV0FBVyxFQUFFO1FBQ2YsT0FBUUMsU0FBUztZQUNmLEtBQUssQ0FBQyxDQUFDO1lBQ1AsS0FBSyxDQUFDLENBQUM7WUFDUCxLQUFLLENBQUM7Z0JBQ0pDLE1BQU0sR0FBRyxDQUFDLENBQUM7Z0JBQ1gsTUFBTTtZQUNSLEtBQUssQ0FBQyxDQUFDO1lBQ1AsS0FBSyxDQUFDO2dCQUNKQSxNQUFNLEdBQUcsQ0FBQyxDQUFDO2dCQUNYLE1BQU07WUFDUixLQUFLLENBQUM7Z0JBQ0pBLE1BQU0sR0FBRyxDQUFDLENBQUM7Z0JBQ1gsTUFBTTtZQUNSLEtBQUssQ0FBQztnQkFDSkEsTUFBTSxHQUFHLENBQUMsQ0FBQztnQkFDWCxNQUFNO1NBQ1Q7SUFDSCxPQUFPO1FBQ0wsT0FBUUQsU0FBUztZQUNmLEtBQUssQ0FBQyxDQUFDO1lBQ1AsS0FBSyxDQUFDO2dCQUNKQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO2dCQUNYLE1BQU07WUFDUixLQUFLLENBQUMsQ0FBQztZQUNQLEtBQUssQ0FBQztnQkFDSkEsTUFBTSxHQUFHLENBQUMsQ0FBQztnQkFDWCxNQUFNO1lBQ1IsS0FBSyxDQUFDO2dCQUNKQSxNQUFNLEdBQUcsQ0FBQyxDQUFDO2dCQUNYLE1BQU07WUFDUixLQUFLLENBQUMsQ0FBQztZQUNQLEtBQUssQ0FBQztnQkFDSkEsTUFBTSxHQUFHLENBQUMsQ0FBQztnQkFDWCxNQUFNO1NBQ1Q7SUFDSCxDQUFDO0lBQ0QsT0FBT0EsTUFBTSxDQUFDO0FBQ2hCLENBQUM7QUFDTSxTQUFTQyxJQUFJLENBQUNDLENBQVksRUFBRUMsR0FBUSxFQUFRO0FBQ2pELFdBQVc7QUFDWCx5QkFBeUI7QUFDekIsMkJBQTJCO0FBQzNCLGdEQUFnRDtBQUNoRCwrQkFBK0I7QUFDL0IsZUFBZTtBQUNmLDJCQUEyQjtBQUMzQiw4QkFBOEI7QUFDOUIsUUFBUTtBQUNSLE1BQU07QUFDTixLQUFLO0FBQ0wsMEJBQTBCO0FBQzVCLENBQUM7QUFDTSxTQUFTQyxVQUFVLENBQUNGLENBQVksRUFBRUMsR0FBUSxFQUFFRSxNQUFjLEVBQVE7SUFDdkUsT0FBUUEsTUFBTTtRQUNaLEtBQUssU0FBUztZQUNaLE1BQU07UUFDUixLQUFLLFVBQVU7WUFDYixNQUFNO1FBQ1IsS0FBSyxjQUFjO1lBQ2pCLE1BQU07UUFDUixLQUFLLFdBQVc7WUFDZCxNQUFNO1FBQ1IsS0FBSyxhQUFhO1lBQ2hCLE1BQU07UUFDUixLQUFLLGVBQWU7WUFDbEIsTUFBTTtRQUNSLEtBQUssV0FBVztZQUNkLE1BQU07UUFDUixLQUFLLFFBQVE7WUFDWCxNQUFNO1FBQ1IsS0FBSyxlQUFlO1lBQ2xCLE1BQU07UUFDUixLQUFLLFlBQVk7WUFDZixNQUFNO1FBQ1IsS0FBSyxTQUFTO1lBQ1osTUFBTTtRQUNSLEtBQUssYUFBYTtZQUNoQixNQUFNO1FBQ1IsS0FBSyxXQUFXO1lBQ2QsTUFBTTtRQUNSLEtBQUssWUFBWTtZQUNmLE1BQU07UUFDUixLQUFLLGNBQWM7WUFDakIsTUFBTTtRQUNSLEtBQUssVUFBVTtZQUNiLE1BQU07UUFDUixLQUFLLFVBQVU7WUFDYixNQUFNO1FBQ1IsS0FBSyxrQkFBa0I7WUFDckIsTUFBTTtRQUNSO1lBQ0UsTUFBTTtLQUNUO0FBQ0gsQ0FBQztBQUNNLFNBQVNDLGdCQUFnQixDQUFDSixDQUFZLEVBQUVDLEdBQVEsRUFBRUksSUFBVSxFQUFRO0lBQ3pFLElBQUlDLFlBQVksR0FBR0QsSUFBSSxDQUFDRSxRQUFRLENBQUNDLE9BQU87SUFDeENSLENBQUMsQ0FBQ1MsWUFBWSxDQUFDQyxHQUFHLENBQUMsU0FBQ0YsT0FBTyxFQUFLO1FBQzlCLHdDQUF3QztRQUN4Q0EsT0FBTyxDQUFDRyxPQUFPLEdBQUdILE9BQU8sQ0FBQ0EsT0FBTyxLQUFLRixZQUFZLENBQUM7SUFDckQsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDO0FBQ00sU0FBU00scUJBQXFCLENBQ25DWixDQUFZLEVBQ1phLE1BQWMsRUFDZFIsSUFBVSxFQUNGO0lBQ1Isd0NBQXdDO0lBQ3hDLElBQUlBLElBQUksQ0FBQ1MsUUFBUSxFQUFFLE9BQU8sQ0FBQyxDQUFDO1NBQ3ZCO1FBQ0gsT0FBT1QsSUFBSSxDQUFDVSxRQUFRLENBQUM7SUFDdkIsQ0FBQztBQUNILENBQUM7QUFDTSxTQUFTQyxtQkFBbUIsQ0FDakNoQixDQUFZLEVBQ1ppQixTQUFpQixFQUNGO0lBQ2YsSUFBSUEsU0FBUyxLQUFLLENBQUMsRUFBRTtRQUNuQixPQUFPO1lBQUNqQixDQUFDLENBQUNTLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQ0QsT0FBTztZQUFFUixDQUFDLENBQUNTLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQ0QsT0FBTztTQUFDLENBQUM7SUFDaEUsT0FBTztRQUNMLE9BQU87WUFBQ1IsQ0FBQyxDQUFDUyxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUNELE9BQU87U0FBQyxDQUFDO0lBQ3JDLENBQUM7QUFDSCxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9nYW1lL2dhbWVVdGlsLnRzPzg2OTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ3R4IH0gZnJvbSAnYm9hcmRnYW1lLmlvJztcclxuaW1wb3J0IHsgQ2FyZCwgVGhlYXRlclR5cGUgfSBmcm9tICcuL2NhcmRzJztcclxuaW1wb3J0IHsgR2FtZVN0YXRlIH0gZnJvbSAnLi9nYW1lVHlwZXMnO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdldFBvaW50c1Njb3JlZChcclxuICBmaXJzdFBsYXllcjogYm9vbGVhbixcclxuICBjYXJkc0xlZnQ6IG51bWJlcixcclxuKTogbnVtYmVyIHtcclxuICBsZXQgcG9pbnRzID0gMDtcclxuICBpZiAoZmlyc3RQbGF5ZXIpIHtcclxuICAgIHN3aXRjaCAoY2FyZHNMZWZ0KSB7XHJcbiAgICAgIGNhc2UgNjpcclxuICAgICAgY2FzZSA1OlxyXG4gICAgICBjYXNlIDQ6XHJcbiAgICAgICAgcG9pbnRzID0gMjtcclxuICAgICAgICBicmVhaztcclxuICAgICAgY2FzZSAzOlxyXG4gICAgICBjYXNlIDI6XHJcbiAgICAgICAgcG9pbnRzID0gMztcclxuICAgICAgICBicmVhaztcclxuICAgICAgY2FzZSAxOlxyXG4gICAgICAgIHBvaW50cyA9IDQ7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGNhc2UgMDpcclxuICAgICAgICBwb2ludHMgPSA2O1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgfVxyXG4gIH0gZWxzZSB7XHJcbiAgICBzd2l0Y2ggKGNhcmRzTGVmdCkge1xyXG4gICAgICBjYXNlIDY6XHJcbiAgICAgIGNhc2UgNTpcclxuICAgICAgICBwb2ludHMgPSAyO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICBjYXNlIDQ6XHJcbiAgICAgIGNhc2UgMzpcclxuICAgICAgICBwb2ludHMgPSAzO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICBjYXNlIDI6XHJcbiAgICAgICAgcG9pbnRzID0gNDtcclxuICAgICAgICBicmVhaztcclxuICAgICAgY2FzZSAxOlxyXG4gICAgICBjYXNlIDA6XHJcbiAgICAgICAgcG9pbnRzID0gNjtcclxuICAgICAgICBicmVhaztcclxuICAgIH1cclxuICB9XHJcbiAgcmV0dXJuIHBvaW50cztcclxufVxyXG5leHBvcnQgZnVuY3Rpb24gRmxpcChHOiBHYW1lU3RhdGUsIGN0eDogQ3R4KTogdm9pZCB7XHJcbiAgLy8gZmxpcCgpIHtcclxuICAvLyAgIGlmICghdGhpcy5jb3ZlcmVkKSB7XHJcbiAgLy8gICAgIGlmICh0aGlzLmZhY2VEb3duKSB7XHJcbiAgLy8gICAgICAgdGhpcy5zdHJlbmd0aCA9IHRoaXMuY2FyZEluZm8uc3RyZW5ndGg7XHJcbiAgLy8gICAgICAgdGhpcy5mYWNlRG93biA9IGZhbHNlO1xyXG4gIC8vICAgICB9IGVsc2Uge1xyXG4gIC8vICAgICAgIHRoaXMuc3RyZW5ndGggPSAyO1xyXG4gIC8vICAgICAgIHRoaXMuZmFjZURvd24gPSB0cnVlO1xyXG4gIC8vICAgICB9XHJcbiAgLy8gICB9XHJcbiAgLy8gfSxcclxuICAvLyBlZmZlY3Q6IChHLCBjdHgpID0+IHt9LFxyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiBDYXJkRWZmZWN0KEc6IEdhbWVTdGF0ZSwgY3R4OiBDdHgsIGNhcmRJRDogc3RyaW5nKTogdm9pZCB7XHJcbiAgc3dpdGNoIChjYXJkSUQpIHtcclxuICAgIGNhc2UgJ1N1cHBvcnQnOlxyXG4gICAgICBicmVhaztcclxuICAgIGNhc2UgJ0Fpcl9Ecm9wJzpcclxuICAgICAgYnJlYWs7XHJcbiAgICBjYXNlICdNYW5ldXZlcl9BaXInOlxyXG4gICAgICBicmVhaztcclxuICAgIGNhc2UgJ0Flcm9kcm9tZSc6XHJcbiAgICAgIGJyZWFrO1xyXG4gICAgY2FzZSAnQ29udGFpbm1lbnQnOlxyXG4gICAgICBicmVhaztcclxuICAgIGNhc2UgJ0hlYXZ5X0JvbWJlcnMnOlxyXG4gICAgICBicmVhaztcclxuICAgIGNhc2UgJ1JlaW5mb3JjZSc6XHJcbiAgICAgIGJyZWFrO1xyXG4gICAgY2FzZSAnQW1idXNoJzpcclxuICAgICAgYnJlYWs7XHJcbiAgICBjYXNlICdNYW5ldXZlcl9MYW5kJzpcclxuICAgICAgYnJlYWs7XHJcbiAgICBjYXNlICdDb3Zlcl9GaXJlJzpcclxuICAgICAgYnJlYWs7XHJcbiAgICBjYXNlICdEaXNydXB0JzpcclxuICAgICAgYnJlYWs7XHJcbiAgICBjYXNlICdIZWF2eV9UYW5rcyc6XHJcbiAgICAgIGJyZWFrO1xyXG4gICAgY2FzZSAnVHJhbnNwb3J0JzpcclxuICAgICAgYnJlYWs7XHJcbiAgICBjYXNlICdFc2NhbGF0aW9uJzpcclxuICAgICAgYnJlYWs7XHJcbiAgICBjYXNlICdNYW5ldXZlcl9TZWEnOlxyXG4gICAgICBicmVhaztcclxuICAgIGNhc2UgJ1JlZGVwbG95JzpcclxuICAgICAgYnJlYWs7XHJcbiAgICBjYXNlICdCbG9ja2FkZSc6XHJcbiAgICAgIGJyZWFrO1xyXG4gICAgY2FzZSAnU3VwZXJfQmF0dGxlc2hpcCc6XHJcbiAgICAgIGJyZWFrO1xyXG4gICAgZGVmYXVsdDpcclxuICAgICAgYnJlYWs7XHJcbiAgfVxyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiBTZXRWYWxpZFRoZWF0ZXJzKEc6IEdhbWVTdGF0ZSwgY3R4OiBDdHgsIGNhcmQ6IENhcmQpOiB2b2lkIHtcclxuICBsZXQgdmFsaWRUaGVhdGVyID0gY2FyZC5jYXJkSW5mby50aGVhdGVyO1xyXG4gIEcucGxheWluZ0ZpZWxkLm1hcCgodGhlYXRlcikgPT4ge1xyXG4gICAgLy9uZWVkIHRvIGNoZWNrIGZvciBvbmdvaW5nIGVmZmVjdHMgaGVyZVxyXG4gICAgdGhlYXRlci5pc1ZhbGlkID0gdGhlYXRlci50aGVhdGVyID09PSB2YWxpZFRoZWF0ZXI7XHJcbiAgfSk7XHJcbn1cclxuZXhwb3J0IGZ1bmN0aW9uIENhbGN1bGF0ZUNhcmRTdHJlbmd0aChcclxuICBHOiBHYW1lU3RhdGUsXHJcbiAgcGxheWVyOiBzdHJpbmcsXHJcbiAgY2FyZDogQ2FyZCxcclxuKTogbnVtYmVyIHtcclxuICAvL25lZWQgdG8gY2hlY2sgZm9yIG9uZ29pbmcgZWZmZWN0cyBoZXJlXHJcbiAgaWYgKGNhcmQuZmFjZURvd24pIHJldHVybiAyO1xyXG4gIGVsc2Uge1xyXG4gICAgcmV0dXJuIGNhcmQuc3RyZW5ndGg7XHJcbiAgfVxyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiBHZXRBZGphY2VudFRoZWF0ZXJzKFxyXG4gIEc6IEdhbWVTdGF0ZSxcclxuICB0aGVhdGVySUQ6IG51bWJlcixcclxuKTogVGhlYXRlclR5cGVbXSB7XHJcbiAgaWYgKHRoZWF0ZXJJRCA9PT0gMSkge1xyXG4gICAgcmV0dXJuIFtHLnBsYXlpbmdGaWVsZFswXS50aGVhdGVyLCBHLnBsYXlpbmdGaWVsZFsyXS50aGVhdGVyXTtcclxuICB9IGVsc2Uge1xyXG4gICAgcmV0dXJuIFtHLnBsYXlpbmdGaWVsZFsxXS50aGVhdGVyXTtcclxuICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbImdldFBvaW50c1Njb3JlZCIsImZpcnN0UGxheWVyIiwiY2FyZHNMZWZ0IiwicG9pbnRzIiwiRmxpcCIsIkciLCJjdHgiLCJDYXJkRWZmZWN0IiwiY2FyZElEIiwiU2V0VmFsaWRUaGVhdGVycyIsImNhcmQiLCJ2YWxpZFRoZWF0ZXIiLCJjYXJkSW5mbyIsInRoZWF0ZXIiLCJwbGF5aW5nRmllbGQiLCJtYXAiLCJpc1ZhbGlkIiwiQ2FsY3VsYXRlQ2FyZFN0cmVuZ3RoIiwicGxheWVyIiwiZmFjZURvd24iLCJzdHJlbmd0aCIsIkdldEFkamFjZW50VGhlYXRlcnMiLCJ0aGVhdGVySUQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/game/gameUtil.ts\n"));

/***/ }),

/***/ "./src/game/index.ts":
/*!***************************!*\
  !*** ./src/game/index.ts ***!
  \***************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AirLandSea\": function() { return /* binding */ AirLandSea; }\n/* harmony export */ });\n/* harmony import */ var boardgame_io_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! boardgame.io/core */ \"./node_modules/boardgame.io/dist/esm/core.js\");\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../config */ \"./src/config/index.ts\");\n/* harmony import */ var _cards__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cards */ \"./src/game/cards.ts\");\n/* harmony import */ var _moves__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./moves */ \"./src/game/moves.ts\");\n\n\n\n\nvar AirLandSea = {\n    name: _config__WEBPACK_IMPORTED_MODULE_0__.GAME_ID,\n    minPlayers: 2,\n    maxPlayers: 2,\n    setup: function() {\n        return {\n            secret: {\n                deck: _cards__WEBPACK_IMPORTED_MODULE_1__.battleCards,\n                discardPile: []\n            },\n            selectedCardID: -1,\n            ongoingEffects: [],\n            playOrder: [\n                \"0\",\n                \"1\"\n            ],\n            players: [\n                {\n                    ID: \"0\",\n                    firstPlayer: true,\n                    cards: [],\n                    ready: false,\n                    score: 0,\n                    ongoingEffects: []\n                },\n                {\n                    ID: \"1\",\n                    firstPlayer: false,\n                    cards: [],\n                    ready: false,\n                    score: 0,\n                    ongoingEffects: []\n                }, \n            ],\n            playingField: [\n                {\n                    theater: \"air\",\n                    deployedCards: {\n                        \"0\": [],\n                        \"1\": []\n                    },\n                    totalStrength: {\n                        \"0\": 0,\n                        \"1\": 0\n                    }\n                },\n                {\n                    theater: \"land\",\n                    deployedCards: {\n                        \"0\": [],\n                        \"1\": []\n                    },\n                    totalStrength: {\n                        \"0\": 0,\n                        \"1\": 0\n                    }\n                },\n                {\n                    theater: \"sea\",\n                    deployedCards: {\n                        \"0\": [],\n                        \"1\": []\n                    },\n                    totalStrength: {\n                        \"0\": 0,\n                        \"1\": 0\n                    }\n                }, \n            ]\n        };\n    },\n    phases: {\n        shuffleAndDeal: {\n            start: true,\n            next: \"main\",\n            onBegin: function(G, ctx) {\n                var ref;\n                G.playingField = ctx.random.Shuffle(G.playingField);\n                G.secret.deck = ctx.random.Shuffle(G.secret.deck);\n                G.players[0].cards = G.secret.deck.splice(0, 6);\n                G.players[1].cards = G.secret.deck.splice(0, 6);\n                (ref = ctx.events) === null || ref === void 0 ? void 0 : ref.endPhase();\n            }\n        },\n        main: {\n            turn: {\n                activePlayers: {\n                    currentPlayer: \"select\"\n                },\n                order: boardgame_io_core__WEBPACK_IMPORTED_MODULE_3__.TurnOrder.CUSTOM_FROM(\"playOrder\"),\n                stages: {\n                    select: {\n                        moves: {\n                            selectCard: _moves__WEBPACK_IMPORTED_MODULE_2__.selectCard,\n                            withdraw: _moves__WEBPACK_IMPORTED_MODULE_2__.withdraw\n                        }\n                    },\n                    place: {\n                        moves: {\n                            deploy: _moves__WEBPACK_IMPORTED_MODULE_2__.deploy,\n                            improvise: _moves__WEBPACK_IMPORTED_MODULE_2__.improvise\n                        }\n                    }\n                }\n            }\n        },\n        epicWinningAnimation: {\n            onBegin: function(G, ctx) {\n            //something crazy idk\n            }\n        }\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2FtZS9pbmRleC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUM4QztBQUNWO0FBQ1E7QUFFc0I7QUFFM0QsSUFBTU8sVUFBVSxHQUFvQjtJQUN6Q0MsSUFBSSxFQUFFUCw0Q0FBTztJQUNiUSxVQUFVLEVBQUUsQ0FBQztJQUNiQyxVQUFVLEVBQUUsQ0FBQztJQUViQyxLQUFLLEVBQUU7ZUFBTztZQUNaQyxNQUFNLEVBQUU7Z0JBQUVDLElBQUksRUFBRVgsK0NBQVc7Z0JBQUVZLFdBQVcsRUFBRSxFQUFFO2FBQUU7WUFDOUNDLGNBQWMsRUFBRSxDQUFDLENBQUM7WUFDbEJDLGNBQWMsRUFBRSxFQUFFO1lBQ2xCQyxTQUFTLEVBQUU7Z0JBQUMsR0FBRztnQkFBRSxHQUFHO2FBQUM7WUFDckJDLE9BQU8sRUFBRTtnQkFDUDtvQkFDRUMsRUFBRSxFQUFFLEdBQUc7b0JBQ1BDLFdBQVcsRUFBRSxJQUFJO29CQUNqQkMsS0FBSyxFQUFFLEVBQUU7b0JBQ1RDLEtBQUssRUFBRSxLQUFLO29CQUNaQyxLQUFLLEVBQUUsQ0FBQztvQkFDUlAsY0FBYyxFQUFFLEVBQUU7aUJBQ25CO2dCQUNEO29CQUNFRyxFQUFFLEVBQUUsR0FBRztvQkFDUEMsV0FBVyxFQUFFLEtBQUs7b0JBQ2xCQyxLQUFLLEVBQUUsRUFBRTtvQkFDVEMsS0FBSyxFQUFFLEtBQUs7b0JBQ1pDLEtBQUssRUFBRSxDQUFDO29CQUNSUCxjQUFjLEVBQUUsRUFBRTtpQkFDbkI7YUFDRjtZQUNEUSxZQUFZLEVBQUU7Z0JBQ1o7b0JBQ0VDLE9BQU8sRUFBRSxLQUFLO29CQUNkQyxhQUFhLEVBQUU7d0JBQUUsR0FBRyxFQUFFLEVBQUU7d0JBQUUsR0FBRyxFQUFFLEVBQUU7cUJBQUU7b0JBQ25DQyxhQUFhLEVBQUU7d0JBQUUsR0FBRyxFQUFFLENBQUM7d0JBQUUsR0FBRyxFQUFFLENBQUM7cUJBQUU7aUJBQ2xDO2dCQUNEO29CQUNFRixPQUFPLEVBQUUsTUFBTTtvQkFDZkMsYUFBYSxFQUFFO3dCQUFFLEdBQUcsRUFBRSxFQUFFO3dCQUFFLEdBQUcsRUFBRSxFQUFFO3FCQUFFO29CQUNuQ0MsYUFBYSxFQUFFO3dCQUFFLEdBQUcsRUFBRSxDQUFDO3dCQUFFLEdBQUcsRUFBRSxDQUFDO3FCQUFFO2lCQUNsQztnQkFDRDtvQkFDRUYsT0FBTyxFQUFFLEtBQUs7b0JBQ2RDLGFBQWEsRUFBRTt3QkFBRSxHQUFHLEVBQUUsRUFBRTt3QkFBRSxHQUFHLEVBQUUsRUFBRTtxQkFBRTtvQkFDbkNDLGFBQWEsRUFBRTt3QkFBRSxHQUFHLEVBQUUsQ0FBQzt3QkFBRSxHQUFHLEVBQUUsQ0FBQztxQkFBRTtpQkFDbEM7YUFDRjtTQUNGO0tBQUM7SUFFRkMsTUFBTSxFQUFFO1FBQ05DLGNBQWMsRUFBRTtZQUNkQyxLQUFLLEVBQUUsSUFBSTtZQUNYQyxJQUFJLEVBQUUsTUFBTTtZQUNaQyxPQUFPLEVBQUUsU0FBQ0MsQ0FBQyxFQUFFQyxHQUFHLEVBQUs7b0JBS25CQSxHQUFVO2dCQUpWRCxDQUFDLENBQUNULFlBQVksR0FBR1UsR0FBRyxDQUFDQyxNQUFNLENBQUVDLE9BQU8sQ0FBVUgsQ0FBQyxDQUFDVCxZQUFZLENBQUMsQ0FBQztnQkFDOURTLENBQUMsQ0FBQ3JCLE1BQU0sQ0FBQ0MsSUFBSSxHQUFHcUIsR0FBRyxDQUFDQyxNQUFNLENBQUVDLE9BQU8sQ0FBT0gsQ0FBQyxDQUFDckIsTUFBTSxDQUFDQyxJQUFJLENBQUMsQ0FBQztnQkFDekRvQixDQUFDLENBQUNmLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQ0csS0FBSyxHQUFHWSxDQUFDLENBQUNyQixNQUFNLENBQUNDLElBQUksQ0FBQ3dCLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7Z0JBQ2hESixDQUFDLENBQUNmLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQ0csS0FBSyxHQUFHWSxDQUFDLENBQUNyQixNQUFNLENBQUNDLElBQUksQ0FBQ3dCLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7Z0JBQ2hESCxDQUFBQSxHQUFVLEdBQVZBLEdBQUcsQ0FBQ0ksTUFBTSxjQUFWSixHQUFVLFdBQVUsR0FBcEJBLEtBQUFBLENBQW9CLEdBQXBCQSxHQUFVLENBQUVLLFFBQVEsRUFBRSxDQUFDO1lBQ3pCLENBQUM7U0FDRjtRQUNEQyxJQUFJLEVBQUU7WUFDSkMsSUFBSSxFQUFFO2dCQUNKQyxhQUFhLEVBQUU7b0JBQUVDLGFBQWEsRUFBRSxRQUFRO2lCQUFFO2dCQUMxQ0MsS0FBSyxFQUFFNUMsb0VBQXFCLENBQUMsV0FBVyxDQUFDO2dCQUN6QzhDLE1BQU0sRUFBRTtvQkFDTkMsTUFBTSxFQUFFO3dCQUFFQyxLQUFLLEVBQUU7NEJBQUU3QyxVQUFVLEVBQVZBLDhDQUFVOzRCQUFFQyxRQUFRLEVBQVJBLDRDQUFRO3lCQUFFO3FCQUFFO29CQUMzQzZDLEtBQUssRUFBRTt3QkFBRUQsS0FBSyxFQUFFOzRCQUFFM0MsTUFBTSxFQUFOQSwwQ0FBTTs0QkFBRUMsU0FBUyxFQUFUQSw2Q0FBUzt5QkFBRTtxQkFBRTtpQkFDeEM7YUFDRjtTQUNGO1FBQ0Q0QyxvQkFBb0IsRUFBRTtZQUNwQmxCLE9BQU8sRUFBRSxTQUFDQyxDQUFDLEVBQUVDLEdBQUcsRUFBSztZQUNuQixxQkFBcUI7WUFDdkIsQ0FBQztTQUNGO0tBQ0Y7Q0FDRixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9nYW1lL2luZGV4LnRzP2IzMWEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBHYW1lIH0gZnJvbSAnYm9hcmRnYW1lLmlvJztcclxuaW1wb3J0IHsgVHVybk9yZGVyIH0gZnJvbSAnYm9hcmRnYW1lLmlvL2NvcmUnO1xyXG5pbXBvcnQgeyBHQU1FX0lEIH0gZnJvbSAnLi4vY29uZmlnJztcclxuaW1wb3J0IHsgYmF0dGxlQ2FyZHMsIENhcmQgfSBmcm9tICcuL2NhcmRzJztcclxuaW1wb3J0IHsgR2FtZVN0YXRlLCBUaGVhdGVyIH0gZnJvbSAnLi9nYW1lVHlwZXMnO1xyXG5pbXBvcnQgeyBzZWxlY3RDYXJkLCB3aXRoZHJhdywgZGVwbG95LCBpbXByb3Zpc2UgfSBmcm9tICcuL21vdmVzJztcclxuXHJcbmV4cG9ydCBjb25zdCBBaXJMYW5kU2VhOiBHYW1lPEdhbWVTdGF0ZT4gPSB7XHJcbiAgbmFtZTogR0FNRV9JRCxcclxuICBtaW5QbGF5ZXJzOiAyLFxyXG4gIG1heFBsYXllcnM6IDIsXHJcblxyXG4gIHNldHVwOiAoKSA9PiAoe1xyXG4gICAgc2VjcmV0OiB7IGRlY2s6IGJhdHRsZUNhcmRzLCBkaXNjYXJkUGlsZTogW10gfSxcclxuICAgIHNlbGVjdGVkQ2FyZElEOiAtMSxcclxuICAgIG9uZ29pbmdFZmZlY3RzOiBbXSxcclxuICAgIHBsYXlPcmRlcjogWycwJywgJzEnXSxcclxuICAgIHBsYXllcnM6IFtcclxuICAgICAge1xyXG4gICAgICAgIElEOiAnMCcsXHJcbiAgICAgICAgZmlyc3RQbGF5ZXI6IHRydWUsXHJcbiAgICAgICAgY2FyZHM6IFtdLFxyXG4gICAgICAgIHJlYWR5OiBmYWxzZSxcclxuICAgICAgICBzY29yZTogMCxcclxuICAgICAgICBvbmdvaW5nRWZmZWN0czogW10sXHJcbiAgICAgIH0sXHJcbiAgICAgIHtcclxuICAgICAgICBJRDogJzEnLFxyXG4gICAgICAgIGZpcnN0UGxheWVyOiBmYWxzZSxcclxuICAgICAgICBjYXJkczogW10sXHJcbiAgICAgICAgcmVhZHk6IGZhbHNlLFxyXG4gICAgICAgIHNjb3JlOiAwLFxyXG4gICAgICAgIG9uZ29pbmdFZmZlY3RzOiBbXSxcclxuICAgICAgfSxcclxuICAgIF0sXHJcbiAgICBwbGF5aW5nRmllbGQ6IFtcclxuICAgICAge1xyXG4gICAgICAgIHRoZWF0ZXI6ICdhaXInLFxyXG4gICAgICAgIGRlcGxveWVkQ2FyZHM6IHsgJzAnOiBbXSwgJzEnOiBbXSB9LFxyXG4gICAgICAgIHRvdGFsU3RyZW5ndGg6IHsgJzAnOiAwLCAnMSc6IDAgfSxcclxuICAgICAgfSxcclxuICAgICAge1xyXG4gICAgICAgIHRoZWF0ZXI6ICdsYW5kJyxcclxuICAgICAgICBkZXBsb3llZENhcmRzOiB7ICcwJzogW10sICcxJzogW10gfSxcclxuICAgICAgICB0b3RhbFN0cmVuZ3RoOiB7ICcwJzogMCwgJzEnOiAwIH0sXHJcbiAgICAgIH0sXHJcbiAgICAgIHtcclxuICAgICAgICB0aGVhdGVyOiAnc2VhJyxcclxuICAgICAgICBkZXBsb3llZENhcmRzOiB7ICcwJzogW10sICcxJzogW10gfSxcclxuICAgICAgICB0b3RhbFN0cmVuZ3RoOiB7ICcwJzogMCwgJzEnOiAwIH0sXHJcbiAgICAgIH0sXHJcbiAgICBdLFxyXG4gIH0pLFxyXG5cclxuICBwaGFzZXM6IHtcclxuICAgIHNodWZmbGVBbmREZWFsOiB7XHJcbiAgICAgIHN0YXJ0OiB0cnVlLFxyXG4gICAgICBuZXh0OiAnbWFpbicsXHJcbiAgICAgIG9uQmVnaW46IChHLCBjdHgpID0+IHtcclxuICAgICAgICBHLnBsYXlpbmdGaWVsZCA9IGN0eC5yYW5kb20hLlNodWZmbGU8VGhlYXRlcj4oRy5wbGF5aW5nRmllbGQpO1xyXG4gICAgICAgIEcuc2VjcmV0LmRlY2sgPSBjdHgucmFuZG9tIS5TaHVmZmxlPENhcmQ+KEcuc2VjcmV0LmRlY2spO1xyXG4gICAgICAgIEcucGxheWVyc1swXS5jYXJkcyA9IEcuc2VjcmV0LmRlY2suc3BsaWNlKDAsIDYpO1xyXG4gICAgICAgIEcucGxheWVyc1sxXS5jYXJkcyA9IEcuc2VjcmV0LmRlY2suc3BsaWNlKDAsIDYpO1xyXG4gICAgICAgIGN0eC5ldmVudHM/LmVuZFBoYXNlKCk7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAgbWFpbjoge1xyXG4gICAgICB0dXJuOiB7XHJcbiAgICAgICAgYWN0aXZlUGxheWVyczogeyBjdXJyZW50UGxheWVyOiAnc2VsZWN0JyB9LFxyXG4gICAgICAgIG9yZGVyOiBUdXJuT3JkZXIuQ1VTVE9NX0ZST00oJ3BsYXlPcmRlcicpLCAvL3tcclxuICAgICAgICBzdGFnZXM6IHtcclxuICAgICAgICAgIHNlbGVjdDogeyBtb3ZlczogeyBzZWxlY3RDYXJkLCB3aXRoZHJhdyB9IH0sXHJcbiAgICAgICAgICBwbGFjZTogeyBtb3ZlczogeyBkZXBsb3ksIGltcHJvdmlzZSB9IH0sXHJcbiAgICAgICAgfSxcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICBlcGljV2lubmluZ0FuaW1hdGlvbjoge1xyXG4gICAgICBvbkJlZ2luOiAoRywgY3R4KSA9PiB7XHJcbiAgICAgICAgLy9zb21ldGhpbmcgY3JhenkgaWRrXHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIH0sXHJcbn07XHJcbiJdLCJuYW1lcyI6WyJUdXJuT3JkZXIiLCJHQU1FX0lEIiwiYmF0dGxlQ2FyZHMiLCJzZWxlY3RDYXJkIiwid2l0aGRyYXciLCJkZXBsb3kiLCJpbXByb3Zpc2UiLCJBaXJMYW5kU2VhIiwibmFtZSIsIm1pblBsYXllcnMiLCJtYXhQbGF5ZXJzIiwic2V0dXAiLCJzZWNyZXQiLCJkZWNrIiwiZGlzY2FyZFBpbGUiLCJzZWxlY3RlZENhcmRJRCIsIm9uZ29pbmdFZmZlY3RzIiwicGxheU9yZGVyIiwicGxheWVycyIsIklEIiwiZmlyc3RQbGF5ZXIiLCJjYXJkcyIsInJlYWR5Iiwic2NvcmUiLCJwbGF5aW5nRmllbGQiLCJ0aGVhdGVyIiwiZGVwbG95ZWRDYXJkcyIsInRvdGFsU3RyZW5ndGgiLCJwaGFzZXMiLCJzaHVmZmxlQW5kRGVhbCIsInN0YXJ0IiwibmV4dCIsIm9uQmVnaW4iLCJHIiwiY3R4IiwicmFuZG9tIiwiU2h1ZmZsZSIsInNwbGljZSIsImV2ZW50cyIsImVuZFBoYXNlIiwibWFpbiIsInR1cm4iLCJhY3RpdmVQbGF5ZXJzIiwiY3VycmVudFBsYXllciIsIm9yZGVyIiwiQ1VTVE9NX0ZST00iLCJzdGFnZXMiLCJzZWxlY3QiLCJtb3ZlcyIsInBsYWNlIiwiZXBpY1dpbm5pbmdBbmltYXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/game/index.ts\n"));

/***/ }),

/***/ "./src/game/moves.ts":
/*!***************************!*\
  !*** ./src/game/moves.ts ***!
  \***************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"deploy\": function() { return /* binding */ deploy; },\n/* harmony export */   \"improvise\": function() { return /* binding */ improvise; },\n/* harmony export */   \"selectCard\": function() { return /* binding */ selectCard; },\n/* harmony export */   \"withdraw\": function() { return /* binding */ withdraw; }\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_src_to_consumable_array_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @swc/helpers/src/_to_consumable_array.mjs */ \"./node_modules/@swc/helpers/src/_to_consumable_array.mjs\");\n/* harmony import */ var _gameUtil__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gameUtil */ \"./src/game/gameUtil.ts\");\n\n\nvar selectCard = function(G, ctx, cardID) {\n    var ref;\n    G.selectedCardID = cardID;\n    (0,_gameUtil__WEBPACK_IMPORTED_MODULE_0__.SetValidTheaters)(G, ctx, G.players[Number(ctx.currentPlayer)].cards[G.selectedCardID]);\n    (ref = ctx.events) === null || ref === void 0 ? void 0 : ref.setStage(\"place\");\n};\n//play a card face-down to any theater\nvar improvise = function(G, ctx, theaterID) {\n    var _currentPlayer;\n    var ref;\n    //TODO: if blockade, immediately discard card\n    var playerID = Number(ctx.currentPlayer);\n    G.players[playerID].cards[G.selectedCardID].faceDown = true;\n    var arrLength = (_currentPlayer = G.playingField[theaterID].deployedCards[ctx.currentPlayer]).push.apply(_currentPlayer, (0,_swc_helpers_src_to_consumable_array_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(G.players[playerID].cards.splice(G.selectedCardID, 1)));\n    //set previous uncovered card to covered\n    var coveredCard = G.playingField[theaterID].deployedCards[ctx.currentPlayer].at(-2);\n    if (coveredCard !== undefined) {\n        G.playingField[theaterID].deployedCards[ctx.currentPlayer][arrLength - 2].covered = true;\n    }\n    //set card strength\n    G.playingField[theaterID].deployedCards[ctx.currentPlayer][arrLength - 1].strength = (0,_gameUtil__WEBPACK_IMPORTED_MODULE_0__.CalculateCardStrength)(G, ctx.currentPlayer, G.playingField[theaterID].deployedCards[ctx.currentPlayer][arrLength - 1]);\n    //update total strength for theater\n    G.playingField[theaterID].totalStrength[ctx.currentPlayer] += G.playingField[theaterID].deployedCards[ctx.currentPlayer][arrLength - 1].strength;\n    (ref = ctx.events) === null || ref === void 0 ? void 0 : ref.endTurn();\n};\n//play a card face-up to matching theater\nvar deploy = function(G, ctx, theaterID) {\n    if (G.playingField[theaterID].isValid) {\n        var _currentPlayer;\n        var ref;\n        var playerID = Number(ctx.currentPlayer);\n        var selectedCard = G.players[playerID].cards[G.selectedCardID];\n        G.players[playerID].cards[G.selectedCardID].faceDown = false;\n        var arrLength = (_currentPlayer = G.playingField[theaterID].deployedCards[ctx.currentPlayer]).push.apply(_currentPlayer, (0,_swc_helpers_src_to_consumable_array_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(G.players[playerID].cards.splice(G.selectedCardID, 1)));\n        (0,_gameUtil__WEBPACK_IMPORTED_MODULE_0__.CardEffect)(G, ctx, selectedCard.cardID);\n        //set previous uncovered card to covered\n        var coveredCard = G.playingField[theaterID].deployedCards[ctx.currentPlayer].at(-2);\n        if (coveredCard !== undefined) {\n            G.playingField[theaterID].deployedCards[ctx.currentPlayer][arrLength - 2].covered = true;\n        }\n        //set card strength\n        G.playingField[theaterID].deployedCards[ctx.currentPlayer][arrLength - 1].strength = (0,_gameUtil__WEBPACK_IMPORTED_MODULE_0__.CalculateCardStrength)(G, ctx.currentPlayer, G.playingField[theaterID].deployedCards[ctx.currentPlayer][arrLength - 1]);\n        //update total strength for theater\n        G.playingField[theaterID].totalStrength[ctx.currentPlayer] += G.playingField[theaterID].deployedCards[ctx.currentPlayer][arrLength - 1].strength;\n        (ref = ctx.events) === null || ref === void 0 ? void 0 : ref.endTurn();\n    } else {\n        var //keep letting them try til they click the right theater\n        ref1;\n        (ref1 = ctx.events) === null || ref1 === void 0 ? void 0 : ref1.setStage(\"place\");\n    }\n};\n//lose battle, opponent gains points based on how many cards you have left\nvar withdraw = function(G, ctx) {\n    var lostPlayer = Number(ctx.currentPlayer);\n    G.players[lostPlayer ^ 1].score += (0,_gameUtil__WEBPACK_IMPORTED_MODULE_0__.getPointsScored)(G.players[lostPlayer].firstPlayer, G.players[lostPlayer].cards.length);\n    if (G.players[lostPlayer ^ 1].score >= 12) {\n        var ref;\n        (ref = ctx.events) === null || ref === void 0 ? void 0 : ref.setPhase(\"epicWinningAnimation\");\n    } else {\n        var ref1;\n        //probably don't need the firstPlayer variable now that I need playOrder, oh well leaving for now\n        G.players[lostPlayer ^ 1].firstPlayer = G.players[lostPlayer].firstPlayer;\n        G.players[lostPlayer].firstPlayer = !G.players[lostPlayer].firstPlayer;\n        var ref2;\n        ref2 = [\n            G.playOrder[1],\n            G.playOrder[0]\n        ], G.playOrder[0] = ref2[0], G.playOrder[1] = ref2[1], ref2;\n        (ref1 = ctx.events) === null || ref1 === void 0 ? void 0 : ref1.setPhase(\"shuffleAndDeal\");\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/game/moves.ts\n"));

/***/ }),

/***/ "./src/pages/index.tsx":
/*!*****************************!*\
  !*** ./src/pages/index.tsx ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @chakra-ui/react */ \"./node_modules/@chakra-ui/react/dist/chakra-ui-react.esm.js\");\n/* harmony import */ var boardgame_io_multiplayer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! boardgame.io/multiplayer */ \"./node_modules/boardgame.io/dist/esm/multiplayer.js\");\n/* harmony import */ var boardgame_io_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! boardgame.io/react */ \"./node_modules/boardgame.io/dist/esm/react.js\");\n/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../game */ \"./src/game/index.ts\");\n/* harmony import */ var _components_board_Board__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/board/Board */ \"./src/components/board/Board.tsx\");\nvar _this = undefined;\n\n\n\n// import { SocketIO } from 'boardgame.io/multiplayer';\n\n\n\n// import { SERVER_URL } from '../config/client';\nvar GameClient = (0,boardgame_io_react__WEBPACK_IMPORTED_MODULE_3__.Client)({\n    game: _game__WEBPACK_IMPORTED_MODULE_1__.AirLandSea,\n    board: _components_board_Board__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n    // multiplayer: SocketIO({ server: SERVER_URL }),\n    multiplayer: (0,boardgame_io_multiplayer__WEBPACK_IMPORTED_MODULE_4__.Local)()\n});\n_c = GameClient;\nvar Lobby = function() {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__.VStack, {\n        divider: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__.StackDivider, {\n            borderColor: \"gray\"\n        }, void 0, false, void 0, void 0),\n        spacing: 4,\n        align: \"stretch\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__.Box, {\n                w: \"100vw\",\n                h: \"100vh\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(GameClient, {\n                    playerID: \"0\"\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\pages\\\\index.tsx\",\n                    lineNumber: 24,\n                    columnNumber: 9\n                }, _this)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\pages\\\\index.tsx\",\n                lineNumber: 23,\n                columnNumber: 7\n            }, _this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__.Box, {\n                w: \"100vw\",\n                h: \"100vh\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(GameClient, {\n                    playerID: \"1\"\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\pages\\\\index.tsx\",\n                    lineNumber: 27,\n                    columnNumber: 9\n                }, _this)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\pages\\\\index.tsx\",\n                lineNumber: 26,\n                columnNumber: 7\n            }, _this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\ryanm\\\\Documents\\\\Projects\\\\air-land-sea\\\\src\\\\pages\\\\index.tsx\",\n        lineNumber: 18,\n        columnNumber: 5\n    }, _this);\n};\n_c1 = Lobby;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Lobby);\nvar _c, _c1;\n$RefreshReg$(_c, \"GameClient\");\n$RefreshReg$(_c1, \"Lobby\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGFnZXMvaW5kZXgudHN4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7O0FBQTZEO0FBQ1o7QUFDakQsdURBQXVEO0FBQ1g7QUFDUDtBQUNTO0FBQzlDLGlEQUFpRDtBQUVqRCxJQUFNTyxVQUFVLEdBQUdILDBEQUFNLENBQUM7SUFDeEJJLElBQUksRUFBRUgsNkNBQVU7SUFDaEJJLEtBQUssRUFBRUgsK0RBQUs7SUFDWixpREFBaUQ7SUFDakRJLFdBQVcsRUFBRVAsK0RBQUssRUFBRTtDQUNyQixDQUFDO0FBTElJLEtBQUFBLFVBQVU7QUFPaEIsSUFBTUksS0FBSyxHQUFHLFdBQW1CO0lBQy9CLHFCQUNFLDhEQUFDVCxvREFBTTtRQUNMVSxPQUFPLGdCQUFFLDhEQUFDWCwwREFBWTtZQUFDWSxXQUFXLEVBQUMsTUFBTTt5Q0FBRztRQUM1Q0MsT0FBTyxFQUFFLENBQUM7UUFDVkMsS0FBSyxFQUFDLFNBQVM7OzBCQUVmLDhEQUFDZixpREFBRztnQkFBQ2dCLENBQUMsRUFBQyxPQUFPO2dCQUFDQyxDQUFDLEVBQUMsT0FBTzswQkFDdEIsNEVBQUNWLFVBQVU7b0JBQUNXLFFBQVEsRUFBQyxHQUFHOzs7Ozt5QkFBRzs7Ozs7cUJBQ3ZCOzBCQUNOLDhEQUFDbEIsaURBQUc7Z0JBQUNnQixDQUFDLEVBQUMsT0FBTztnQkFBQ0MsQ0FBQyxFQUFDLE9BQU87MEJBQ3RCLDRFQUFDVixVQUFVO29CQUFDVyxRQUFRLEVBQUMsR0FBRzs7Ozs7eUJBQUc7Ozs7O3FCQUN2Qjs7Ozs7O2FBQ0MsQ0FDVDtBQUNKLENBQUM7QUFmS1AsTUFBQUEsS0FBSztBQWlCWCwrREFBZUEsS0FBSyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9wYWdlcy9pbmRleC50c3g/MTlhMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCb3gsIFN0YWNrRGl2aWRlciwgVlN0YWNrIH0gZnJvbSAnQGNoYWtyYS11aS9yZWFjdCc7XHJcbmltcG9ydCB7IExvY2FsIH0gZnJvbSAnYm9hcmRnYW1lLmlvL211bHRpcGxheWVyJztcclxuLy8gaW1wb3J0IHsgU29ja2V0SU8gfSBmcm9tICdib2FyZGdhbWUuaW8vbXVsdGlwbGF5ZXInO1xyXG5pbXBvcnQgeyBDbGllbnQgfSBmcm9tICdib2FyZGdhbWUuaW8vcmVhY3QnO1xyXG5pbXBvcnQgeyBBaXJMYW5kU2VhIH0gZnJvbSAnLi4vZ2FtZSc7XHJcbmltcG9ydCBCb2FyZCBmcm9tICcuLi9jb21wb25lbnRzL2JvYXJkL0JvYXJkJztcclxuLy8gaW1wb3J0IHsgU0VSVkVSX1VSTCB9IGZyb20gJy4uL2NvbmZpZy9jbGllbnQnO1xyXG5cclxuY29uc3QgR2FtZUNsaWVudCA9IENsaWVudCh7XHJcbiAgZ2FtZTogQWlyTGFuZFNlYSxcclxuICBib2FyZDogQm9hcmQsXHJcbiAgLy8gbXVsdGlwbGF5ZXI6IFNvY2tldElPKHsgc2VydmVyOiBTRVJWRVJfVVJMIH0pLFxyXG4gIG11bHRpcGxheWVyOiBMb2NhbCgpLFxyXG59KTtcclxuXHJcbmNvbnN0IExvYmJ5ID0gKCk6IEpTWC5FbGVtZW50ID0+IHtcclxuICByZXR1cm4gKFxyXG4gICAgPFZTdGFja1xyXG4gICAgICBkaXZpZGVyPXs8U3RhY2tEaXZpZGVyIGJvcmRlckNvbG9yPVwiZ3JheVwiIC8+fVxyXG4gICAgICBzcGFjaW5nPXs0fVxyXG4gICAgICBhbGlnbj1cInN0cmV0Y2hcIlxyXG4gICAgPlxyXG4gICAgICA8Qm94IHc9XCIxMDB2d1wiIGg9XCIxMDB2aFwiPlxyXG4gICAgICAgIDxHYW1lQ2xpZW50IHBsYXllcklEPVwiMFwiIC8+XHJcbiAgICAgIDwvQm94PlxyXG4gICAgICA8Qm94IHc9XCIxMDB2d1wiIGg9XCIxMDB2aFwiPlxyXG4gICAgICAgIDxHYW1lQ2xpZW50IHBsYXllcklEPVwiMVwiIC8+XHJcbiAgICAgIDwvQm94PlxyXG4gICAgPC9WU3RhY2s+XHJcbiAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IExvYmJ5O1xyXG4iXSwibmFtZXMiOlsiQm94IiwiU3RhY2tEaXZpZGVyIiwiVlN0YWNrIiwiTG9jYWwiLCJDbGllbnQiLCJBaXJMYW5kU2VhIiwiQm9hcmQiLCJHYW1lQ2xpZW50IiwiZ2FtZSIsImJvYXJkIiwibXVsdGlwbGF5ZXIiLCJMb2JieSIsImRpdmlkZXIiLCJib3JkZXJDb2xvciIsInNwYWNpbmciLCJhbGlnbiIsInciLCJoIiwicGxheWVySUQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/pages/index.tsx\n"));

/***/ }),

/***/ "./node_modules/next/dist/compiled/buffer/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/next/dist/compiled/buffer/index.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={675:function(e,r){\"use strict\";r.byteLength=byteLength;r.toByteArray=toByteArray;r.fromByteArray=fromByteArray;var t=[];var f=[];var n=typeof Uint8Array!==\"undefined\"?Uint8Array:Array;var i=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";for(var o=0,u=i.length;o<u;++o){t[o]=i[o];f[i.charCodeAt(o)]=o}f[\"-\".charCodeAt(0)]=62;f[\"_\".charCodeAt(0)]=63;function getLens(e){var r=e.length;if(r%4>0){throw new Error(\"Invalid string. Length must be a multiple of 4\")}var t=e.indexOf(\"=\");if(t===-1)t=r;var f=t===r?0:4-t%4;return[t,f]}function byteLength(e){var r=getLens(e);var t=r[0];var f=r[1];return(t+f)*3/4-f}function _byteLength(e,r,t){return(r+t)*3/4-t}function toByteArray(e){var r;var t=getLens(e);var i=t[0];var o=t[1];var u=new n(_byteLength(e,i,o));var a=0;var s=o>0?i-4:i;var h;for(h=0;h<s;h+=4){r=f[e.charCodeAt(h)]<<18|f[e.charCodeAt(h+1)]<<12|f[e.charCodeAt(h+2)]<<6|f[e.charCodeAt(h+3)];u[a++]=r>>16&255;u[a++]=r>>8&255;u[a++]=r&255}if(o===2){r=f[e.charCodeAt(h)]<<2|f[e.charCodeAt(h+1)]>>4;u[a++]=r&255}if(o===1){r=f[e.charCodeAt(h)]<<10|f[e.charCodeAt(h+1)]<<4|f[e.charCodeAt(h+2)]>>2;u[a++]=r>>8&255;u[a++]=r&255}return u}function tripletToBase64(e){return t[e>>18&63]+t[e>>12&63]+t[e>>6&63]+t[e&63]}function encodeChunk(e,r,t){var f;var n=[];for(var i=r;i<t;i+=3){f=(e[i]<<16&16711680)+(e[i+1]<<8&65280)+(e[i+2]&255);n.push(tripletToBase64(f))}return n.join(\"\")}function fromByteArray(e){var r;var f=e.length;var n=f%3;var i=[];var o=16383;for(var u=0,a=f-n;u<a;u+=o){i.push(encodeChunk(e,u,u+o>a?a:u+o))}if(n===1){r=e[f-1];i.push(t[r>>2]+t[r<<4&63]+\"==\")}else if(n===2){r=(e[f-2]<<8)+e[f-1];i.push(t[r>>10]+t[r>>4&63]+t[r<<2&63]+\"=\")}return i.join(\"\")}},72:function(e,r,t){\"use strict\";\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */var f=t(675);var n=t(783);var i=typeof Symbol===\"function\"&&typeof Symbol.for===\"function\"?Symbol.for(\"nodejs.util.inspect.custom\"):null;r.Buffer=Buffer;r.SlowBuffer=SlowBuffer;r.INSPECT_MAX_BYTES=50;var o=2147483647;r.kMaxLength=o;Buffer.TYPED_ARRAY_SUPPORT=typedArraySupport();if(!Buffer.TYPED_ARRAY_SUPPORT&&typeof console!==\"undefined\"&&typeof console.error===\"function\"){console.error(\"This browser lacks typed array (Uint8Array) support which is required by \"+\"`buffer` v5.x. Use `buffer` v4.x if you require old browser support.\")}function typedArraySupport(){try{var e=new Uint8Array(1);var r={foo:function(){return 42}};Object.setPrototypeOf(r,Uint8Array.prototype);Object.setPrototypeOf(e,r);return e.foo()===42}catch(e){return false}}Object.defineProperty(Buffer.prototype,\"parent\",{enumerable:true,get:function(){if(!Buffer.isBuffer(this))return undefined;return this.buffer}});Object.defineProperty(Buffer.prototype,\"offset\",{enumerable:true,get:function(){if(!Buffer.isBuffer(this))return undefined;return this.byteOffset}});function createBuffer(e){if(e>o){throw new RangeError('The value \"'+e+'\" is invalid for option \"size\"')}var r=new Uint8Array(e);Object.setPrototypeOf(r,Buffer.prototype);return r}function Buffer(e,r,t){if(typeof e===\"number\"){if(typeof r===\"string\"){throw new TypeError('The \"string\" argument must be of type string. Received type number')}return allocUnsafe(e)}return from(e,r,t)}Buffer.poolSize=8192;function from(e,r,t){if(typeof e===\"string\"){return fromString(e,r)}if(ArrayBuffer.isView(e)){return fromArrayLike(e)}if(e==null){throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \"+\"or Array-like Object. Received type \"+typeof e)}if(isInstance(e,ArrayBuffer)||e&&isInstance(e.buffer,ArrayBuffer)){return fromArrayBuffer(e,r,t)}if(typeof SharedArrayBuffer!==\"undefined\"&&(isInstance(e,SharedArrayBuffer)||e&&isInstance(e.buffer,SharedArrayBuffer))){return fromArrayBuffer(e,r,t)}if(typeof e===\"number\"){throw new TypeError('The \"value\" argument must not be of type number. Received type number')}var f=e.valueOf&&e.valueOf();if(f!=null&&f!==e){return Buffer.from(f,r,t)}var n=fromObject(e);if(n)return n;if(typeof Symbol!==\"undefined\"&&Symbol.toPrimitive!=null&&typeof e[Symbol.toPrimitive]===\"function\"){return Buffer.from(e[Symbol.toPrimitive](\"string\"),r,t)}throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \"+\"or Array-like Object. Received type \"+typeof e)}Buffer.from=function(e,r,t){return from(e,r,t)};Object.setPrototypeOf(Buffer.prototype,Uint8Array.prototype);Object.setPrototypeOf(Buffer,Uint8Array);function assertSize(e){if(typeof e!==\"number\"){throw new TypeError('\"size\" argument must be of type number')}else if(e<0){throw new RangeError('The value \"'+e+'\" is invalid for option \"size\"')}}function alloc(e,r,t){assertSize(e);if(e<=0){return createBuffer(e)}if(r!==undefined){return typeof t===\"string\"?createBuffer(e).fill(r,t):createBuffer(e).fill(r)}return createBuffer(e)}Buffer.alloc=function(e,r,t){return alloc(e,r,t)};function allocUnsafe(e){assertSize(e);return createBuffer(e<0?0:checked(e)|0)}Buffer.allocUnsafe=function(e){return allocUnsafe(e)};Buffer.allocUnsafeSlow=function(e){return allocUnsafe(e)};function fromString(e,r){if(typeof r!==\"string\"||r===\"\"){r=\"utf8\"}if(!Buffer.isEncoding(r)){throw new TypeError(\"Unknown encoding: \"+r)}var t=byteLength(e,r)|0;var f=createBuffer(t);var n=f.write(e,r);if(n!==t){f=f.slice(0,n)}return f}function fromArrayLike(e){var r=e.length<0?0:checked(e.length)|0;var t=createBuffer(r);for(var f=0;f<r;f+=1){t[f]=e[f]&255}return t}function fromArrayBuffer(e,r,t){if(r<0||e.byteLength<r){throw new RangeError('\"offset\" is outside of buffer bounds')}if(e.byteLength<r+(t||0)){throw new RangeError('\"length\" is outside of buffer bounds')}var f;if(r===undefined&&t===undefined){f=new Uint8Array(e)}else if(t===undefined){f=new Uint8Array(e,r)}else{f=new Uint8Array(e,r,t)}Object.setPrototypeOf(f,Buffer.prototype);return f}function fromObject(e){if(Buffer.isBuffer(e)){var r=checked(e.length)|0;var t=createBuffer(r);if(t.length===0){return t}e.copy(t,0,0,r);return t}if(e.length!==undefined){if(typeof e.length!==\"number\"||numberIsNaN(e.length)){return createBuffer(0)}return fromArrayLike(e)}if(e.type===\"Buffer\"&&Array.isArray(e.data)){return fromArrayLike(e.data)}}function checked(e){if(e>=o){throw new RangeError(\"Attempt to allocate Buffer larger than maximum \"+\"size: 0x\"+o.toString(16)+\" bytes\")}return e|0}function SlowBuffer(e){if(+e!=e){e=0}return Buffer.alloc(+e)}Buffer.isBuffer=function isBuffer(e){return e!=null&&e._isBuffer===true&&e!==Buffer.prototype};Buffer.compare=function compare(e,r){if(isInstance(e,Uint8Array))e=Buffer.from(e,e.offset,e.byteLength);if(isInstance(r,Uint8Array))r=Buffer.from(r,r.offset,r.byteLength);if(!Buffer.isBuffer(e)||!Buffer.isBuffer(r)){throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array')}if(e===r)return 0;var t=e.length;var f=r.length;for(var n=0,i=Math.min(t,f);n<i;++n){if(e[n]!==r[n]){t=e[n];f=r[n];break}}if(t<f)return-1;if(f<t)return 1;return 0};Buffer.isEncoding=function isEncoding(e){switch(String(e).toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"latin1\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return true;default:return false}};Buffer.concat=function concat(e,r){if(!Array.isArray(e)){throw new TypeError('\"list\" argument must be an Array of Buffers')}if(e.length===0){return Buffer.alloc(0)}var t;if(r===undefined){r=0;for(t=0;t<e.length;++t){r+=e[t].length}}var f=Buffer.allocUnsafe(r);var n=0;for(t=0;t<e.length;++t){var i=e[t];if(isInstance(i,Uint8Array)){i=Buffer.from(i)}if(!Buffer.isBuffer(i)){throw new TypeError('\"list\" argument must be an Array of Buffers')}i.copy(f,n);n+=i.length}return f};function byteLength(e,r){if(Buffer.isBuffer(e)){return e.length}if(ArrayBuffer.isView(e)||isInstance(e,ArrayBuffer)){return e.byteLength}if(typeof e!==\"string\"){throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. '+\"Received type \"+typeof e)}var t=e.length;var f=arguments.length>2&&arguments[2]===true;if(!f&&t===0)return 0;var n=false;for(;;){switch(r){case\"ascii\":case\"latin1\":case\"binary\":return t;case\"utf8\":case\"utf-8\":return utf8ToBytes(e).length;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return t*2;case\"hex\":return t>>>1;case\"base64\":return base64ToBytes(e).length;default:if(n){return f?-1:utf8ToBytes(e).length}r=(\"\"+r).toLowerCase();n=true}}}Buffer.byteLength=byteLength;function slowToString(e,r,t){var f=false;if(r===undefined||r<0){r=0}if(r>this.length){return\"\"}if(t===undefined||t>this.length){t=this.length}if(t<=0){return\"\"}t>>>=0;r>>>=0;if(t<=r){return\"\"}if(!e)e=\"utf8\";while(true){switch(e){case\"hex\":return hexSlice(this,r,t);case\"utf8\":case\"utf-8\":return utf8Slice(this,r,t);case\"ascii\":return asciiSlice(this,r,t);case\"latin1\":case\"binary\":return latin1Slice(this,r,t);case\"base64\":return base64Slice(this,r,t);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return utf16leSlice(this,r,t);default:if(f)throw new TypeError(\"Unknown encoding: \"+e);e=(e+\"\").toLowerCase();f=true}}}Buffer.prototype._isBuffer=true;function swap(e,r,t){var f=e[r];e[r]=e[t];e[t]=f}Buffer.prototype.swap16=function swap16(){var e=this.length;if(e%2!==0){throw new RangeError(\"Buffer size must be a multiple of 16-bits\")}for(var r=0;r<e;r+=2){swap(this,r,r+1)}return this};Buffer.prototype.swap32=function swap32(){var e=this.length;if(e%4!==0){throw new RangeError(\"Buffer size must be a multiple of 32-bits\")}for(var r=0;r<e;r+=4){swap(this,r,r+3);swap(this,r+1,r+2)}return this};Buffer.prototype.swap64=function swap64(){var e=this.length;if(e%8!==0){throw new RangeError(\"Buffer size must be a multiple of 64-bits\")}for(var r=0;r<e;r+=8){swap(this,r,r+7);swap(this,r+1,r+6);swap(this,r+2,r+5);swap(this,r+3,r+4)}return this};Buffer.prototype.toString=function toString(){var e=this.length;if(e===0)return\"\";if(arguments.length===0)return utf8Slice(this,0,e);return slowToString.apply(this,arguments)};Buffer.prototype.toLocaleString=Buffer.prototype.toString;Buffer.prototype.equals=function equals(e){if(!Buffer.isBuffer(e))throw new TypeError(\"Argument must be a Buffer\");if(this===e)return true;return Buffer.compare(this,e)===0};Buffer.prototype.inspect=function inspect(){var e=\"\";var t=r.INSPECT_MAX_BYTES;e=this.toString(\"hex\",0,t).replace(/(.{2})/g,\"$1 \").trim();if(this.length>t)e+=\" ... \";return\"<Buffer \"+e+\">\"};if(i){Buffer.prototype[i]=Buffer.prototype.inspect}Buffer.prototype.compare=function compare(e,r,t,f,n){if(isInstance(e,Uint8Array)){e=Buffer.from(e,e.offset,e.byteLength)}if(!Buffer.isBuffer(e)){throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. '+\"Received type \"+typeof e)}if(r===undefined){r=0}if(t===undefined){t=e?e.length:0}if(f===undefined){f=0}if(n===undefined){n=this.length}if(r<0||t>e.length||f<0||n>this.length){throw new RangeError(\"out of range index\")}if(f>=n&&r>=t){return 0}if(f>=n){return-1}if(r>=t){return 1}r>>>=0;t>>>=0;f>>>=0;n>>>=0;if(this===e)return 0;var i=n-f;var o=t-r;var u=Math.min(i,o);var a=this.slice(f,n);var s=e.slice(r,t);for(var h=0;h<u;++h){if(a[h]!==s[h]){i=a[h];o=s[h];break}}if(i<o)return-1;if(o<i)return 1;return 0};function bidirectionalIndexOf(e,r,t,f,n){if(e.length===0)return-1;if(typeof t===\"string\"){f=t;t=0}else if(t>2147483647){t=2147483647}else if(t<-2147483648){t=-2147483648}t=+t;if(numberIsNaN(t)){t=n?0:e.length-1}if(t<0)t=e.length+t;if(t>=e.length){if(n)return-1;else t=e.length-1}else if(t<0){if(n)t=0;else return-1}if(typeof r===\"string\"){r=Buffer.from(r,f)}if(Buffer.isBuffer(r)){if(r.length===0){return-1}return arrayIndexOf(e,r,t,f,n)}else if(typeof r===\"number\"){r=r&255;if(typeof Uint8Array.prototype.indexOf===\"function\"){if(n){return Uint8Array.prototype.indexOf.call(e,r,t)}else{return Uint8Array.prototype.lastIndexOf.call(e,r,t)}}return arrayIndexOf(e,[r],t,f,n)}throw new TypeError(\"val must be string, number or Buffer\")}function arrayIndexOf(e,r,t,f,n){var i=1;var o=e.length;var u=r.length;if(f!==undefined){f=String(f).toLowerCase();if(f===\"ucs2\"||f===\"ucs-2\"||f===\"utf16le\"||f===\"utf-16le\"){if(e.length<2||r.length<2){return-1}i=2;o/=2;u/=2;t/=2}}function read(e,r){if(i===1){return e[r]}else{return e.readUInt16BE(r*i)}}var a;if(n){var s=-1;for(a=t;a<o;a++){if(read(e,a)===read(r,s===-1?0:a-s)){if(s===-1)s=a;if(a-s+1===u)return s*i}else{if(s!==-1)a-=a-s;s=-1}}}else{if(t+u>o)t=o-u;for(a=t;a>=0;a--){var h=true;for(var c=0;c<u;c++){if(read(e,a+c)!==read(r,c)){h=false;break}}if(h)return a}}return-1}Buffer.prototype.includes=function includes(e,r,t){return this.indexOf(e,r,t)!==-1};Buffer.prototype.indexOf=function indexOf(e,r,t){return bidirectionalIndexOf(this,e,r,t,true)};Buffer.prototype.lastIndexOf=function lastIndexOf(e,r,t){return bidirectionalIndexOf(this,e,r,t,false)};function hexWrite(e,r,t,f){t=Number(t)||0;var n=e.length-t;if(!f){f=n}else{f=Number(f);if(f>n){f=n}}var i=r.length;if(f>i/2){f=i/2}for(var o=0;o<f;++o){var u=parseInt(r.substr(o*2,2),16);if(numberIsNaN(u))return o;e[t+o]=u}return o}function utf8Write(e,r,t,f){return blitBuffer(utf8ToBytes(r,e.length-t),e,t,f)}function asciiWrite(e,r,t,f){return blitBuffer(asciiToBytes(r),e,t,f)}function latin1Write(e,r,t,f){return asciiWrite(e,r,t,f)}function base64Write(e,r,t,f){return blitBuffer(base64ToBytes(r),e,t,f)}function ucs2Write(e,r,t,f){return blitBuffer(utf16leToBytes(r,e.length-t),e,t,f)}Buffer.prototype.write=function write(e,r,t,f){if(r===undefined){f=\"utf8\";t=this.length;r=0}else if(t===undefined&&typeof r===\"string\"){f=r;t=this.length;r=0}else if(isFinite(r)){r=r>>>0;if(isFinite(t)){t=t>>>0;if(f===undefined)f=\"utf8\"}else{f=t;t=undefined}}else{throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\")}var n=this.length-r;if(t===undefined||t>n)t=n;if(e.length>0&&(t<0||r<0)||r>this.length){throw new RangeError(\"Attempt to write outside buffer bounds\")}if(!f)f=\"utf8\";var i=false;for(;;){switch(f){case\"hex\":return hexWrite(this,e,r,t);case\"utf8\":case\"utf-8\":return utf8Write(this,e,r,t);case\"ascii\":return asciiWrite(this,e,r,t);case\"latin1\":case\"binary\":return latin1Write(this,e,r,t);case\"base64\":return base64Write(this,e,r,t);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return ucs2Write(this,e,r,t);default:if(i)throw new TypeError(\"Unknown encoding: \"+f);f=(\"\"+f).toLowerCase();i=true}}};Buffer.prototype.toJSON=function toJSON(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}};function base64Slice(e,r,t){if(r===0&&t===e.length){return f.fromByteArray(e)}else{return f.fromByteArray(e.slice(r,t))}}function utf8Slice(e,r,t){t=Math.min(e.length,t);var f=[];var n=r;while(n<t){var i=e[n];var o=null;var u=i>239?4:i>223?3:i>191?2:1;if(n+u<=t){var a,s,h,c;switch(u){case 1:if(i<128){o=i}break;case 2:a=e[n+1];if((a&192)===128){c=(i&31)<<6|a&63;if(c>127){o=c}}break;case 3:a=e[n+1];s=e[n+2];if((a&192)===128&&(s&192)===128){c=(i&15)<<12|(a&63)<<6|s&63;if(c>2047&&(c<55296||c>57343)){o=c}}break;case 4:a=e[n+1];s=e[n+2];h=e[n+3];if((a&192)===128&&(s&192)===128&&(h&192)===128){c=(i&15)<<18|(a&63)<<12|(s&63)<<6|h&63;if(c>65535&&c<1114112){o=c}}}}if(o===null){o=65533;u=1}else if(o>65535){o-=65536;f.push(o>>>10&1023|55296);o=56320|o&1023}f.push(o);n+=u}return decodeCodePointsArray(f)}var u=4096;function decodeCodePointsArray(e){var r=e.length;if(r<=u){return String.fromCharCode.apply(String,e)}var t=\"\";var f=0;while(f<r){t+=String.fromCharCode.apply(String,e.slice(f,f+=u))}return t}function asciiSlice(e,r,t){var f=\"\";t=Math.min(e.length,t);for(var n=r;n<t;++n){f+=String.fromCharCode(e[n]&127)}return f}function latin1Slice(e,r,t){var f=\"\";t=Math.min(e.length,t);for(var n=r;n<t;++n){f+=String.fromCharCode(e[n])}return f}function hexSlice(e,r,t){var f=e.length;if(!r||r<0)r=0;if(!t||t<0||t>f)t=f;var n=\"\";for(var i=r;i<t;++i){n+=s[e[i]]}return n}function utf16leSlice(e,r,t){var f=e.slice(r,t);var n=\"\";for(var i=0;i<f.length;i+=2){n+=String.fromCharCode(f[i]+f[i+1]*256)}return n}Buffer.prototype.slice=function slice(e,r){var t=this.length;e=~~e;r=r===undefined?t:~~r;if(e<0){e+=t;if(e<0)e=0}else if(e>t){e=t}if(r<0){r+=t;if(r<0)r=0}else if(r>t){r=t}if(r<e)r=e;var f=this.subarray(e,r);Object.setPrototypeOf(f,Buffer.prototype);return f};function checkOffset(e,r,t){if(e%1!==0||e<0)throw new RangeError(\"offset is not uint\");if(e+r>t)throw new RangeError(\"Trying to access beyond buffer length\")}Buffer.prototype.readUIntLE=function readUIntLE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=this[e];var n=1;var i=0;while(++i<r&&(n*=256)){f+=this[e+i]*n}return f};Buffer.prototype.readUIntBE=function readUIntBE(e,r,t){e=e>>>0;r=r>>>0;if(!t){checkOffset(e,r,this.length)}var f=this[e+--r];var n=1;while(r>0&&(n*=256)){f+=this[e+--r]*n}return f};Buffer.prototype.readUInt8=function readUInt8(e,r){e=e>>>0;if(!r)checkOffset(e,1,this.length);return this[e]};Buffer.prototype.readUInt16LE=function readUInt16LE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);return this[e]|this[e+1]<<8};Buffer.prototype.readUInt16BE=function readUInt16BE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);return this[e]<<8|this[e+1]};Buffer.prototype.readUInt32LE=function readUInt32LE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return(this[e]|this[e+1]<<8|this[e+2]<<16)+this[e+3]*16777216};Buffer.prototype.readUInt32BE=function readUInt32BE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]*16777216+(this[e+1]<<16|this[e+2]<<8|this[e+3])};Buffer.prototype.readIntLE=function readIntLE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=this[e];var n=1;var i=0;while(++i<r&&(n*=256)){f+=this[e+i]*n}n*=128;if(f>=n)f-=Math.pow(2,8*r);return f};Buffer.prototype.readIntBE=function readIntBE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=r;var n=1;var i=this[e+--f];while(f>0&&(n*=256)){i+=this[e+--f]*n}n*=128;if(i>=n)i-=Math.pow(2,8*r);return i};Buffer.prototype.readInt8=function readInt8(e,r){e=e>>>0;if(!r)checkOffset(e,1,this.length);if(!(this[e]&128))return this[e];return(255-this[e]+1)*-1};Buffer.prototype.readInt16LE=function readInt16LE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);var t=this[e]|this[e+1]<<8;return t&32768?t|4294901760:t};Buffer.prototype.readInt16BE=function readInt16BE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);var t=this[e+1]|this[e]<<8;return t&32768?t|4294901760:t};Buffer.prototype.readInt32LE=function readInt32LE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24};Buffer.prototype.readInt32BE=function readInt32BE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]};Buffer.prototype.readFloatLE=function readFloatLE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return n.read(this,e,true,23,4)};Buffer.prototype.readFloatBE=function readFloatBE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return n.read(this,e,false,23,4)};Buffer.prototype.readDoubleLE=function readDoubleLE(e,r){e=e>>>0;if(!r)checkOffset(e,8,this.length);return n.read(this,e,true,52,8)};Buffer.prototype.readDoubleBE=function readDoubleBE(e,r){e=e>>>0;if(!r)checkOffset(e,8,this.length);return n.read(this,e,false,52,8)};function checkInt(e,r,t,f,n,i){if(!Buffer.isBuffer(e))throw new TypeError('\"buffer\" argument must be a Buffer instance');if(r>n||r<i)throw new RangeError('\"value\" argument is out of bounds');if(t+f>e.length)throw new RangeError(\"Index out of range\")}Buffer.prototype.writeUIntLE=function writeUIntLE(e,r,t,f){e=+e;r=r>>>0;t=t>>>0;if(!f){var n=Math.pow(2,8*t)-1;checkInt(this,e,r,t,n,0)}var i=1;var o=0;this[r]=e&255;while(++o<t&&(i*=256)){this[r+o]=e/i&255}return r+t};Buffer.prototype.writeUIntBE=function writeUIntBE(e,r,t,f){e=+e;r=r>>>0;t=t>>>0;if(!f){var n=Math.pow(2,8*t)-1;checkInt(this,e,r,t,n,0)}var i=t-1;var o=1;this[r+i]=e&255;while(--i>=0&&(o*=256)){this[r+i]=e/o&255}return r+t};Buffer.prototype.writeUInt8=function writeUInt8(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,1,255,0);this[r]=e&255;return r+1};Buffer.prototype.writeUInt16LE=function writeUInt16LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,65535,0);this[r]=e&255;this[r+1]=e>>>8;return r+2};Buffer.prototype.writeUInt16BE=function writeUInt16BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,65535,0);this[r]=e>>>8;this[r+1]=e&255;return r+2};Buffer.prototype.writeUInt32LE=function writeUInt32LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,4294967295,0);this[r+3]=e>>>24;this[r+2]=e>>>16;this[r+1]=e>>>8;this[r]=e&255;return r+4};Buffer.prototype.writeUInt32BE=function writeUInt32BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,4294967295,0);this[r]=e>>>24;this[r+1]=e>>>16;this[r+2]=e>>>8;this[r+3]=e&255;return r+4};Buffer.prototype.writeIntLE=function writeIntLE(e,r,t,f){e=+e;r=r>>>0;if(!f){var n=Math.pow(2,8*t-1);checkInt(this,e,r,t,n-1,-n)}var i=0;var o=1;var u=0;this[r]=e&255;while(++i<t&&(o*=256)){if(e<0&&u===0&&this[r+i-1]!==0){u=1}this[r+i]=(e/o>>0)-u&255}return r+t};Buffer.prototype.writeIntBE=function writeIntBE(e,r,t,f){e=+e;r=r>>>0;if(!f){var n=Math.pow(2,8*t-1);checkInt(this,e,r,t,n-1,-n)}var i=t-1;var o=1;var u=0;this[r+i]=e&255;while(--i>=0&&(o*=256)){if(e<0&&u===0&&this[r+i+1]!==0){u=1}this[r+i]=(e/o>>0)-u&255}return r+t};Buffer.prototype.writeInt8=function writeInt8(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,1,127,-128);if(e<0)e=255+e+1;this[r]=e&255;return r+1};Buffer.prototype.writeInt16LE=function writeInt16LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,32767,-32768);this[r]=e&255;this[r+1]=e>>>8;return r+2};Buffer.prototype.writeInt16BE=function writeInt16BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,32767,-32768);this[r]=e>>>8;this[r+1]=e&255;return r+2};Buffer.prototype.writeInt32LE=function writeInt32LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,2147483647,-2147483648);this[r]=e&255;this[r+1]=e>>>8;this[r+2]=e>>>16;this[r+3]=e>>>24;return r+4};Buffer.prototype.writeInt32BE=function writeInt32BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,2147483647,-2147483648);if(e<0)e=4294967295+e+1;this[r]=e>>>24;this[r+1]=e>>>16;this[r+2]=e>>>8;this[r+3]=e&255;return r+4};function checkIEEE754(e,r,t,f,n,i){if(t+f>e.length)throw new RangeError(\"Index out of range\");if(t<0)throw new RangeError(\"Index out of range\")}function writeFloat(e,r,t,f,i){r=+r;t=t>>>0;if(!i){checkIEEE754(e,r,t,4,34028234663852886e22,-34028234663852886e22)}n.write(e,r,t,f,23,4);return t+4}Buffer.prototype.writeFloatLE=function writeFloatLE(e,r,t){return writeFloat(this,e,r,true,t)};Buffer.prototype.writeFloatBE=function writeFloatBE(e,r,t){return writeFloat(this,e,r,false,t)};function writeDouble(e,r,t,f,i){r=+r;t=t>>>0;if(!i){checkIEEE754(e,r,t,8,17976931348623157e292,-17976931348623157e292)}n.write(e,r,t,f,52,8);return t+8}Buffer.prototype.writeDoubleLE=function writeDoubleLE(e,r,t){return writeDouble(this,e,r,true,t)};Buffer.prototype.writeDoubleBE=function writeDoubleBE(e,r,t){return writeDouble(this,e,r,false,t)};Buffer.prototype.copy=function copy(e,r,t,f){if(!Buffer.isBuffer(e))throw new TypeError(\"argument should be a Buffer\");if(!t)t=0;if(!f&&f!==0)f=this.length;if(r>=e.length)r=e.length;if(!r)r=0;if(f>0&&f<t)f=t;if(f===t)return 0;if(e.length===0||this.length===0)return 0;if(r<0){throw new RangeError(\"targetStart out of bounds\")}if(t<0||t>=this.length)throw new RangeError(\"Index out of range\");if(f<0)throw new RangeError(\"sourceEnd out of bounds\");if(f>this.length)f=this.length;if(e.length-r<f-t){f=e.length-r+t}var n=f-t;if(this===e&&typeof Uint8Array.prototype.copyWithin===\"function\"){this.copyWithin(r,t,f)}else if(this===e&&t<r&&r<f){for(var i=n-1;i>=0;--i){e[i+r]=this[i+t]}}else{Uint8Array.prototype.set.call(e,this.subarray(t,f),r)}return n};Buffer.prototype.fill=function fill(e,r,t,f){if(typeof e===\"string\"){if(typeof r===\"string\"){f=r;r=0;t=this.length}else if(typeof t===\"string\"){f=t;t=this.length}if(f!==undefined&&typeof f!==\"string\"){throw new TypeError(\"encoding must be a string\")}if(typeof f===\"string\"&&!Buffer.isEncoding(f)){throw new TypeError(\"Unknown encoding: \"+f)}if(e.length===1){var n=e.charCodeAt(0);if(f===\"utf8\"&&n<128||f===\"latin1\"){e=n}}}else if(typeof e===\"number\"){e=e&255}else if(typeof e===\"boolean\"){e=Number(e)}if(r<0||this.length<r||this.length<t){throw new RangeError(\"Out of range index\")}if(t<=r){return this}r=r>>>0;t=t===undefined?this.length:t>>>0;if(!e)e=0;var i;if(typeof e===\"number\"){for(i=r;i<t;++i){this[i]=e}}else{var o=Buffer.isBuffer(e)?e:Buffer.from(e,f);var u=o.length;if(u===0){throw new TypeError('The value \"'+e+'\" is invalid for argument \"value\"')}for(i=0;i<t-r;++i){this[i+r]=o[i%u]}}return this};var a=/[^+/0-9A-Za-z-_]/g;function base64clean(e){e=e.split(\"=\")[0];e=e.trim().replace(a,\"\");if(e.length<2)return\"\";while(e.length%4!==0){e=e+\"=\"}return e}function utf8ToBytes(e,r){r=r||Infinity;var t;var f=e.length;var n=null;var i=[];for(var o=0;o<f;++o){t=e.charCodeAt(o);if(t>55295&&t<57344){if(!n){if(t>56319){if((r-=3)>-1)i.push(239,191,189);continue}else if(o+1===f){if((r-=3)>-1)i.push(239,191,189);continue}n=t;continue}if(t<56320){if((r-=3)>-1)i.push(239,191,189);n=t;continue}t=(n-55296<<10|t-56320)+65536}else if(n){if((r-=3)>-1)i.push(239,191,189)}n=null;if(t<128){if((r-=1)<0)break;i.push(t)}else if(t<2048){if((r-=2)<0)break;i.push(t>>6|192,t&63|128)}else if(t<65536){if((r-=3)<0)break;i.push(t>>12|224,t>>6&63|128,t&63|128)}else if(t<1114112){if((r-=4)<0)break;i.push(t>>18|240,t>>12&63|128,t>>6&63|128,t&63|128)}else{throw new Error(\"Invalid code point\")}}return i}function asciiToBytes(e){var r=[];for(var t=0;t<e.length;++t){r.push(e.charCodeAt(t)&255)}return r}function utf16leToBytes(e,r){var t,f,n;var i=[];for(var o=0;o<e.length;++o){if((r-=2)<0)break;t=e.charCodeAt(o);f=t>>8;n=t%256;i.push(n);i.push(f)}return i}function base64ToBytes(e){return f.toByteArray(base64clean(e))}function blitBuffer(e,r,t,f){for(var n=0;n<f;++n){if(n+t>=r.length||n>=e.length)break;r[n+t]=e[n]}return n}function isInstance(e,r){return e instanceof r||e!=null&&e.constructor!=null&&e.constructor.name!=null&&e.constructor.name===r.name}function numberIsNaN(e){return e!==e}var s=function(){var e=\"0123456789abcdef\";var r=new Array(256);for(var t=0;t<16;++t){var f=t*16;for(var n=0;n<16;++n){r[f+n]=e[t]+e[n]}}return r}()},783:function(e,r){\n/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nr.read=function(e,r,t,f,n){var i,o;var u=n*8-f-1;var a=(1<<u)-1;var s=a>>1;var h=-7;var c=t?n-1:0;var l=t?-1:1;var p=e[r+c];c+=l;i=p&(1<<-h)-1;p>>=-h;h+=u;for(;h>0;i=i*256+e[r+c],c+=l,h-=8){}o=i&(1<<-h)-1;i>>=-h;h+=f;for(;h>0;o=o*256+e[r+c],c+=l,h-=8){}if(i===0){i=1-s}else if(i===a){return o?NaN:(p?-1:1)*Infinity}else{o=o+Math.pow(2,f);i=i-s}return(p?-1:1)*o*Math.pow(2,i-f)};r.write=function(e,r,t,f,n,i){var o,u,a;var s=i*8-n-1;var h=(1<<s)-1;var c=h>>1;var l=n===23?Math.pow(2,-24)-Math.pow(2,-77):0;var p=f?0:i-1;var y=f?1:-1;var g=r<0||r===0&&1/r<0?1:0;r=Math.abs(r);if(isNaN(r)||r===Infinity){u=isNaN(r)?1:0;o=h}else{o=Math.floor(Math.log(r)/Math.LN2);if(r*(a=Math.pow(2,-o))<1){o--;a*=2}if(o+c>=1){r+=l/a}else{r+=l*Math.pow(2,1-c)}if(r*a>=2){o++;a/=2}if(o+c>=h){u=0;o=h}else if(o+c>=1){u=(r*a-1)*Math.pow(2,n);o=o+c}else{u=r*Math.pow(2,c-1)*Math.pow(2,n);o=0}}for(;n>=8;e[t+p]=u&255,p+=y,u/=256,n-=8){}o=o<<n|u;s+=n;for(;s>0;e[t+p]=o&255,p+=y,o/=256,s-=8){}e[t+p-y]|=g*128}}};var r={};function __nccwpck_require__(t){var f=r[t];if(f!==undefined){return f.exports}var n=r[t]={exports:{}};var i=true;try{e[t](n,n.exports,__nccwpck_require__);i=false}finally{if(i)delete r[t]}return n.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(72);module.exports=t})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/buffer/index.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/compiled/setimmediate/setImmediate.js":
/*!**********************************************************************!*\
  !*** ./node_modules/next/dist/compiled/setimmediate/setImmediate.js ***!
  \**********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n(function(){var e={189:function(){(function(e,t){\"use strict\";if(e.setImmediate){return}var n=1;var a={};var s=false;var i=e.document;var r;function setImmediate(e){if(typeof e!==\"function\"){e=new Function(\"\"+e)}var t=new Array(arguments.length-1);for(var s=0;s<t.length;s++){t[s]=arguments[s+1]}var i={callback:e,args:t};a[n]=i;r(n);return n++}function clearImmediate(e){delete a[e]}function run(e){var n=e.callback;var a=e.args;switch(a.length){case 0:n();break;case 1:n(a[0]);break;case 2:n(a[0],a[1]);break;case 3:n(a[0],a[1],a[2]);break;default:n.apply(t,a);break}}function runIfPresent(e){if(s){setTimeout(runIfPresent,0,e)}else{var t=a[e];if(t){s=true;try{run(t)}finally{clearImmediate(e);s=false}}}}function installNextTickImplementation(){r=function(e){process.nextTick((function(){runIfPresent(e)}))}}function canUsePostMessage(){if(e.postMessage&&!e.importScripts){var t=true;var n=e.onmessage;e.onmessage=function(){t=false};e.postMessage(\"\",\"*\");e.onmessage=n;return t}}function installPostMessageImplementation(){var t=\"setImmediate$\"+Math.random()+\"$\";var onGlobalMessage=function(n){if(n.source===e&&typeof n.data===\"string\"&&n.data.indexOf(t)===0){runIfPresent(+n.data.slice(t.length))}};if(e.addEventListener){e.addEventListener(\"message\",onGlobalMessage,false)}else{e.attachEvent(\"onmessage\",onGlobalMessage)}r=function(n){e.postMessage(t+n,\"*\")}}function installMessageChannelImplementation(){var e=new MessageChannel;e.port1.onmessage=function(e){var t=e.data;runIfPresent(t)};r=function(t){e.port2.postMessage(t)}}function installReadyStateChangeImplementation(){var e=i.documentElement;r=function(t){var n=i.createElement(\"script\");n.onreadystatechange=function(){runIfPresent(t);n.onreadystatechange=null;e.removeChild(n);n=null};e.appendChild(n)}}function installSetTimeoutImplementation(){r=function(e){setTimeout(runIfPresent,0,e)}}var o=Object.getPrototypeOf&&Object.getPrototypeOf(e);o=o&&o.setTimeout?o:e;if({}.toString.call(e.process)===\"[object process]\"){installNextTickImplementation()}else if(canUsePostMessage()){installPostMessageImplementation()}else if(e.MessageChannel){installMessageChannelImplementation()}else if(i&&\"onreadystatechange\"in i.createElement(\"script\")){installReadyStateChangeImplementation()}else{installSetTimeoutImplementation()}o.setImmediate=setImmediate;o.clearImmediate=clearImmediate})(typeof self===\"undefined\"?typeof __webpack_require__.g===\"undefined\"?this:__webpack_require__.g:self)}};if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t={};e[189]();module.exports=t})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3NldGltbWVkaWF0ZS9zZXRJbW1lZGlhdGUuanMuanMiLCJtYXBwaW5ncyI6Ijs7QUFBQSxZQUFZLE9BQU8sZUFBZSxlQUFlLGFBQWEsbUJBQW1CLE9BQU8sUUFBUSxTQUFTLFlBQVksaUJBQWlCLE1BQU0seUJBQXlCLDBCQUEwQixxQkFBcUIsb0NBQW9DLFlBQVksV0FBVyxLQUFLLG9CQUFvQixPQUFPLG1CQUFtQixPQUFPLEtBQUssV0FBVywyQkFBMkIsWUFBWSxnQkFBZ0IsaUJBQWlCLGFBQWEsaUJBQWlCLFdBQVcsTUFBTSxlQUFlLE1BQU0sb0JBQW9CLE1BQU0seUJBQXlCLE1BQU0scUJBQXFCLE9BQU8seUJBQXlCLE1BQU0sNkJBQTZCLEtBQUssV0FBVyxNQUFNLE9BQU8sSUFBSSxPQUFPLFFBQVEsa0JBQWtCLFdBQVcseUNBQXlDLGNBQWMsT0FBTyxzQkFBc0IsZ0JBQWdCLElBQUksNkJBQTZCLG9DQUFvQyxXQUFXLGtCQUFrQix1QkFBdUIsU0FBUyxzQkFBc0IsY0FBYyxVQUFVLDRDQUE0Qyx3Q0FBd0MsZ0NBQWdDLGtFQUFrRSx3Q0FBd0MsdUJBQXVCLG9EQUFvRCxLQUFLLDJDQUEyQyxjQUFjLHdCQUF3QiwrQ0FBK0MseUJBQXlCLDhCQUE4QixhQUFhLGlCQUFpQixjQUFjLHdCQUF3QixpREFBaUQsd0JBQXdCLGNBQWMsZ0NBQWdDLGdDQUFnQyxnQkFBZ0IsMEJBQTBCLGlCQUFpQixRQUFRLGtCQUFrQiwyQ0FBMkMsY0FBYyw4QkFBOEIsc0RBQXNELHNCQUFzQixLQUFLLGdEQUFnRCxnQ0FBZ0MsNkJBQTZCLG1DQUFtQywwQkFBMEIsc0NBQXNDLDZEQUE2RCx3Q0FBd0MsS0FBSyxrQ0FBa0MsNEJBQTRCLGdDQUFnQyxtQ0FBbUMscUJBQU0sb0JBQW9CLHFCQUFNLFNBQVMsbUVBQW1FLFNBQVMsS0FBSyxTQUFTLFNBQVMsaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvc2V0aW1tZWRpYXRlL3NldEltbWVkaWF0ZS5qcz83YTA0Il0sInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpe3ZhciBlPXsxODk6ZnVuY3Rpb24oKXsoZnVuY3Rpb24oZSx0KXtcInVzZSBzdHJpY3RcIjtpZihlLnNldEltbWVkaWF0ZSl7cmV0dXJufXZhciBuPTE7dmFyIGE9e307dmFyIHM9ZmFsc2U7dmFyIGk9ZS5kb2N1bWVudDt2YXIgcjtmdW5jdGlvbiBzZXRJbW1lZGlhdGUoZSl7aWYodHlwZW9mIGUhPT1cImZ1bmN0aW9uXCIpe2U9bmV3IEZ1bmN0aW9uKFwiXCIrZSl9dmFyIHQ9bmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGgtMSk7Zm9yKHZhciBzPTA7czx0Lmxlbmd0aDtzKyspe3Rbc109YXJndW1lbnRzW3MrMV19dmFyIGk9e2NhbGxiYWNrOmUsYXJnczp0fTthW25dPWk7cihuKTtyZXR1cm4gbisrfWZ1bmN0aW9uIGNsZWFySW1tZWRpYXRlKGUpe2RlbGV0ZSBhW2VdfWZ1bmN0aW9uIHJ1bihlKXt2YXIgbj1lLmNhbGxiYWNrO3ZhciBhPWUuYXJncztzd2l0Y2goYS5sZW5ndGgpe2Nhc2UgMDpuKCk7YnJlYWs7Y2FzZSAxOm4oYVswXSk7YnJlYWs7Y2FzZSAyOm4oYVswXSxhWzFdKTticmVhaztjYXNlIDM6bihhWzBdLGFbMV0sYVsyXSk7YnJlYWs7ZGVmYXVsdDpuLmFwcGx5KHQsYSk7YnJlYWt9fWZ1bmN0aW9uIHJ1bklmUHJlc2VudChlKXtpZihzKXtzZXRUaW1lb3V0KHJ1bklmUHJlc2VudCwwLGUpfWVsc2V7dmFyIHQ9YVtlXTtpZih0KXtzPXRydWU7dHJ5e3J1bih0KX1maW5hbGx5e2NsZWFySW1tZWRpYXRlKGUpO3M9ZmFsc2V9fX19ZnVuY3Rpb24gaW5zdGFsbE5leHRUaWNrSW1wbGVtZW50YXRpb24oKXtyPWZ1bmN0aW9uKGUpe3Byb2Nlc3MubmV4dFRpY2soKGZ1bmN0aW9uKCl7cnVuSWZQcmVzZW50KGUpfSkpfX1mdW5jdGlvbiBjYW5Vc2VQb3N0TWVzc2FnZSgpe2lmKGUucG9zdE1lc3NhZ2UmJiFlLmltcG9ydFNjcmlwdHMpe3ZhciB0PXRydWU7dmFyIG49ZS5vbm1lc3NhZ2U7ZS5vbm1lc3NhZ2U9ZnVuY3Rpb24oKXt0PWZhbHNlfTtlLnBvc3RNZXNzYWdlKFwiXCIsXCIqXCIpO2Uub25tZXNzYWdlPW47cmV0dXJuIHR9fWZ1bmN0aW9uIGluc3RhbGxQb3N0TWVzc2FnZUltcGxlbWVudGF0aW9uKCl7dmFyIHQ9XCJzZXRJbW1lZGlhdGUkXCIrTWF0aC5yYW5kb20oKStcIiRcIjt2YXIgb25HbG9iYWxNZXNzYWdlPWZ1bmN0aW9uKG4pe2lmKG4uc291cmNlPT09ZSYmdHlwZW9mIG4uZGF0YT09PVwic3RyaW5nXCImJm4uZGF0YS5pbmRleE9mKHQpPT09MCl7cnVuSWZQcmVzZW50KCtuLmRhdGEuc2xpY2UodC5sZW5ndGgpKX19O2lmKGUuYWRkRXZlbnRMaXN0ZW5lcil7ZS5hZGRFdmVudExpc3RlbmVyKFwibWVzc2FnZVwiLG9uR2xvYmFsTWVzc2FnZSxmYWxzZSl9ZWxzZXtlLmF0dGFjaEV2ZW50KFwib25tZXNzYWdlXCIsb25HbG9iYWxNZXNzYWdlKX1yPWZ1bmN0aW9uKG4pe2UucG9zdE1lc3NhZ2UodCtuLFwiKlwiKX19ZnVuY3Rpb24gaW5zdGFsbE1lc3NhZ2VDaGFubmVsSW1wbGVtZW50YXRpb24oKXt2YXIgZT1uZXcgTWVzc2FnZUNoYW5uZWw7ZS5wb3J0MS5vbm1lc3NhZ2U9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5kYXRhO3J1bklmUHJlc2VudCh0KX07cj1mdW5jdGlvbih0KXtlLnBvcnQyLnBvc3RNZXNzYWdlKHQpfX1mdW5jdGlvbiBpbnN0YWxsUmVhZHlTdGF0ZUNoYW5nZUltcGxlbWVudGF0aW9uKCl7dmFyIGU9aS5kb2N1bWVudEVsZW1lbnQ7cj1mdW5jdGlvbih0KXt2YXIgbj1pLmNyZWF0ZUVsZW1lbnQoXCJzY3JpcHRcIik7bi5vbnJlYWR5c3RhdGVjaGFuZ2U9ZnVuY3Rpb24oKXtydW5JZlByZXNlbnQodCk7bi5vbnJlYWR5c3RhdGVjaGFuZ2U9bnVsbDtlLnJlbW92ZUNoaWxkKG4pO249bnVsbH07ZS5hcHBlbmRDaGlsZChuKX19ZnVuY3Rpb24gaW5zdGFsbFNldFRpbWVvdXRJbXBsZW1lbnRhdGlvbigpe3I9ZnVuY3Rpb24oZSl7c2V0VGltZW91dChydW5JZlByZXNlbnQsMCxlKX19dmFyIG89T2JqZWN0LmdldFByb3RvdHlwZU9mJiZPYmplY3QuZ2V0UHJvdG90eXBlT2YoZSk7bz1vJiZvLnNldFRpbWVvdXQ/bzplO2lmKHt9LnRvU3RyaW5nLmNhbGwoZS5wcm9jZXNzKT09PVwiW29iamVjdCBwcm9jZXNzXVwiKXtpbnN0YWxsTmV4dFRpY2tJbXBsZW1lbnRhdGlvbigpfWVsc2UgaWYoY2FuVXNlUG9zdE1lc3NhZ2UoKSl7aW5zdGFsbFBvc3RNZXNzYWdlSW1wbGVtZW50YXRpb24oKX1lbHNlIGlmKGUuTWVzc2FnZUNoYW5uZWwpe2luc3RhbGxNZXNzYWdlQ2hhbm5lbEltcGxlbWVudGF0aW9uKCl9ZWxzZSBpZihpJiZcIm9ucmVhZHlzdGF0ZWNoYW5nZVwiaW4gaS5jcmVhdGVFbGVtZW50KFwic2NyaXB0XCIpKXtpbnN0YWxsUmVhZHlTdGF0ZUNoYW5nZUltcGxlbWVudGF0aW9uKCl9ZWxzZXtpbnN0YWxsU2V0VGltZW91dEltcGxlbWVudGF0aW9uKCl9by5zZXRJbW1lZGlhdGU9c2V0SW1tZWRpYXRlO28uY2xlYXJJbW1lZGlhdGU9Y2xlYXJJbW1lZGlhdGV9KSh0eXBlb2Ygc2VsZj09PVwidW5kZWZpbmVkXCI/dHlwZW9mIGdsb2JhbD09PVwidW5kZWZpbmVkXCI/dGhpczpnbG9iYWw6c2VsZil9fTtpZih0eXBlb2YgX19uY2N3cGNrX3JlcXVpcmVfXyE9PVwidW5kZWZpbmVkXCIpX19uY2N3cGNrX3JlcXVpcmVfXy5hYj1fX2Rpcm5hbWUrXCIvXCI7dmFyIHQ9e307ZVsxODldKCk7bW9kdWxlLmV4cG9ydHM9dH0pKCk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/setimmediate/setImmediate.js\n"));

/***/ }),

/***/ "./node_modules/react-cookies/build/cookie.js":
/*!****************************************************!*\
  !*** ./node_modules/react-cookies/build/cookie.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.load = load;\nexports.loadAll = loadAll;\nexports.select = select;\nexports.save = save;\nexports.remove = remove;\nexports.setRawCookie = setRawCookie;\nexports.plugToRequest = plugToRequest;\n\nvar _cookie = __webpack_require__(/*! cookie */ \"./node_modules/react-cookies/node_modules/cookie/index.js\");\n\nvar _cookie2 = _interopRequireDefault(_cookie);\n\nvar _objectAssign = __webpack_require__(/*! object-assign */ \"./node_modules/next/dist/build/polyfills/object-assign.js\");\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar IS_NODE = typeof document === 'undefined' || typeof process !== 'undefined' && process.env && \"development\" === 'test';\nvar _rawCookie = {};\nvar _res = void 0;\n\nfunction _isResWritable() {\n  return _res && !_res.headersSent;\n}\n\nfunction load(name, doNotParse) {\n  var cookies = IS_NODE ? _rawCookie : _cookie2.default.parse(document.cookie);\n  var cookieVal = cookies && cookies[name];\n\n  if (typeof doNotParse === 'undefined') {\n    doNotParse = !cookieVal || cookieVal[0] !== '{' && cookieVal[0] !== '[';\n  }\n\n  if (!doNotParse) {\n    try {\n      cookieVal = JSON.parse(cookieVal);\n    } catch (err) {\n      // Not serialized object\n    }\n  }\n\n  return cookieVal;\n}\n\nfunction loadAll(doNotParse) {\n  var cookies = IS_NODE ? _rawCookie : _cookie2.default.parse(document.cookie);\n  var cookieVal = cookies;\n\n  if (typeof doNotParse === 'undefined') {\n    doNotParse = !cookieVal || cookieVal[0] !== '{' && cookieVal[0] !== '[';\n  }\n\n  if (!doNotParse) {\n    try {\n      cookieVal = JSON.parse(cookieVal);\n    } catch (err) {\n      // Not serialized object\n    }\n  }\n\n  return cookieVal;\n}\n\nfunction select(regex) {\n  var cookies = IS_NODE ? _rawCookie : _cookie2.default.parse(document.cookie);\n\n  if (!cookies) {\n    return {};\n  }\n\n  if (!regex) {\n    return cookies;\n  }\n\n  return Object.keys(cookies).reduce(function (accumulator, name) {\n    if (!regex.test(name)) {\n      return accumulator;\n    }\n\n    var newCookie = {};\n    newCookie[name] = cookies[name];\n    return (0, _objectAssign2.default)({}, accumulator, newCookie);\n  }, {});\n}\n\nfunction save(name, val, opt) {\n  _rawCookie[name] = val;\n\n  // Allow you to work with cookies as objects.\n  if ((typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'object') {\n    _rawCookie[name] = JSON.stringify(val);\n  }\n\n  // Cookies only work in the browser\n  if (!IS_NODE) {\n    document.cookie = _cookie2.default.serialize(name, _rawCookie[name], opt);\n  }\n\n  if (_isResWritable() && _res.cookie) {\n    _res.cookie(name, val, opt);\n  }\n}\n\nfunction remove(name, opt) {\n  delete _rawCookie[name];\n\n  if (typeof opt === 'undefined') {\n    opt = {};\n  } else if (typeof opt === 'string') {\n    // Will be deprecated in future versions\n    opt = { path: opt };\n  } else {\n    // Prevent mutation of opt below\n    opt = (0, _objectAssign2.default)({}, opt);\n  }\n\n  if (typeof document !== 'undefined') {\n    opt.expires = new Date(1970, 1, 1, 0, 0, 1);\n    opt.maxAge = 0;\n    document.cookie = _cookie2.default.serialize(name, '', opt);\n  }\n\n  if (_isResWritable() && _res.clearCookie) {\n    _res.clearCookie(name, opt);\n  }\n}\n\nfunction setRawCookie(rawCookie) {\n  if (rawCookie) {\n    _rawCookie = _cookie2.default.parse(rawCookie);\n  } else {\n    _rawCookie = {};\n  }\n}\n\nfunction plugToRequest(req, res) {\n  if (req.cookie) {\n    _rawCookie = req.cookie;\n  } else if (req.cookies) {\n    _rawCookie = req.cookies;\n  } else if (req.headers && req.headers.cookie) {\n    setRawCookie(req.headers.cookie);\n  } else {\n    _rawCookie = {};\n  }\n\n  _res = res;\n\n  return function unplug() {\n    _res = null;\n    _rawCookie = {};\n  };\n}\n\nexports[\"default\"] = {\n  setRawCookie: setRawCookie,\n  load: load,\n  loadAll: loadAll,\n  select: select,\n  save: save,\n  remove: remove,\n  plugToRequest: plugToRequest\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtY29va2llcy9idWlsZC9jb29raWUuanMuanMiLCJtYXBwaW5ncyI6IjtBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQzs7QUFFRixxR0FBcUcscUJBQXFCLG1CQUFtQjs7QUFFN0ksWUFBWTtBQUNaLGVBQWU7QUFDZixjQUFjO0FBQ2QsWUFBWTtBQUNaLGNBQWM7QUFDZCxvQkFBb0I7QUFDcEIscUJBQXFCOztBQUVyQixjQUFjLG1CQUFPLENBQUMseUVBQVE7O0FBRTlCOztBQUVBLG9CQUFvQixtQkFBTyxDQUFDLGdGQUFlOztBQUUzQzs7QUFFQSx1Q0FBdUMsdUNBQXVDOztBQUU5RSx3REFBd0QsT0FBTyxvQkFBb0IsT0FBTyxRQUFRLGFBQW9CO0FBQ3RIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGtEQUFrRDtBQUNsRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0Esa0RBQWtEO0FBQ2xEOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHlDQUF5QztBQUN6QyxHQUFHLElBQUk7QUFDUDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBLFlBQVk7QUFDWixJQUFJO0FBQ0o7QUFDQSx3Q0FBd0M7QUFDeEM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBLElBQUk7QUFDSjtBQUNBLElBQUk7QUFDSjtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1jb29raWVzL2J1aWxkL2Nvb2tpZS5qcz9mODQwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF90eXBlb2YgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIiA/IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH0gOiBmdW5jdGlvbiAob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9O1xuXG5leHBvcnRzLmxvYWQgPSBsb2FkO1xuZXhwb3J0cy5sb2FkQWxsID0gbG9hZEFsbDtcbmV4cG9ydHMuc2VsZWN0ID0gc2VsZWN0O1xuZXhwb3J0cy5zYXZlID0gc2F2ZTtcbmV4cG9ydHMucmVtb3ZlID0gcmVtb3ZlO1xuZXhwb3J0cy5zZXRSYXdDb29raWUgPSBzZXRSYXdDb29raWU7XG5leHBvcnRzLnBsdWdUb1JlcXVlc3QgPSBwbHVnVG9SZXF1ZXN0O1xuXG52YXIgX2Nvb2tpZSA9IHJlcXVpcmUoJ2Nvb2tpZScpO1xuXG52YXIgX2Nvb2tpZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jb29raWUpO1xuXG52YXIgX29iamVjdEFzc2lnbiA9IHJlcXVpcmUoJ29iamVjdC1hc3NpZ24nKTtcblxudmFyIF9vYmplY3RBc3NpZ24yID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfb2JqZWN0QXNzaWduKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxudmFyIElTX05PREUgPSB0eXBlb2YgZG9jdW1lbnQgPT09ICd1bmRlZmluZWQnIHx8IHR5cGVvZiBwcm9jZXNzICE9PSAndW5kZWZpbmVkJyAmJiBwcm9jZXNzLmVudiAmJiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Rlc3QnO1xudmFyIF9yYXdDb29raWUgPSB7fTtcbnZhciBfcmVzID0gdm9pZCAwO1xuXG5mdW5jdGlvbiBfaXNSZXNXcml0YWJsZSgpIHtcbiAgcmV0dXJuIF9yZXMgJiYgIV9yZXMuaGVhZGVyc1NlbnQ7XG59XG5cbmZ1bmN0aW9uIGxvYWQobmFtZSwgZG9Ob3RQYXJzZSkge1xuICB2YXIgY29va2llcyA9IElTX05PREUgPyBfcmF3Q29va2llIDogX2Nvb2tpZTIuZGVmYXVsdC5wYXJzZShkb2N1bWVudC5jb29raWUpO1xuICB2YXIgY29va2llVmFsID0gY29va2llcyAmJiBjb29raWVzW25hbWVdO1xuXG4gIGlmICh0eXBlb2YgZG9Ob3RQYXJzZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBkb05vdFBhcnNlID0gIWNvb2tpZVZhbCB8fCBjb29raWVWYWxbMF0gIT09ICd7JyAmJiBjb29raWVWYWxbMF0gIT09ICdbJztcbiAgfVxuXG4gIGlmICghZG9Ob3RQYXJzZSkge1xuICAgIHRyeSB7XG4gICAgICBjb29raWVWYWwgPSBKU09OLnBhcnNlKGNvb2tpZVZhbCk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAvLyBOb3Qgc2VyaWFsaXplZCBvYmplY3RcbiAgICB9XG4gIH1cblxuICByZXR1cm4gY29va2llVmFsO1xufVxuXG5mdW5jdGlvbiBsb2FkQWxsKGRvTm90UGFyc2UpIHtcbiAgdmFyIGNvb2tpZXMgPSBJU19OT0RFID8gX3Jhd0Nvb2tpZSA6IF9jb29raWUyLmRlZmF1bHQucGFyc2UoZG9jdW1lbnQuY29va2llKTtcbiAgdmFyIGNvb2tpZVZhbCA9IGNvb2tpZXM7XG5cbiAgaWYgKHR5cGVvZiBkb05vdFBhcnNlID09PSAndW5kZWZpbmVkJykge1xuICAgIGRvTm90UGFyc2UgPSAhY29va2llVmFsIHx8IGNvb2tpZVZhbFswXSAhPT0gJ3snICYmIGNvb2tpZVZhbFswXSAhPT0gJ1snO1xuICB9XG5cbiAgaWYgKCFkb05vdFBhcnNlKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvb2tpZVZhbCA9IEpTT04ucGFyc2UoY29va2llVmFsKTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIC8vIE5vdCBzZXJpYWxpemVkIG9iamVjdFxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBjb29raWVWYWw7XG59XG5cbmZ1bmN0aW9uIHNlbGVjdChyZWdleCkge1xuICB2YXIgY29va2llcyA9IElTX05PREUgPyBfcmF3Q29va2llIDogX2Nvb2tpZTIuZGVmYXVsdC5wYXJzZShkb2N1bWVudC5jb29raWUpO1xuXG4gIGlmICghY29va2llcykge1xuICAgIHJldHVybiB7fTtcbiAgfVxuXG4gIGlmICghcmVnZXgpIHtcbiAgICByZXR1cm4gY29va2llcztcbiAgfVxuXG4gIHJldHVybiBPYmplY3Qua2V5cyhjb29raWVzKS5yZWR1Y2UoZnVuY3Rpb24gKGFjY3VtdWxhdG9yLCBuYW1lKSB7XG4gICAgaWYgKCFyZWdleC50ZXN0KG5hbWUpKSB7XG4gICAgICByZXR1cm4gYWNjdW11bGF0b3I7XG4gICAgfVxuXG4gICAgdmFyIG5ld0Nvb2tpZSA9IHt9O1xuICAgIG5ld0Nvb2tpZVtuYW1lXSA9IGNvb2tpZXNbbmFtZV07XG4gICAgcmV0dXJuICgwLCBfb2JqZWN0QXNzaWduMi5kZWZhdWx0KSh7fSwgYWNjdW11bGF0b3IsIG5ld0Nvb2tpZSk7XG4gIH0sIHt9KTtcbn1cblxuZnVuY3Rpb24gc2F2ZShuYW1lLCB2YWwsIG9wdCkge1xuICBfcmF3Q29va2llW25hbWVdID0gdmFsO1xuXG4gIC8vIEFsbG93IHlvdSB0byB3b3JrIHdpdGggY29va2llcyBhcyBvYmplY3RzLlxuICBpZiAoKHR5cGVvZiB2YWwgPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKHZhbCkpID09PSAnb2JqZWN0Jykge1xuICAgIF9yYXdDb29raWVbbmFtZV0gPSBKU09OLnN0cmluZ2lmeSh2YWwpO1xuICB9XG5cbiAgLy8gQ29va2llcyBvbmx5IHdvcmsgaW4gdGhlIGJyb3dzZXJcbiAgaWYgKCFJU19OT0RFKSB7XG4gICAgZG9jdW1lbnQuY29va2llID0gX2Nvb2tpZTIuZGVmYXVsdC5zZXJpYWxpemUobmFtZSwgX3Jhd0Nvb2tpZVtuYW1lXSwgb3B0KTtcbiAgfVxuXG4gIGlmIChfaXNSZXNXcml0YWJsZSgpICYmIF9yZXMuY29va2llKSB7XG4gICAgX3Jlcy5jb29raWUobmFtZSwgdmFsLCBvcHQpO1xuICB9XG59XG5cbmZ1bmN0aW9uIHJlbW92ZShuYW1lLCBvcHQpIHtcbiAgZGVsZXRlIF9yYXdDb29raWVbbmFtZV07XG5cbiAgaWYgKHR5cGVvZiBvcHQgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgb3B0ID0ge307XG4gIH0gZWxzZSBpZiAodHlwZW9mIG9wdCA9PT0gJ3N0cmluZycpIHtcbiAgICAvLyBXaWxsIGJlIGRlcHJlY2F0ZWQgaW4gZnV0dXJlIHZlcnNpb25zXG4gICAgb3B0ID0geyBwYXRoOiBvcHQgfTtcbiAgfSBlbHNlIHtcbiAgICAvLyBQcmV2ZW50IG11dGF0aW9uIG9mIG9wdCBiZWxvd1xuICAgIG9wdCA9ICgwLCBfb2JqZWN0QXNzaWduMi5kZWZhdWx0KSh7fSwgb3B0KTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgZG9jdW1lbnQgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgb3B0LmV4cGlyZXMgPSBuZXcgRGF0ZSgxOTcwLCAxLCAxLCAwLCAwLCAxKTtcbiAgICBvcHQubWF4QWdlID0gMDtcbiAgICBkb2N1bWVudC5jb29raWUgPSBfY29va2llMi5kZWZhdWx0LnNlcmlhbGl6ZShuYW1lLCAnJywgb3B0KTtcbiAgfVxuXG4gIGlmIChfaXNSZXNXcml0YWJsZSgpICYmIF9yZXMuY2xlYXJDb29raWUpIHtcbiAgICBfcmVzLmNsZWFyQ29va2llKG5hbWUsIG9wdCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gc2V0UmF3Q29va2llKHJhd0Nvb2tpZSkge1xuICBpZiAocmF3Q29va2llKSB7XG4gICAgX3Jhd0Nvb2tpZSA9IF9jb29raWUyLmRlZmF1bHQucGFyc2UocmF3Q29va2llKTtcbiAgfSBlbHNlIHtcbiAgICBfcmF3Q29va2llID0ge307XG4gIH1cbn1cblxuZnVuY3Rpb24gcGx1Z1RvUmVxdWVzdChyZXEsIHJlcykge1xuICBpZiAocmVxLmNvb2tpZSkge1xuICAgIF9yYXdDb29raWUgPSByZXEuY29va2llO1xuICB9IGVsc2UgaWYgKHJlcS5jb29raWVzKSB7XG4gICAgX3Jhd0Nvb2tpZSA9IHJlcS5jb29raWVzO1xuICB9IGVsc2UgaWYgKHJlcS5oZWFkZXJzICYmIHJlcS5oZWFkZXJzLmNvb2tpZSkge1xuICAgIHNldFJhd0Nvb2tpZShyZXEuaGVhZGVycy5jb29raWUpO1xuICB9IGVsc2Uge1xuICAgIF9yYXdDb29raWUgPSB7fTtcbiAgfVxuXG4gIF9yZXMgPSByZXM7XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIHVucGx1ZygpIHtcbiAgICBfcmVzID0gbnVsbDtcbiAgICBfcmF3Q29va2llID0ge307XG4gIH07XG59XG5cbmV4cG9ydHMuZGVmYXVsdCA9IHtcbiAgc2V0UmF3Q29va2llOiBzZXRSYXdDb29raWUsXG4gIGxvYWQ6IGxvYWQsXG4gIGxvYWRBbGw6IGxvYWRBbGwsXG4gIHNlbGVjdDogc2VsZWN0LFxuICBzYXZlOiBzYXZlLFxuICByZW1vdmU6IHJlbW92ZSxcbiAgcGx1Z1RvUmVxdWVzdDogcGx1Z1RvUmVxdWVzdFxufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react-cookies/build/cookie.js\n"));

/***/ }),

/***/ "./node_modules/react-cookies/node_modules/cookie/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/react-cookies/node_modules/cookie/index.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar decode = decodeURIComponent;\nvar encode = encodeURIComponent;\nvar pairSplitRegExp = /; */;\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var pairs = str.split(pairSplitRegExp);\n  var dec = opt.decode || decode;\n\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i];\n    var eq_idx = pair.indexOf('=');\n\n    // skip things that don't look like key=value\n    if (eq_idx < 0) {\n      continue;\n    }\n\n    var key = pair.substr(0, eq_idx).trim()\n    var val = pair.substr(++eq_idx, pair.length).trim();\n\n    // quoted values\n    if ('\"' == val[0]) {\n      val = val.slice(1, -1);\n    }\n\n    // only assign once\n    if (undefined == obj[key]) {\n      obj[key] = tryDecode(val, dec);\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n    if (isNaN(maxAge)) throw new Error('maxAge should be a Number');\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + opt.expires.toUTCString();\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtY29va2llcy9ub2RlX21vZHVsZXMvY29va2llL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxhQUFhO0FBQ2IsaUJBQWlCOztBQUVqQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EseUJBQXlCOztBQUV6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFlBQVk7QUFDWjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGtCQUFrQixrQkFBa0I7QUFDcEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsZ0JBQWdCO0FBQzdDLGtCQUFrQjtBQUNsQjtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFlBQVk7QUFDWjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsY0FBYztBQUNkOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGNBQWM7QUFDZDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxjQUFjO0FBQ2Q7O0FBRUE7QUFDQSxjQUFjO0FBQ2Q7O0FBRUE7QUFDQSxjQUFjO0FBQ2Q7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxVQUFVO0FBQ3JCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QtY29va2llcy9ub2RlX21vZHVsZXMvY29va2llL2luZGV4LmpzP2ZlYTEiXSwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBjb29raWVcbiAqIENvcHlyaWdodChjKSAyMDEyLTIwMTQgUm9tYW4gU2h0eWxtYW5cbiAqIENvcHlyaWdodChjKSAyMDE1IERvdWdsYXMgQ2hyaXN0b3BoZXIgV2lsc29uXG4gKiBNSVQgTGljZW5zZWRcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogTW9kdWxlIGV4cG9ydHMuXG4gKiBAcHVibGljXG4gKi9cblxuZXhwb3J0cy5wYXJzZSA9IHBhcnNlO1xuZXhwb3J0cy5zZXJpYWxpemUgPSBzZXJpYWxpemU7XG5cbi8qKlxuICogTW9kdWxlIHZhcmlhYmxlcy5cbiAqIEBwcml2YXRlXG4gKi9cblxudmFyIGRlY29kZSA9IGRlY29kZVVSSUNvbXBvbmVudDtcbnZhciBlbmNvZGUgPSBlbmNvZGVVUklDb21wb25lbnQ7XG52YXIgcGFpclNwbGl0UmVnRXhwID0gLzsgKi87XG5cbi8qKlxuICogUmVnRXhwIHRvIG1hdGNoIGZpZWxkLWNvbnRlbnQgaW4gUkZDIDcyMzAgc2VjIDMuMlxuICpcbiAqIGZpZWxkLWNvbnRlbnQgPSBmaWVsZC12Y2hhciBbIDEqKCBTUCAvIEhUQUIgKSBmaWVsZC12Y2hhciBdXG4gKiBmaWVsZC12Y2hhciAgID0gVkNIQVIgLyBvYnMtdGV4dFxuICogb2JzLXRleHQgICAgICA9ICV4ODAtRkZcbiAqL1xuXG52YXIgZmllbGRDb250ZW50UmVnRXhwID0gL15bXFx1MDAwOVxcdTAwMjAtXFx1MDA3ZVxcdTAwODAtXFx1MDBmZl0rJC87XG5cbi8qKlxuICogUGFyc2UgYSBjb29raWUgaGVhZGVyLlxuICpcbiAqIFBhcnNlIHRoZSBnaXZlbiBjb29raWUgaGVhZGVyIHN0cmluZyBpbnRvIGFuIG9iamVjdFxuICogVGhlIG9iamVjdCBoYXMgdGhlIHZhcmlvdXMgY29va2llcyBhcyBrZXlzKG5hbWVzKSA9PiB2YWx1ZXNcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gc3RyXG4gKiBAcGFyYW0ge29iamVjdH0gW29wdGlvbnNdXG4gKiBAcmV0dXJuIHtvYmplY3R9XG4gKiBAcHVibGljXG4gKi9cblxuZnVuY3Rpb24gcGFyc2Uoc3RyLCBvcHRpb25zKSB7XG4gIGlmICh0eXBlb2Ygc3RyICE9PSAnc3RyaW5nJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2FyZ3VtZW50IHN0ciBtdXN0IGJlIGEgc3RyaW5nJyk7XG4gIH1cblxuICB2YXIgb2JqID0ge31cbiAgdmFyIG9wdCA9IG9wdGlvbnMgfHwge307XG4gIHZhciBwYWlycyA9IHN0ci5zcGxpdChwYWlyU3BsaXRSZWdFeHApO1xuICB2YXIgZGVjID0gb3B0LmRlY29kZSB8fCBkZWNvZGU7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBwYWlycy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBwYWlyID0gcGFpcnNbaV07XG4gICAgdmFyIGVxX2lkeCA9IHBhaXIuaW5kZXhPZignPScpO1xuXG4gICAgLy8gc2tpcCB0aGluZ3MgdGhhdCBkb24ndCBsb29rIGxpa2Uga2V5PXZhbHVlXG4gICAgaWYgKGVxX2lkeCA8IDApIHtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIHZhciBrZXkgPSBwYWlyLnN1YnN0cigwLCBlcV9pZHgpLnRyaW0oKVxuICAgIHZhciB2YWwgPSBwYWlyLnN1YnN0cigrK2VxX2lkeCwgcGFpci5sZW5ndGgpLnRyaW0oKTtcblxuICAgIC8vIHF1b3RlZCB2YWx1ZXNcbiAgICBpZiAoJ1wiJyA9PSB2YWxbMF0pIHtcbiAgICAgIHZhbCA9IHZhbC5zbGljZSgxLCAtMSk7XG4gICAgfVxuXG4gICAgLy8gb25seSBhc3NpZ24gb25jZVxuICAgIGlmICh1bmRlZmluZWQgPT0gb2JqW2tleV0pIHtcbiAgICAgIG9ialtrZXldID0gdHJ5RGVjb2RlKHZhbCwgZGVjKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gb2JqO1xufVxuXG4vKipcbiAqIFNlcmlhbGl6ZSBkYXRhIGludG8gYSBjb29raWUgaGVhZGVyLlxuICpcbiAqIFNlcmlhbGl6ZSB0aGUgYSBuYW1lIHZhbHVlIHBhaXIgaW50byBhIGNvb2tpZSBzdHJpbmcgc3VpdGFibGUgZm9yXG4gKiBodHRwIGhlYWRlcnMuIEFuIG9wdGlvbmFsIG9wdGlvbnMgb2JqZWN0IHNwZWNpZmllZCBjb29raWUgcGFyYW1ldGVycy5cbiAqXG4gKiBzZXJpYWxpemUoJ2ZvbycsICdiYXInLCB7IGh0dHBPbmx5OiB0cnVlIH0pXG4gKiAgID0+IFwiZm9vPWJhcjsgaHR0cE9ubHlcIlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lXG4gKiBAcGFyYW0ge3N0cmluZ30gdmFsXG4gKiBAcGFyYW0ge29iamVjdH0gW29wdGlvbnNdXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKiBAcHVibGljXG4gKi9cblxuZnVuY3Rpb24gc2VyaWFsaXplKG5hbWUsIHZhbCwgb3B0aW9ucykge1xuICB2YXIgb3B0ID0gb3B0aW9ucyB8fCB7fTtcbiAgdmFyIGVuYyA9IG9wdC5lbmNvZGUgfHwgZW5jb2RlO1xuXG4gIGlmICh0eXBlb2YgZW5jICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignb3B0aW9uIGVuY29kZSBpcyBpbnZhbGlkJyk7XG4gIH1cblxuICBpZiAoIWZpZWxkQ29udGVudFJlZ0V4cC50ZXN0KG5hbWUpKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignYXJndW1lbnQgbmFtZSBpcyBpbnZhbGlkJyk7XG4gIH1cblxuICB2YXIgdmFsdWUgPSBlbmModmFsKTtcblxuICBpZiAodmFsdWUgJiYgIWZpZWxkQ29udGVudFJlZ0V4cC50ZXN0KHZhbHVlKSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2FyZ3VtZW50IHZhbCBpcyBpbnZhbGlkJyk7XG4gIH1cblxuICB2YXIgc3RyID0gbmFtZSArICc9JyArIHZhbHVlO1xuXG4gIGlmIChudWxsICE9IG9wdC5tYXhBZ2UpIHtcbiAgICB2YXIgbWF4QWdlID0gb3B0Lm1heEFnZSAtIDA7XG4gICAgaWYgKGlzTmFOKG1heEFnZSkpIHRocm93IG5ldyBFcnJvcignbWF4QWdlIHNob3VsZCBiZSBhIE51bWJlcicpO1xuICAgIHN0ciArPSAnOyBNYXgtQWdlPScgKyBNYXRoLmZsb29yKG1heEFnZSk7XG4gIH1cblxuICBpZiAob3B0LmRvbWFpbikge1xuICAgIGlmICghZmllbGRDb250ZW50UmVnRXhwLnRlc3Qob3B0LmRvbWFpbikpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ29wdGlvbiBkb21haW4gaXMgaW52YWxpZCcpO1xuICAgIH1cblxuICAgIHN0ciArPSAnOyBEb21haW49JyArIG9wdC5kb21haW47XG4gIH1cblxuICBpZiAob3B0LnBhdGgpIHtcbiAgICBpZiAoIWZpZWxkQ29udGVudFJlZ0V4cC50ZXN0KG9wdC5wYXRoKSkge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignb3B0aW9uIHBhdGggaXMgaW52YWxpZCcpO1xuICAgIH1cblxuICAgIHN0ciArPSAnOyBQYXRoPScgKyBvcHQucGF0aDtcbiAgfVxuXG4gIGlmIChvcHQuZXhwaXJlcykge1xuICAgIGlmICh0eXBlb2Ygb3B0LmV4cGlyZXMudG9VVENTdHJpbmcgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ29wdGlvbiBleHBpcmVzIGlzIGludmFsaWQnKTtcbiAgICB9XG5cbiAgICBzdHIgKz0gJzsgRXhwaXJlcz0nICsgb3B0LmV4cGlyZXMudG9VVENTdHJpbmcoKTtcbiAgfVxuXG4gIGlmIChvcHQuaHR0cE9ubHkpIHtcbiAgICBzdHIgKz0gJzsgSHR0cE9ubHknO1xuICB9XG5cbiAgaWYgKG9wdC5zZWN1cmUpIHtcbiAgICBzdHIgKz0gJzsgU2VjdXJlJztcbiAgfVxuXG4gIGlmIChvcHQuc2FtZVNpdGUpIHtcbiAgICB2YXIgc2FtZVNpdGUgPSB0eXBlb2Ygb3B0LnNhbWVTaXRlID09PSAnc3RyaW5nJ1xuICAgICAgPyBvcHQuc2FtZVNpdGUudG9Mb3dlckNhc2UoKSA6IG9wdC5zYW1lU2l0ZTtcblxuICAgIHN3aXRjaCAoc2FtZVNpdGUpIHtcbiAgICAgIGNhc2UgdHJ1ZTpcbiAgICAgICAgc3RyICs9ICc7IFNhbWVTaXRlPVN0cmljdCc7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnbGF4JzpcbiAgICAgICAgc3RyICs9ICc7IFNhbWVTaXRlPUxheCc7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnc3RyaWN0JzpcbiAgICAgICAgc3RyICs9ICc7IFNhbWVTaXRlPVN0cmljdCc7XG4gICAgICAgIGJyZWFrO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignb3B0aW9uIHNhbWVTaXRlIGlzIGludmFsaWQnKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gc3RyO1xufVxuXG4vKipcbiAqIFRyeSBkZWNvZGluZyBhIHN0cmluZyB1c2luZyBhIGRlY29kaW5nIGZ1bmN0aW9uLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBzdHJcbiAqIEBwYXJhbSB7ZnVuY3Rpb259IGRlY29kZVxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiB0cnlEZWNvZGUoc3RyLCBkZWNvZGUpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gZGVjb2RlKHN0cik7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gc3RyO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react-cookies/node_modules/cookie/index.js\n"));

/***/ }),

/***/ "./node_modules/redux/es/redux.js":
/*!****************************************!*\
  !*** ./node_modules/redux/es/redux.js ***!
  \****************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"__DO_NOT_USE__ActionTypes\": function() { return /* binding */ ActionTypes; },\n/* harmony export */   \"applyMiddleware\": function() { return /* binding */ applyMiddleware; },\n/* harmony export */   \"bindActionCreators\": function() { return /* binding */ bindActionCreators; },\n/* harmony export */   \"combineReducers\": function() { return /* binding */ combineReducers; },\n/* harmony export */   \"compose\": function() { return /* binding */ compose; },\n/* harmony export */   \"createStore\": function() { return /* binding */ createStore; },\n/* harmony export */   \"legacy_createStore\": function() { return /* binding */ legacy_createStore; }\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectSpread2 */ \"./node_modules/@babel/runtime/helpers/esm/objectSpread2.js\");\n\n\n/**\n * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js\n *\n * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes\n * during build.\n * @param {number} code\n */\nfunction formatProdErrorMessage(code) {\n  return \"Minified Redux error #\" + code + \"; visit https://redux.js.org/Errors?code=\" + code + \" for the full message or \" + 'use the non-minified dev environment for full errors. ';\n}\n\n// Inlined version of the `symbol-observable` polyfill\nvar $$observable = (function () {\n  return typeof Symbol === 'function' && Symbol.observable || '@@observable';\n})();\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n// Inlined / shortened version of `kindOf` from https://github.com/jonschlinkert/kind-of\nfunction miniKindOf(val) {\n  if (val === void 0) return 'undefined';\n  if (val === null) return 'null';\n  var type = typeof val;\n\n  switch (type) {\n    case 'boolean':\n    case 'string':\n    case 'number':\n    case 'symbol':\n    case 'function':\n      {\n        return type;\n      }\n  }\n\n  if (Array.isArray(val)) return 'array';\n  if (isDate(val)) return 'date';\n  if (isError(val)) return 'error';\n  var constructorName = ctorName(val);\n\n  switch (constructorName) {\n    case 'Symbol':\n    case 'Promise':\n    case 'WeakMap':\n    case 'WeakSet':\n    case 'Map':\n    case 'Set':\n      return constructorName;\n  } // other\n\n\n  return type.slice(8, -1).toLowerCase().replace(/\\s/g, '');\n}\n\nfunction ctorName(val) {\n  return typeof val.constructor === 'function' ? val.constructor.name : null;\n}\n\nfunction isError(val) {\n  return val instanceof Error || typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number';\n}\n\nfunction isDate(val) {\n  if (val instanceof Date) return true;\n  return typeof val.toDateString === 'function' && typeof val.getDate === 'function' && typeof val.setDate === 'function';\n}\n\nfunction kindOf(val) {\n  var typeOfVal = typeof val;\n\n  if (true) {\n    typeOfVal = miniKindOf(val);\n  }\n\n  return typeOfVal;\n}\n\n/**\n * @deprecated\n *\n * **We recommend using the `configureStore` method\n * of the `@reduxjs/toolkit` package**, which replaces `createStore`.\n *\n * Redux Toolkit is our recommended approach for writing Redux logic today,\n * including store setup, reducers, data fetching, and more.\n *\n * **For more details, please read this Redux docs page:**\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * `configureStore` from Redux Toolkit is an improved version of `createStore` that\n * simplifies setup and helps avoid common bugs.\n *\n * You should not be using the `redux` core package by itself today, except for learning purposes.\n * The `createStore` method from the core `redux` package will not be removed, but we encourage\n * all users to migrate to using Redux Toolkit for all Redux code.\n *\n * If you want to use `createStore` without this visual deprecation warning, use\n * the `legacy_createStore` import instead:\n *\n * `import { legacy_createStore as createStore} from 'redux'`\n *\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error( false ? 0 : 'It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error( false ? 0 : \"Expected the enhancer to be a function. Instead, received: '\" + kindOf(enhancer) + \"'\");\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error( false ? 0 : \"Expected the root reducer to be a function. Instead, received: '\" + kindOf(reducer) + \"'\");\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error( false ? 0 : 'You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error( false ? 0 : \"Expected the listener to be a function. Instead, received: '\" + kindOf(listener) + \"'\");\n    }\n\n    if (isDispatching) {\n      throw new Error( false ? 0 : 'You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error( false ? 0 : 'You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error( false ? 0 : \"Actions must be plain objects. Instead, the actual type was: '\" + kindOf(action) + \"'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.\");\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error( false ? 0 : 'Actions may not have an undefined \"type\" property. You may have misspelled an action type string constant.');\n    }\n\n    if (isDispatching) {\n      throw new Error( false ? 0 : 'Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error( false ? 0 : \"Expected the nextReducer to be a function. Instead, received: '\" + kindOf(nextReducer));\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new Error( false ? 0 : \"Expected the observer to be an object. Instead, received: '\" + kindOf(observer) + \"'\");\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n/**\n * Creates a Redux store that holds the state tree.\n *\n * **We recommend using `configureStore` from the\n * `@reduxjs/toolkit` package**, which replaces `createStore`:\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nvar legacy_createStore = createStore;\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + kindOf(inputState) + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error( false ? 0 : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error( false ? 0 : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle '\" + ActionTypes.INIT + \"' or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (true) {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (true) {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (true) {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var actionType = action && action.type;\n        throw new Error( false ? 0 : \"When called with an action of type \" + (actionType ? \"\\\"\" + String(actionType) + \"\\\"\" : '(unknown type)') + \", the slice reducer for key \\\"\" + _key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\");\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error( false ? 0 : \"bindActionCreators expected an object or a function, but instead received: '\" + kindOf(actionCreators) + \"'. \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error( false ? 0 : 'Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return (0,_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])((0,_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, store), {}, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\n */\n\nfunction isCrushed() {}\n\nif ( true && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \"production\". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/redux/es/redux.js\n"));

/***/ }),

/***/ "./node_modules/rfc6902/diff.js":
/*!**************************************!*\
  !*** ./node_modules/rfc6902/diff.js ***!
  \**************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.diffAny = exports.diffObjects = exports.diffArrays = exports.intersection = exports.subtract = exports.isDestructive = void 0;\nvar util_1 = __webpack_require__(/*! ./util */ \"./node_modules/rfc6902/util.js\");\nfunction isDestructive(_a) {\n    var op = _a.op;\n    return op === 'remove' || op === 'replace' || op === 'copy' || op === 'move';\n}\nexports.isDestructive = isDestructive;\n/**\nList the keys in `minuend` that are not in `subtrahend`.\n\nA key is only considered if it is both 1) an own-property (o.hasOwnProperty(k))\nof the object, and 2) has a value that is not undefined. This is to match JSON\nsemantics, where JSON object serialization drops keys with undefined values.\n\n@param minuend Object of interest\n@param subtrahend Object of comparison\n@returns Array of keys that are in `minuend` but not in `subtrahend`.\n*/\nfunction subtract(minuend, subtrahend) {\n    // initialize empty object; we only care about the keys, the values can be anything\n    var obj = {};\n    // build up obj with all the properties of minuend\n    for (var add_key in minuend) {\n        if (util_1.hasOwnProperty.call(minuend, add_key) && minuend[add_key] !== undefined) {\n            obj[add_key] = 1;\n        }\n    }\n    // now delete all the properties of subtrahend from obj\n    // (deleting a missing key has no effect)\n    for (var del_key in subtrahend) {\n        if (util_1.hasOwnProperty.call(subtrahend, del_key) && subtrahend[del_key] !== undefined) {\n            delete obj[del_key];\n        }\n    }\n    // finally, extract whatever keys remain in obj\n    return Object.keys(obj);\n}\nexports.subtract = subtract;\n/**\nList the keys that shared by all `objects`.\n\nThe semantics of what constitutes a \"key\" is described in {@link subtract}.\n\n@param objects Array of objects to compare\n@returns Array of keys that are in (\"own-properties\" of) every object in `objects`.\n*/\nfunction intersection(objects) {\n    var length = objects.length;\n    // prepare empty counter to keep track of how many objects each key occurred in\n    var counter = {};\n    // go through each object and increment the counter for each key in that object\n    for (var i = 0; i < length; i++) {\n        var object = objects[i];\n        for (var key in object) {\n            if (util_1.hasOwnProperty.call(object, key) && object[key] !== undefined) {\n                counter[key] = (counter[key] || 0) + 1;\n            }\n        }\n    }\n    // now delete all keys from the counter that were not seen in every object\n    for (var key in counter) {\n        if (counter[key] < length) {\n            delete counter[key];\n        }\n    }\n    // finally, extract whatever keys remain in the counter\n    return Object.keys(counter);\n}\nexports.intersection = intersection;\nfunction isArrayAdd(array_operation) {\n    return array_operation.op === 'add';\n}\nfunction isArrayRemove(array_operation) {\n    return array_operation.op === 'remove';\n}\nfunction appendArrayOperation(base, operation) {\n    return {\n        // the new operation must be pushed on the end\n        operations: base.operations.concat(operation),\n        cost: base.cost + 1,\n    };\n}\n/**\nCalculate the shortest sequence of operations to get from `input` to `output`,\nusing a dynamic programming implementation of the Levenshtein distance algorithm.\n\nTo get from the input ABC to the output AZ we could just delete all the input\nand say \"insert A, insert Z\" and be done with it. That's what we do if the\ninput is empty. But we can be smarter.\n\n          output\n               A   Z\n               -   -\n          [0]  1   2\ninput A |  1  [0]  1\n      B |  2  [1]  1\n      C |  3   2  [2]\n\n1) start at 0,0 (+0)\n2) keep A (+0)\n3) remove B (+1)\n4) replace C with Z (+1)\n\nIf the `input` (source) is empty, they'll all be in the top row, resulting in an\narray of 'add' operations.\nIf the `output` (target) is empty, everything will be in the left column,\nresulting in an array of 'remove' operations.\n\n@returns A list of add/remove/replace operations.\n*/\nfunction diffArrays(input, output, ptr, diff) {\n    if (diff === void 0) { diff = diffAny; }\n    // set up cost matrix (very simple initialization: just a map)\n    var memo = {\n        '0,0': { operations: [], cost: 0 },\n    };\n    /**\n    Calculate the cheapest sequence of operations required to get from\n    input.slice(0, i) to output.slice(0, j).\n    There may be other valid sequences with the same cost, but none cheaper.\n  \n    @param i The row in the layout above\n    @param j The column in the layout above\n    @returns An object containing a list of operations, along with the total cost\n             of applying them (+1 for each add/remove/replace operation)\n    */\n    function dist(i, j) {\n        // memoized\n        var memo_key = i + \",\" + j;\n        var memoized = memo[memo_key];\n        if (memoized === undefined) {\n            // TODO: this !diff(...).length usage could/should be lazy\n            if (i > 0 && j > 0 && !diff(input[i - 1], output[j - 1], ptr.add(String(i - 1))).length) {\n                // equal (no operations => no cost)\n                memoized = dist(i - 1, j - 1);\n            }\n            else {\n                var alternatives = [];\n                if (i > 0) {\n                    // NOT topmost row\n                    var remove_base = dist(i - 1, j);\n                    var remove_operation = {\n                        op: 'remove',\n                        index: i - 1,\n                    };\n                    alternatives.push(appendArrayOperation(remove_base, remove_operation));\n                }\n                if (j > 0) {\n                    // NOT leftmost column\n                    var add_base = dist(i, j - 1);\n                    var add_operation = {\n                        op: 'add',\n                        index: i - 1,\n                        value: output[j - 1],\n                    };\n                    alternatives.push(appendArrayOperation(add_base, add_operation));\n                }\n                if (i > 0 && j > 0) {\n                    // TABLE MIDDLE\n                    // supposing we replaced it, compute the rest of the costs:\n                    var replace_base = dist(i - 1, j - 1);\n                    // okay, the general plan is to replace it, but we can be smarter,\n                    // recursing into the structure and replacing only part of it if\n                    // possible, but to do so we'll need the original value\n                    var replace_operation = {\n                        op: 'replace',\n                        index: i - 1,\n                        original: input[i - 1],\n                        value: output[j - 1],\n                    };\n                    alternatives.push(appendArrayOperation(replace_base, replace_operation));\n                }\n                // the only other case, i === 0 && j === 0, has already been memoized\n                // the meat of the algorithm:\n                // sort by cost to find the lowest one (might be several ties for lowest)\n                // [4, 6, 7, 1, 2].sort((a, b) => a - b) -> [ 1, 2, 4, 6, 7 ]\n                var best = alternatives.sort(function (a, b) { return a.cost - b.cost; })[0];\n                memoized = best;\n            }\n            memo[memo_key] = memoized;\n        }\n        return memoized;\n    }\n    // handle weird objects masquerading as Arrays that don't have proper length\n    // properties by using 0 for everything but positive numbers\n    var input_length = (isNaN(input.length) || input.length <= 0) ? 0 : input.length;\n    var output_length = (isNaN(output.length) || output.length <= 0) ? 0 : output.length;\n    var array_operations = dist(input_length, output_length).operations;\n    var padded_operations = array_operations.reduce(function (_a, array_operation) {\n        var operations = _a[0], padding = _a[1];\n        if (isArrayAdd(array_operation)) {\n            var padded_index = array_operation.index + 1 + padding;\n            var index_token = padded_index < (input_length + padding) ? String(padded_index) : '-';\n            var operation = {\n                op: array_operation.op,\n                path: ptr.add(index_token).toString(),\n                value: array_operation.value,\n            };\n            // padding++ // maybe only if array_operation.index > -1 ?\n            return [operations.concat(operation), padding + 1];\n        }\n        else if (isArrayRemove(array_operation)) {\n            var operation = {\n                op: array_operation.op,\n                path: ptr.add(String(array_operation.index + padding)).toString(),\n            };\n            // padding--\n            return [operations.concat(operation), padding - 1];\n        }\n        else { // replace\n            var replace_ptr = ptr.add(String(array_operation.index + padding));\n            var replace_operations = diff(array_operation.original, array_operation.value, replace_ptr);\n            return [operations.concat.apply(operations, replace_operations), padding];\n        }\n    }, [[], 0])[0];\n    return padded_operations;\n}\nexports.diffArrays = diffArrays;\nfunction diffObjects(input, output, ptr, diff) {\n    if (diff === void 0) { diff = diffAny; }\n    // if a key is in input but not output -> remove it\n    var operations = [];\n    subtract(input, output).forEach(function (key) {\n        operations.push({ op: 'remove', path: ptr.add(key).toString() });\n    });\n    // if a key is in output but not input -> add it\n    subtract(output, input).forEach(function (key) {\n        operations.push({ op: 'add', path: ptr.add(key).toString(), value: output[key] });\n    });\n    // if a key is in both, diff it recursively\n    intersection([input, output]).forEach(function (key) {\n        operations.push.apply(operations, diff(input[key], output[key], ptr.add(key)));\n    });\n    return operations;\n}\nexports.diffObjects = diffObjects;\n/**\n`diffAny()` returns an empty array if `input` and `output` are materially equal\n(i.e., would produce equivalent JSON); otherwise it produces an array of patches\nthat would transform `input` into `output`.\n\n> Here, \"equal\" means that the value at the target location and the\n> value conveyed by \"value\" are of the same JSON type, and that they\n> are considered equal by the following rules for that type:\n> o  strings: are considered equal if they contain the same number of\n>    Unicode characters and their code points are byte-by-byte equal.\n> o  numbers: are considered equal if their values are numerically\n>    equal.\n> o  arrays: are considered equal if they contain the same number of\n>    values, and if each value can be considered equal to the value at\n>    the corresponding position in the other array, using this list of\n>    type-specific rules.\n> o  objects: are considered equal if they contain the same number of\n>    members, and if each member can be considered equal to a member in\n>    the other object, by comparing their keys (as strings) and their\n>    values (using this list of type-specific rules).\n> o  literals (false, true, and null): are considered equal if they are\n>    the same.\n*/\nfunction diffAny(input, output, ptr, diff) {\n    if (diff === void 0) { diff = diffAny; }\n    // strict equality handles literals, numbers, and strings (a sufficient but not necessary cause)\n    if (input === output) {\n        return [];\n    }\n    var input_type = util_1.objectType(input);\n    var output_type = util_1.objectType(output);\n    if (input_type == 'array' && output_type == 'array') {\n        return diffArrays(input, output, ptr, diff);\n    }\n    if (input_type == 'object' && output_type == 'object') {\n        return diffObjects(input, output, ptr, diff);\n    }\n    // at this point we know that input and output are materially different;\n    // could be array -> object, object -> array, boolean -> undefined,\n    // number -> string, or some other combination, but nothing that can be split\n    // up into multiple patches: so `output` must replace `input` wholesale.\n    return [{ op: 'replace', path: ptr.toString(), value: output }];\n}\nexports.diffAny = diffAny;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/rfc6902/diff.js\n"));

/***/ }),

/***/ "./node_modules/rfc6902/index.js":
/*!***************************************!*\
  !*** ./node_modules/rfc6902/index.js ***!
  \***************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createTests = exports.createPatch = exports.applyPatch = void 0;\nvar pointer_1 = __webpack_require__(/*! ./pointer */ \"./node_modules/rfc6902/pointer.js\");\nvar patch_1 = __webpack_require__(/*! ./patch */ \"./node_modules/rfc6902/patch.js\");\nvar diff_1 = __webpack_require__(/*! ./diff */ \"./node_modules/rfc6902/diff.js\");\n/**\nApply a 'application/json-patch+json'-type patch to an object.\n\n`patch` *must* be an array of operations.\n\n> Operation objects MUST have exactly one \"op\" member, whose value\n> indicates the operation to perform.  Its value MUST be one of \"add\",\n> \"remove\", \"replace\", \"move\", \"copy\", or \"test\"; other values are\n> errors.\n\nThis method mutates the target object in-place.\n\n@returns list of results, one for each operation: `null` indicated success,\n         otherwise, the result will be an instance of one of the Error classes:\n         MissingError, InvalidOperationError, or TestError.\n*/\nfunction applyPatch(object, patch) {\n    return patch.map(function (operation) { return patch_1.apply(object, operation); });\n}\nexports.applyPatch = applyPatch;\nfunction wrapVoidableDiff(diff) {\n    function wrappedDiff(input, output, ptr) {\n        var custom_patch = diff(input, output, ptr);\n        // ensure an array is always returned\n        return Array.isArray(custom_patch) ? custom_patch : diff_1.diffAny(input, output, ptr, wrappedDiff);\n    }\n    return wrappedDiff;\n}\n/**\nProduce a 'application/json-patch+json'-type patch to get from one object to\nanother.\n\nThis does not alter `input` or `output` unless they have a property getter with\nside-effects (which is not a good idea anyway).\n\n`diff` is called on each pair of comparable non-primitive nodes in the\n`input`/`output` object trees, producing nested patches. Return `undefined`\nto fall back to default behaviour.\n\nReturns list of operations to perform on `input` to produce `output`.\n*/\nfunction createPatch(input, output, diff) {\n    var ptr = new pointer_1.Pointer();\n    // a new Pointer gets a default path of [''] if not specified\n    return (diff ? wrapVoidableDiff(diff) : diff_1.diffAny)(input, output, ptr);\n}\nexports.createPatch = createPatch;\n/**\nCreate a test operation based on `input`'s current evaluation of the JSON\nPointer `path`; if such a pointer cannot be resolved, returns undefined.\n*/\nfunction createTest(input, path) {\n    var endpoint = pointer_1.Pointer.fromJSON(path).evaluate(input);\n    if (endpoint !== undefined) {\n        return { op: 'test', path: path, value: endpoint.value };\n    }\n}\n/**\nProduce an 'application/json-patch+json'-type list of tests, to verify that\nexisting values in an object are identical to the those captured at some\ncheckpoint (whenever this function is called).\n\nThis does not alter `input` or `output` unless they have a property getter with\nside-effects (which is not a good idea anyway).\n\nReturns list of test operations.\n*/\nfunction createTests(input, patch) {\n    var tests = new Array();\n    patch.filter(diff_1.isDestructive).forEach(function (operation) {\n        var pathTest = createTest(input, operation.path);\n        if (pathTest)\n            tests.push(pathTest);\n        if ('from' in operation) {\n            var fromTest = createTest(input, operation.from);\n            if (fromTest)\n                tests.push(fromTest);\n        }\n    });\n    return tests;\n}\nexports.createTests = createTests;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmZjNjkwMi9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUIsR0FBRyxtQkFBbUIsR0FBRyxrQkFBa0I7QUFDOUQsZ0JBQWdCLG1CQUFPLENBQUMsb0RBQVc7QUFDbkMsY0FBYyxtQkFBTyxDQUFDLGdEQUFTO0FBQy9CLGFBQWEsbUJBQU8sQ0FBQyw4Q0FBUTtBQUM3QjtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxrREFBa0Q7QUFDbEQ7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QywwQ0FBMEM7QUFDdEY7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxtQkFBbUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JmYzY5MDIvaW5kZXguanM/YmU2ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY3JlYXRlVGVzdHMgPSBleHBvcnRzLmNyZWF0ZVBhdGNoID0gZXhwb3J0cy5hcHBseVBhdGNoID0gdm9pZCAwO1xudmFyIHBvaW50ZXJfMSA9IHJlcXVpcmUoXCIuL3BvaW50ZXJcIik7XG52YXIgcGF0Y2hfMSA9IHJlcXVpcmUoXCIuL3BhdGNoXCIpO1xudmFyIGRpZmZfMSA9IHJlcXVpcmUoXCIuL2RpZmZcIik7XG4vKipcbkFwcGx5IGEgJ2FwcGxpY2F0aW9uL2pzb24tcGF0Y2granNvbictdHlwZSBwYXRjaCB0byBhbiBvYmplY3QuXG5cbmBwYXRjaGAgKm11c3QqIGJlIGFuIGFycmF5IG9mIG9wZXJhdGlvbnMuXG5cbj4gT3BlcmF0aW9uIG9iamVjdHMgTVVTVCBoYXZlIGV4YWN0bHkgb25lIFwib3BcIiBtZW1iZXIsIHdob3NlIHZhbHVlXG4+IGluZGljYXRlcyB0aGUgb3BlcmF0aW9uIHRvIHBlcmZvcm0uICBJdHMgdmFsdWUgTVVTVCBiZSBvbmUgb2YgXCJhZGRcIixcbj4gXCJyZW1vdmVcIiwgXCJyZXBsYWNlXCIsIFwibW92ZVwiLCBcImNvcHlcIiwgb3IgXCJ0ZXN0XCI7IG90aGVyIHZhbHVlcyBhcmVcbj4gZXJyb3JzLlxuXG5UaGlzIG1ldGhvZCBtdXRhdGVzIHRoZSB0YXJnZXQgb2JqZWN0IGluLXBsYWNlLlxuXG5AcmV0dXJucyBsaXN0IG9mIHJlc3VsdHMsIG9uZSBmb3IgZWFjaCBvcGVyYXRpb246IGBudWxsYCBpbmRpY2F0ZWQgc3VjY2VzcyxcbiAgICAgICAgIG90aGVyd2lzZSwgdGhlIHJlc3VsdCB3aWxsIGJlIGFuIGluc3RhbmNlIG9mIG9uZSBvZiB0aGUgRXJyb3IgY2xhc3NlczpcbiAgICAgICAgIE1pc3NpbmdFcnJvciwgSW52YWxpZE9wZXJhdGlvbkVycm9yLCBvciBUZXN0RXJyb3IuXG4qL1xuZnVuY3Rpb24gYXBwbHlQYXRjaChvYmplY3QsIHBhdGNoKSB7XG4gICAgcmV0dXJuIHBhdGNoLm1hcChmdW5jdGlvbiAob3BlcmF0aW9uKSB7IHJldHVybiBwYXRjaF8xLmFwcGx5KG9iamVjdCwgb3BlcmF0aW9uKTsgfSk7XG59XG5leHBvcnRzLmFwcGx5UGF0Y2ggPSBhcHBseVBhdGNoO1xuZnVuY3Rpb24gd3JhcFZvaWRhYmxlRGlmZihkaWZmKSB7XG4gICAgZnVuY3Rpb24gd3JhcHBlZERpZmYoaW5wdXQsIG91dHB1dCwgcHRyKSB7XG4gICAgICAgIHZhciBjdXN0b21fcGF0Y2ggPSBkaWZmKGlucHV0LCBvdXRwdXQsIHB0cik7XG4gICAgICAgIC8vIGVuc3VyZSBhbiBhcnJheSBpcyBhbHdheXMgcmV0dXJuZWRcbiAgICAgICAgcmV0dXJuIEFycmF5LmlzQXJyYXkoY3VzdG9tX3BhdGNoKSA/IGN1c3RvbV9wYXRjaCA6IGRpZmZfMS5kaWZmQW55KGlucHV0LCBvdXRwdXQsIHB0ciwgd3JhcHBlZERpZmYpO1xuICAgIH1cbiAgICByZXR1cm4gd3JhcHBlZERpZmY7XG59XG4vKipcblByb2R1Y2UgYSAnYXBwbGljYXRpb24vanNvbi1wYXRjaCtqc29uJy10eXBlIHBhdGNoIHRvIGdldCBmcm9tIG9uZSBvYmplY3QgdG9cbmFub3RoZXIuXG5cblRoaXMgZG9lcyBub3QgYWx0ZXIgYGlucHV0YCBvciBgb3V0cHV0YCB1bmxlc3MgdGhleSBoYXZlIGEgcHJvcGVydHkgZ2V0dGVyIHdpdGhcbnNpZGUtZWZmZWN0cyAod2hpY2ggaXMgbm90IGEgZ29vZCBpZGVhIGFueXdheSkuXG5cbmBkaWZmYCBpcyBjYWxsZWQgb24gZWFjaCBwYWlyIG9mIGNvbXBhcmFibGUgbm9uLXByaW1pdGl2ZSBub2RlcyBpbiB0aGVcbmBpbnB1dGAvYG91dHB1dGAgb2JqZWN0IHRyZWVzLCBwcm9kdWNpbmcgbmVzdGVkIHBhdGNoZXMuIFJldHVybiBgdW5kZWZpbmVkYFxudG8gZmFsbCBiYWNrIHRvIGRlZmF1bHQgYmVoYXZpb3VyLlxuXG5SZXR1cm5zIGxpc3Qgb2Ygb3BlcmF0aW9ucyB0byBwZXJmb3JtIG9uIGBpbnB1dGAgdG8gcHJvZHVjZSBgb3V0cHV0YC5cbiovXG5mdW5jdGlvbiBjcmVhdGVQYXRjaChpbnB1dCwgb3V0cHV0LCBkaWZmKSB7XG4gICAgdmFyIHB0ciA9IG5ldyBwb2ludGVyXzEuUG9pbnRlcigpO1xuICAgIC8vIGEgbmV3IFBvaW50ZXIgZ2V0cyBhIGRlZmF1bHQgcGF0aCBvZiBbJyddIGlmIG5vdCBzcGVjaWZpZWRcbiAgICByZXR1cm4gKGRpZmYgPyB3cmFwVm9pZGFibGVEaWZmKGRpZmYpIDogZGlmZl8xLmRpZmZBbnkpKGlucHV0LCBvdXRwdXQsIHB0cik7XG59XG5leHBvcnRzLmNyZWF0ZVBhdGNoID0gY3JlYXRlUGF0Y2g7XG4vKipcbkNyZWF0ZSBhIHRlc3Qgb3BlcmF0aW9uIGJhc2VkIG9uIGBpbnB1dGAncyBjdXJyZW50IGV2YWx1YXRpb24gb2YgdGhlIEpTT05cblBvaW50ZXIgYHBhdGhgOyBpZiBzdWNoIGEgcG9pbnRlciBjYW5ub3QgYmUgcmVzb2x2ZWQsIHJldHVybnMgdW5kZWZpbmVkLlxuKi9cbmZ1bmN0aW9uIGNyZWF0ZVRlc3QoaW5wdXQsIHBhdGgpIHtcbiAgICB2YXIgZW5kcG9pbnQgPSBwb2ludGVyXzEuUG9pbnRlci5mcm9tSlNPTihwYXRoKS5ldmFsdWF0ZShpbnB1dCk7XG4gICAgaWYgKGVuZHBvaW50ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHsgb3A6ICd0ZXN0JywgcGF0aDogcGF0aCwgdmFsdWU6IGVuZHBvaW50LnZhbHVlIH07XG4gICAgfVxufVxuLyoqXG5Qcm9kdWNlIGFuICdhcHBsaWNhdGlvbi9qc29uLXBhdGNoK2pzb24nLXR5cGUgbGlzdCBvZiB0ZXN0cywgdG8gdmVyaWZ5IHRoYXRcbmV4aXN0aW5nIHZhbHVlcyBpbiBhbiBvYmplY3QgYXJlIGlkZW50aWNhbCB0byB0aGUgdGhvc2UgY2FwdHVyZWQgYXQgc29tZVxuY2hlY2twb2ludCAod2hlbmV2ZXIgdGhpcyBmdW5jdGlvbiBpcyBjYWxsZWQpLlxuXG5UaGlzIGRvZXMgbm90IGFsdGVyIGBpbnB1dGAgb3IgYG91dHB1dGAgdW5sZXNzIHRoZXkgaGF2ZSBhIHByb3BlcnR5IGdldHRlciB3aXRoXG5zaWRlLWVmZmVjdHMgKHdoaWNoIGlzIG5vdCBhIGdvb2QgaWRlYSBhbnl3YXkpLlxuXG5SZXR1cm5zIGxpc3Qgb2YgdGVzdCBvcGVyYXRpb25zLlxuKi9cbmZ1bmN0aW9uIGNyZWF0ZVRlc3RzKGlucHV0LCBwYXRjaCkge1xuICAgIHZhciB0ZXN0cyA9IG5ldyBBcnJheSgpO1xuICAgIHBhdGNoLmZpbHRlcihkaWZmXzEuaXNEZXN0cnVjdGl2ZSkuZm9yRWFjaChmdW5jdGlvbiAob3BlcmF0aW9uKSB7XG4gICAgICAgIHZhciBwYXRoVGVzdCA9IGNyZWF0ZVRlc3QoaW5wdXQsIG9wZXJhdGlvbi5wYXRoKTtcbiAgICAgICAgaWYgKHBhdGhUZXN0KVxuICAgICAgICAgICAgdGVzdHMucHVzaChwYXRoVGVzdCk7XG4gICAgICAgIGlmICgnZnJvbScgaW4gb3BlcmF0aW9uKSB7XG4gICAgICAgICAgICB2YXIgZnJvbVRlc3QgPSBjcmVhdGVUZXN0KGlucHV0LCBvcGVyYXRpb24uZnJvbSk7XG4gICAgICAgICAgICBpZiAoZnJvbVRlc3QpXG4gICAgICAgICAgICAgICAgdGVzdHMucHVzaChmcm9tVGVzdCk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gdGVzdHM7XG59XG5leHBvcnRzLmNyZWF0ZVRlc3RzID0gY3JlYXRlVGVzdHM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/rfc6902/index.js\n"));

/***/ }),

/***/ "./node_modules/rfc6902/patch.js":
/*!***************************************!*\
  !*** ./node_modules/rfc6902/patch.js ***!
  \***************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.apply = exports.InvalidOperationError = exports.test = exports.copy = exports.move = exports.replace = exports.remove = exports.add = exports.TestError = exports.MissingError = void 0;\nvar pointer_1 = __webpack_require__(/*! ./pointer */ \"./node_modules/rfc6902/pointer.js\");\nvar util_1 = __webpack_require__(/*! ./util */ \"./node_modules/rfc6902/util.js\");\nvar diff_1 = __webpack_require__(/*! ./diff */ \"./node_modules/rfc6902/diff.js\");\nvar MissingError = /** @class */ (function (_super) {\n    __extends(MissingError, _super);\n    function MissingError(path) {\n        var _this = _super.call(this, \"Value required at path: \" + path) || this;\n        _this.path = path;\n        _this.name = 'MissingError';\n        return _this;\n    }\n    return MissingError;\n}(Error));\nexports.MissingError = MissingError;\nvar TestError = /** @class */ (function (_super) {\n    __extends(TestError, _super);\n    function TestError(actual, expected) {\n        var _this = _super.call(this, \"Test failed: \" + actual + \" != \" + expected) || this;\n        _this.actual = actual;\n        _this.expected = expected;\n        _this.name = 'TestError';\n        return _this;\n    }\n    return TestError;\n}(Error));\nexports.TestError = TestError;\nfunction _add(object, key, value) {\n    if (Array.isArray(object)) {\n        // `key` must be an index\n        if (key == '-') {\n            object.push(value);\n        }\n        else {\n            var index = parseInt(key, 10);\n            object.splice(index, 0, value);\n        }\n    }\n    else {\n        object[key] = value;\n    }\n}\nfunction _remove(object, key) {\n    if (Array.isArray(object)) {\n        // '-' syntax doesn't make sense when removing\n        var index = parseInt(key, 10);\n        object.splice(index, 1);\n    }\n    else {\n        // not sure what the proper behavior is when path = ''\n        delete object[key];\n    }\n}\n/**\n>  o  If the target location specifies an array index, a new value is\n>     inserted into the array at the specified index.\n>  o  If the target location specifies an object member that does not\n>     already exist, a new member is added to the object.\n>  o  If the target location specifies an object member that does exist,\n>     that member's value is replaced.\n*/\nfunction add(object, operation) {\n    var endpoint = pointer_1.Pointer.fromJSON(operation.path).evaluate(object);\n    // it's not exactly a \"MissingError\" in the same way that `remove` is -- more like a MissingParent, or something\n    if (endpoint.parent === undefined) {\n        return new MissingError(operation.path);\n    }\n    _add(endpoint.parent, endpoint.key, util_1.clone(operation.value));\n    return null;\n}\nexports.add = add;\n/**\n> The \"remove\" operation removes the value at the target location.\n> The target location MUST exist for the operation to be successful.\n*/\nfunction remove(object, operation) {\n    // endpoint has parent, key, and value properties\n    var endpoint = pointer_1.Pointer.fromJSON(operation.path).evaluate(object);\n    if (endpoint.value === undefined) {\n        return new MissingError(operation.path);\n    }\n    // not sure what the proper behavior is when path = ''\n    _remove(endpoint.parent, endpoint.key);\n    return null;\n}\nexports.remove = remove;\n/**\n> The \"replace\" operation replaces the value at the target location\n> with a new value.  The operation object MUST contain a \"value\" member\n> whose content specifies the replacement value.\n> The target location MUST exist for the operation to be successful.\n\n> This operation is functionally identical to a \"remove\" operation for\n> a value, followed immediately by an \"add\" operation at the same\n> location with the replacement value.\n\nEven more simply, it's like the add operation with an existence check.\n*/\nfunction replace(object, operation) {\n    var endpoint = pointer_1.Pointer.fromJSON(operation.path).evaluate(object);\n    if (endpoint.parent === null) {\n        return new MissingError(operation.path);\n    }\n    // this existence check treats arrays as a special case\n    if (Array.isArray(endpoint.parent)) {\n        if (parseInt(endpoint.key, 10) >= endpoint.parent.length) {\n            return new MissingError(operation.path);\n        }\n    }\n    else if (endpoint.value === undefined) {\n        return new MissingError(operation.path);\n    }\n    endpoint.parent[endpoint.key] = operation.value;\n    return null;\n}\nexports.replace = replace;\n/**\n> The \"move\" operation removes the value at a specified location and\n> adds it to the target location.\n> The operation object MUST contain a \"from\" member, which is a string\n> containing a JSON Pointer value that references the location in the\n> target document to move the value from.\n> This operation is functionally identical to a \"remove\" operation on\n> the \"from\" location, followed immediately by an \"add\" operation at\n> the target location with the value that was just removed.\n\n> The \"from\" location MUST NOT be a proper prefix of the \"path\"\n> location; i.e., a location cannot be moved into one of its children.\n\nTODO: throw if the check described in the previous paragraph fails.\n*/\nfunction move(object, operation) {\n    var from_endpoint = pointer_1.Pointer.fromJSON(operation.from).evaluate(object);\n    if (from_endpoint.value === undefined) {\n        return new MissingError(operation.from);\n    }\n    var endpoint = pointer_1.Pointer.fromJSON(operation.path).evaluate(object);\n    if (endpoint.parent === undefined) {\n        return new MissingError(operation.path);\n    }\n    _remove(from_endpoint.parent, from_endpoint.key);\n    _add(endpoint.parent, endpoint.key, from_endpoint.value);\n    return null;\n}\nexports.move = move;\n/**\n> The \"copy\" operation copies the value at a specified location to the\n> target location.\n> The operation object MUST contain a \"from\" member, which is a string\n> containing a JSON Pointer value that references the location in the\n> target document to copy the value from.\n> The \"from\" location MUST exist for the operation to be successful.\n\n> This operation is functionally identical to an \"add\" operation at the\n> target location using the value specified in the \"from\" member.\n\nAlternatively, it's like 'move' without the 'remove'.\n*/\nfunction copy(object, operation) {\n    var from_endpoint = pointer_1.Pointer.fromJSON(operation.from).evaluate(object);\n    if (from_endpoint.value === undefined) {\n        return new MissingError(operation.from);\n    }\n    var endpoint = pointer_1.Pointer.fromJSON(operation.path).evaluate(object);\n    if (endpoint.parent === undefined) {\n        return new MissingError(operation.path);\n    }\n    _add(endpoint.parent, endpoint.key, util_1.clone(from_endpoint.value));\n    return null;\n}\nexports.copy = copy;\n/**\n> The \"test\" operation tests that a value at the target location is\n> equal to a specified value.\n> The operation object MUST contain a \"value\" member that conveys the\n> value to be compared to the target location's value.\n> The target location MUST be equal to the \"value\" value for the\n> operation to be considered successful.\n*/\nfunction test(object, operation) {\n    var endpoint = pointer_1.Pointer.fromJSON(operation.path).evaluate(object);\n    // TODO: this diffAny(...).length usage could/should be lazy\n    if (diff_1.diffAny(endpoint.value, operation.value, new pointer_1.Pointer()).length) {\n        return new TestError(endpoint.value, operation.value);\n    }\n    return null;\n}\nexports.test = test;\nvar InvalidOperationError = /** @class */ (function (_super) {\n    __extends(InvalidOperationError, _super);\n    function InvalidOperationError(operation) {\n        var _this = _super.call(this, \"Invalid operation: \" + operation.op) || this;\n        _this.operation = operation;\n        _this.name = 'InvalidOperationError';\n        return _this;\n    }\n    return InvalidOperationError;\n}(Error));\nexports.InvalidOperationError = InvalidOperationError;\n/**\nSwitch on `operation.op`, applying the corresponding patch function for each\ncase to `object`.\n*/\nfunction apply(object, operation) {\n    // not sure why TypeScript can't infer typesafety of:\n    //   {add, remove, replace, move, copy, test}[operation.op](object, operation)\n    // (seems like a bug)\n    switch (operation.op) {\n        case 'add': return add(object, operation);\n        case 'remove': return remove(object, operation);\n        case 'replace': return replace(object, operation);\n        case 'move': return move(object, operation);\n        case 'copy': return copy(object, operation);\n        case 'test': return test(object, operation);\n    }\n    return new InvalidOperationError(operation);\n}\nexports.apply = apply;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/rfc6902/patch.js\n"));

/***/ }),

/***/ "./node_modules/rfc6902/pointer.js":
/*!*****************************************!*\
  !*** ./node_modules/rfc6902/pointer.js ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Pointer = void 0;\n/**\nUnescape token part of a JSON Pointer string\n\n`token` should *not* contain any '/' characters.\n\n> Evaluation of each reference token begins by decoding any escaped\n> character sequence.  This is performed by first transforming any\n> occurrence of the sequence '~1' to '/', and then transforming any\n> occurrence of the sequence '~0' to '~'.  By performing the\n> substitutions in this order, an implementation avoids the error of\n> turning '~01' first into '~1' and then into '/', which would be\n> incorrect (the string '~01' correctly becomes '~1' after\n> transformation).\n\nHere's my take:\n\n~1 is unescaped with higher priority than ~0 because it is a lower-order escape character.\nI say \"lower order\" because '/' needs escaping due to the JSON Pointer serialization technique.\nWhereas, '~' is escaped because escaping '/' uses the '~' character.\n*/\nfunction unescape(token) {\n    return token.replace(/~1/g, '/').replace(/~0/g, '~');\n}\n/** Escape token part of a JSON Pointer string\n\n> '~' needs to be encoded as '~0' and '/'\n> needs to be encoded as '~1' when these characters appear in a\n> reference token.\n\nThis is the exact inverse of `unescape()`, so the reverse replacements must take place in reverse order.\n*/\nfunction escape(token) {\n    return token.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n/**\nJSON Pointer representation\n*/\nvar Pointer = /** @class */ (function () {\n    function Pointer(tokens) {\n        if (tokens === void 0) { tokens = ['']; }\n        this.tokens = tokens;\n    }\n    /**\n    `path` *must* be a properly escaped string.\n    */\n    Pointer.fromJSON = function (path) {\n        var tokens = path.split('/').map(unescape);\n        if (tokens[0] !== '')\n            throw new Error(\"Invalid JSON Pointer: \" + path);\n        return new Pointer(tokens);\n    };\n    Pointer.prototype.toString = function () {\n        return this.tokens.map(escape).join('/');\n    };\n    /**\n    Returns an object with 'parent', 'key', and 'value' properties.\n    In the special case that this Pointer's path == \"\",\n    this object will be {parent: null, key: '', value: object}.\n    Otherwise, parent and key will have the property such that parent[key] == value.\n    */\n    Pointer.prototype.evaluate = function (object) {\n        var parent = null;\n        var key = '';\n        var value = object;\n        for (var i = 1, l = this.tokens.length; i < l; i++) {\n            parent = value;\n            key = this.tokens[i];\n            if (key == '__proto__' || key == 'constructor' || key == 'prototype') {\n                continue;\n            }\n            // not sure if this the best way to handle non-existant paths...\n            value = (parent || {})[key];\n        }\n        return { parent: parent, key: key, value: value };\n    };\n    Pointer.prototype.get = function (object) {\n        return this.evaluate(object).value;\n    };\n    Pointer.prototype.set = function (object, value) {\n        var cursor = object;\n        for (var i = 1, l = this.tokens.length - 1, token = this.tokens[i]; i < l; i++) {\n            // not sure if this the best way to handle non-existant paths...\n            cursor = (cursor || {})[token];\n        }\n        if (cursor) {\n            cursor[this.tokens[this.tokens.length - 1]] = value;\n        }\n    };\n    Pointer.prototype.push = function (token) {\n        // mutable\n        this.tokens.push(token);\n    };\n    /**\n    `token` should be a String. It'll be coerced to one anyway.\n  \n    immutable (shallowly)\n    */\n    Pointer.prototype.add = function (token) {\n        var tokens = this.tokens.concat(String(token));\n        return new Pointer(tokens);\n    };\n    return Pointer;\n}());\nexports.Pointer = Pointer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmZjNjkwMi9wb2ludGVyLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGVBQWU7QUFDZjtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixxQ0FBcUM7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdELE9BQU87QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDO0FBQ2pDO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRFQUE0RSxPQUFPO0FBQ25GO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELGVBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JmYzY5MDIvcG9pbnRlci5qcz9iNzQ2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qb2ludGVyID0gdm9pZCAwO1xuLyoqXG5VbmVzY2FwZSB0b2tlbiBwYXJ0IG9mIGEgSlNPTiBQb2ludGVyIHN0cmluZ1xuXG5gdG9rZW5gIHNob3VsZCAqbm90KiBjb250YWluIGFueSAnLycgY2hhcmFjdGVycy5cblxuPiBFdmFsdWF0aW9uIG9mIGVhY2ggcmVmZXJlbmNlIHRva2VuIGJlZ2lucyBieSBkZWNvZGluZyBhbnkgZXNjYXBlZFxuPiBjaGFyYWN0ZXIgc2VxdWVuY2UuICBUaGlzIGlzIHBlcmZvcm1lZCBieSBmaXJzdCB0cmFuc2Zvcm1pbmcgYW55XG4+IG9jY3VycmVuY2Ugb2YgdGhlIHNlcXVlbmNlICd+MScgdG8gJy8nLCBhbmQgdGhlbiB0cmFuc2Zvcm1pbmcgYW55XG4+IG9jY3VycmVuY2Ugb2YgdGhlIHNlcXVlbmNlICd+MCcgdG8gJ34nLiAgQnkgcGVyZm9ybWluZyB0aGVcbj4gc3Vic3RpdHV0aW9ucyBpbiB0aGlzIG9yZGVyLCBhbiBpbXBsZW1lbnRhdGlvbiBhdm9pZHMgdGhlIGVycm9yIG9mXG4+IHR1cm5pbmcgJ34wMScgZmlyc3QgaW50byAnfjEnIGFuZCB0aGVuIGludG8gJy8nLCB3aGljaCB3b3VsZCBiZVxuPiBpbmNvcnJlY3QgKHRoZSBzdHJpbmcgJ34wMScgY29ycmVjdGx5IGJlY29tZXMgJ34xJyBhZnRlclxuPiB0cmFuc2Zvcm1hdGlvbikuXG5cbkhlcmUncyBteSB0YWtlOlxuXG5+MSBpcyB1bmVzY2FwZWQgd2l0aCBoaWdoZXIgcHJpb3JpdHkgdGhhbiB+MCBiZWNhdXNlIGl0IGlzIGEgbG93ZXItb3JkZXIgZXNjYXBlIGNoYXJhY3Rlci5cbkkgc2F5IFwibG93ZXIgb3JkZXJcIiBiZWNhdXNlICcvJyBuZWVkcyBlc2NhcGluZyBkdWUgdG8gdGhlIEpTT04gUG9pbnRlciBzZXJpYWxpemF0aW9uIHRlY2huaXF1ZS5cbldoZXJlYXMsICd+JyBpcyBlc2NhcGVkIGJlY2F1c2UgZXNjYXBpbmcgJy8nIHVzZXMgdGhlICd+JyBjaGFyYWN0ZXIuXG4qL1xuZnVuY3Rpb24gdW5lc2NhcGUodG9rZW4pIHtcbiAgICByZXR1cm4gdG9rZW4ucmVwbGFjZSgvfjEvZywgJy8nKS5yZXBsYWNlKC9+MC9nLCAnficpO1xufVxuLyoqIEVzY2FwZSB0b2tlbiBwYXJ0IG9mIGEgSlNPTiBQb2ludGVyIHN0cmluZ1xuXG4+ICd+JyBuZWVkcyB0byBiZSBlbmNvZGVkIGFzICd+MCcgYW5kICcvJ1xuPiBuZWVkcyB0byBiZSBlbmNvZGVkIGFzICd+MScgd2hlbiB0aGVzZSBjaGFyYWN0ZXJzIGFwcGVhciBpbiBhXG4+IHJlZmVyZW5jZSB0b2tlbi5cblxuVGhpcyBpcyB0aGUgZXhhY3QgaW52ZXJzZSBvZiBgdW5lc2NhcGUoKWAsIHNvIHRoZSByZXZlcnNlIHJlcGxhY2VtZW50cyBtdXN0IHRha2UgcGxhY2UgaW4gcmV2ZXJzZSBvcmRlci5cbiovXG5mdW5jdGlvbiBlc2NhcGUodG9rZW4pIHtcbiAgICByZXR1cm4gdG9rZW4ucmVwbGFjZSgvfi9nLCAnfjAnKS5yZXBsYWNlKC9cXC8vZywgJ34xJyk7XG59XG4vKipcbkpTT04gUG9pbnRlciByZXByZXNlbnRhdGlvblxuKi9cbnZhciBQb2ludGVyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFBvaW50ZXIodG9rZW5zKSB7XG4gICAgICAgIGlmICh0b2tlbnMgPT09IHZvaWQgMCkgeyB0b2tlbnMgPSBbJyddOyB9XG4gICAgICAgIHRoaXMudG9rZW5zID0gdG9rZW5zO1xuICAgIH1cbiAgICAvKipcbiAgICBgcGF0aGAgKm11c3QqIGJlIGEgcHJvcGVybHkgZXNjYXBlZCBzdHJpbmcuXG4gICAgKi9cbiAgICBQb2ludGVyLmZyb21KU09OID0gZnVuY3Rpb24gKHBhdGgpIHtcbiAgICAgICAgdmFyIHRva2VucyA9IHBhdGguc3BsaXQoJy8nKS5tYXAodW5lc2NhcGUpO1xuICAgICAgICBpZiAodG9rZW5zWzBdICE9PSAnJylcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgSlNPTiBQb2ludGVyOiBcIiArIHBhdGgpO1xuICAgICAgICByZXR1cm4gbmV3IFBvaW50ZXIodG9rZW5zKTtcbiAgICB9O1xuICAgIFBvaW50ZXIucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy50b2tlbnMubWFwKGVzY2FwZSkuam9pbignLycpO1xuICAgIH07XG4gICAgLyoqXG4gICAgUmV0dXJucyBhbiBvYmplY3Qgd2l0aCAncGFyZW50JywgJ2tleScsIGFuZCAndmFsdWUnIHByb3BlcnRpZXMuXG4gICAgSW4gdGhlIHNwZWNpYWwgY2FzZSB0aGF0IHRoaXMgUG9pbnRlcidzIHBhdGggPT0gXCJcIixcbiAgICB0aGlzIG9iamVjdCB3aWxsIGJlIHtwYXJlbnQ6IG51bGwsIGtleTogJycsIHZhbHVlOiBvYmplY3R9LlxuICAgIE90aGVyd2lzZSwgcGFyZW50IGFuZCBrZXkgd2lsbCBoYXZlIHRoZSBwcm9wZXJ0eSBzdWNoIHRoYXQgcGFyZW50W2tleV0gPT0gdmFsdWUuXG4gICAgKi9cbiAgICBQb2ludGVyLnByb3RvdHlwZS5ldmFsdWF0ZSA9IGZ1bmN0aW9uIChvYmplY3QpIHtcbiAgICAgICAgdmFyIHBhcmVudCA9IG51bGw7XG4gICAgICAgIHZhciBrZXkgPSAnJztcbiAgICAgICAgdmFyIHZhbHVlID0gb2JqZWN0O1xuICAgICAgICBmb3IgKHZhciBpID0gMSwgbCA9IHRoaXMudG9rZW5zLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgICAgICAgcGFyZW50ID0gdmFsdWU7XG4gICAgICAgICAgICBrZXkgPSB0aGlzLnRva2Vuc1tpXTtcbiAgICAgICAgICAgIGlmIChrZXkgPT0gJ19fcHJvdG9fXycgfHwga2V5ID09ICdjb25zdHJ1Y3RvcicgfHwga2V5ID09ICdwcm90b3R5cGUnKSB7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBub3Qgc3VyZSBpZiB0aGlzIHRoZSBiZXN0IHdheSB0byBoYW5kbGUgbm9uLWV4aXN0YW50IHBhdGhzLi4uXG4gICAgICAgICAgICB2YWx1ZSA9IChwYXJlbnQgfHwge30pW2tleV07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHsgcGFyZW50OiBwYXJlbnQsIGtleToga2V5LCB2YWx1ZTogdmFsdWUgfTtcbiAgICB9O1xuICAgIFBvaW50ZXIucHJvdG90eXBlLmdldCA9IGZ1bmN0aW9uIChvYmplY3QpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZXZhbHVhdGUob2JqZWN0KS52YWx1ZTtcbiAgICB9O1xuICAgIFBvaW50ZXIucHJvdG90eXBlLnNldCA9IGZ1bmN0aW9uIChvYmplY3QsIHZhbHVlKSB7XG4gICAgICAgIHZhciBjdXJzb3IgPSBvYmplY3Q7XG4gICAgICAgIGZvciAodmFyIGkgPSAxLCBsID0gdGhpcy50b2tlbnMubGVuZ3RoIC0gMSwgdG9rZW4gPSB0aGlzLnRva2Vuc1tpXTsgaSA8IGw7IGkrKykge1xuICAgICAgICAgICAgLy8gbm90IHN1cmUgaWYgdGhpcyB0aGUgYmVzdCB3YXkgdG8gaGFuZGxlIG5vbi1leGlzdGFudCBwYXRocy4uLlxuICAgICAgICAgICAgY3Vyc29yID0gKGN1cnNvciB8fCB7fSlbdG9rZW5dO1xuICAgICAgICB9XG4gICAgICAgIGlmIChjdXJzb3IpIHtcbiAgICAgICAgICAgIGN1cnNvclt0aGlzLnRva2Vuc1t0aGlzLnRva2Vucy5sZW5ndGggLSAxXV0gPSB2YWx1ZTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgUG9pbnRlci5wcm90b3R5cGUucHVzaCA9IGZ1bmN0aW9uICh0b2tlbikge1xuICAgICAgICAvLyBtdXRhYmxlXG4gICAgICAgIHRoaXMudG9rZW5zLnB1c2godG9rZW4pO1xuICAgIH07XG4gICAgLyoqXG4gICAgYHRva2VuYCBzaG91bGQgYmUgYSBTdHJpbmcuIEl0J2xsIGJlIGNvZXJjZWQgdG8gb25lIGFueXdheS5cbiAgXG4gICAgaW1tdXRhYmxlIChzaGFsbG93bHkpXG4gICAgKi9cbiAgICBQb2ludGVyLnByb3RvdHlwZS5hZGQgPSBmdW5jdGlvbiAodG9rZW4pIHtcbiAgICAgICAgdmFyIHRva2VucyA9IHRoaXMudG9rZW5zLmNvbmNhdChTdHJpbmcodG9rZW4pKTtcbiAgICAgICAgcmV0dXJuIG5ldyBQb2ludGVyKHRva2Vucyk7XG4gICAgfTtcbiAgICByZXR1cm4gUG9pbnRlcjtcbn0oKSk7XG5leHBvcnRzLlBvaW50ZXIgPSBQb2ludGVyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/rfc6902/pointer.js\n"));

/***/ }),

/***/ "./node_modules/rfc6902/util.js":
/*!**************************************!*\
  !*** ./node_modules/rfc6902/util.js ***!
  \**************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.clone = exports.objectType = exports.hasOwnProperty = void 0;\nexports.hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction objectType(object) {\n    if (object === undefined) {\n        return 'undefined';\n    }\n    if (object === null) {\n        return 'null';\n    }\n    if (Array.isArray(object)) {\n        return 'array';\n    }\n    return typeof object;\n}\nexports.objectType = objectType;\nfunction isNonPrimitive(value) {\n    // loose-equality checking for null is faster than strict checking for each of null/undefined/true/false\n    // checking null first, then calling typeof, is faster than vice-versa\n    return value != null && typeof value == 'object';\n}\n/**\nRecursively copy a value.\n\n@param source - should be a JavaScript primitive, Array, Date, or (plain old) Object.\n@returns copy of source where every Array and Object have been recursively\n         reconstructed from their constituent elements\n*/\nfunction clone(source) {\n    if (!isNonPrimitive(source)) {\n        // short-circuiting is faster than a single return\n        return source;\n    }\n    // x.constructor == Array is the fastest way to check if x is an Array\n    if (source.constructor == Array) {\n        // construction via imperative for-loop is faster than source.map(arrayVsObject)\n        var length_1 = source.length;\n        // setting the Array length during construction is faster than just `[]` or `new Array()`\n        var arrayTarget = new Array(length_1);\n        for (var i = 0; i < length_1; i++) {\n            arrayTarget[i] = clone(source[i]);\n        }\n        return arrayTarget;\n    }\n    // Date\n    if (source.constructor == Date) {\n        var dateTarget = new Date(+source);\n        return dateTarget;\n    }\n    // Object\n    var objectTarget = {};\n    // declaring the variable (with const) inside the loop is faster\n    for (var key in source) {\n        // hasOwnProperty costs a bit of performance, but it's semantically necessary\n        // using a global helper is MUCH faster than calling source.hasOwnProperty(key)\n        if (exports.hasOwnProperty.call(source, key)) {\n            objectTarget[key] = clone(source[key]);\n        }\n    }\n    return objectTarget;\n}\nexports.clone = clone;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmZjNjkwMi91dGlsLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGFBQWEsR0FBRyxrQkFBa0IsR0FBRyxzQkFBc0I7QUFDM0Qsc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsY0FBYztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZmM2OTAyL3V0aWwuanM/MjdiOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY2xvbmUgPSBleHBvcnRzLm9iamVjdFR5cGUgPSBleHBvcnRzLmhhc093blByb3BlcnR5ID0gdm9pZCAwO1xuZXhwb3J0cy5oYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5mdW5jdGlvbiBvYmplY3RUeXBlKG9iamVjdCkge1xuICAgIGlmIChvYmplY3QgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gJ3VuZGVmaW5lZCc7XG4gICAgfVxuICAgIGlmIChvYmplY3QgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuICdudWxsJztcbiAgICB9XG4gICAgaWYgKEFycmF5LmlzQXJyYXkob2JqZWN0KSkge1xuICAgICAgICByZXR1cm4gJ2FycmF5JztcbiAgICB9XG4gICAgcmV0dXJuIHR5cGVvZiBvYmplY3Q7XG59XG5leHBvcnRzLm9iamVjdFR5cGUgPSBvYmplY3RUeXBlO1xuZnVuY3Rpb24gaXNOb25QcmltaXRpdmUodmFsdWUpIHtcbiAgICAvLyBsb29zZS1lcXVhbGl0eSBjaGVja2luZyBmb3IgbnVsbCBpcyBmYXN0ZXIgdGhhbiBzdHJpY3QgY2hlY2tpbmcgZm9yIGVhY2ggb2YgbnVsbC91bmRlZmluZWQvdHJ1ZS9mYWxzZVxuICAgIC8vIGNoZWNraW5nIG51bGwgZmlyc3QsIHRoZW4gY2FsbGluZyB0eXBlb2YsIGlzIGZhc3RlciB0aGFuIHZpY2UtdmVyc2FcbiAgICByZXR1cm4gdmFsdWUgIT0gbnVsbCAmJiB0eXBlb2YgdmFsdWUgPT0gJ29iamVjdCc7XG59XG4vKipcblJlY3Vyc2l2ZWx5IGNvcHkgYSB2YWx1ZS5cblxuQHBhcmFtIHNvdXJjZSAtIHNob3VsZCBiZSBhIEphdmFTY3JpcHQgcHJpbWl0aXZlLCBBcnJheSwgRGF0ZSwgb3IgKHBsYWluIG9sZCkgT2JqZWN0LlxuQHJldHVybnMgY29weSBvZiBzb3VyY2Ugd2hlcmUgZXZlcnkgQXJyYXkgYW5kIE9iamVjdCBoYXZlIGJlZW4gcmVjdXJzaXZlbHlcbiAgICAgICAgIHJlY29uc3RydWN0ZWQgZnJvbSB0aGVpciBjb25zdGl0dWVudCBlbGVtZW50c1xuKi9cbmZ1bmN0aW9uIGNsb25lKHNvdXJjZSkge1xuICAgIGlmICghaXNOb25QcmltaXRpdmUoc291cmNlKSkge1xuICAgICAgICAvLyBzaG9ydC1jaXJjdWl0aW5nIGlzIGZhc3RlciB0aGFuIGEgc2luZ2xlIHJldHVyblxuICAgICAgICByZXR1cm4gc291cmNlO1xuICAgIH1cbiAgICAvLyB4LmNvbnN0cnVjdG9yID09IEFycmF5IGlzIHRoZSBmYXN0ZXN0IHdheSB0byBjaGVjayBpZiB4IGlzIGFuIEFycmF5XG4gICAgaWYgKHNvdXJjZS5jb25zdHJ1Y3RvciA9PSBBcnJheSkge1xuICAgICAgICAvLyBjb25zdHJ1Y3Rpb24gdmlhIGltcGVyYXRpdmUgZm9yLWxvb3AgaXMgZmFzdGVyIHRoYW4gc291cmNlLm1hcChhcnJheVZzT2JqZWN0KVxuICAgICAgICB2YXIgbGVuZ3RoXzEgPSBzb3VyY2UubGVuZ3RoO1xuICAgICAgICAvLyBzZXR0aW5nIHRoZSBBcnJheSBsZW5ndGggZHVyaW5nIGNvbnN0cnVjdGlvbiBpcyBmYXN0ZXIgdGhhbiBqdXN0IGBbXWAgb3IgYG5ldyBBcnJheSgpYFxuICAgICAgICB2YXIgYXJyYXlUYXJnZXQgPSBuZXcgQXJyYXkobGVuZ3RoXzEpO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aF8xOyBpKyspIHtcbiAgICAgICAgICAgIGFycmF5VGFyZ2V0W2ldID0gY2xvbmUoc291cmNlW2ldKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYXJyYXlUYXJnZXQ7XG4gICAgfVxuICAgIC8vIERhdGVcbiAgICBpZiAoc291cmNlLmNvbnN0cnVjdG9yID09IERhdGUpIHtcbiAgICAgICAgdmFyIGRhdGVUYXJnZXQgPSBuZXcgRGF0ZSgrc291cmNlKTtcbiAgICAgICAgcmV0dXJuIGRhdGVUYXJnZXQ7XG4gICAgfVxuICAgIC8vIE9iamVjdFxuICAgIHZhciBvYmplY3RUYXJnZXQgPSB7fTtcbiAgICAvLyBkZWNsYXJpbmcgdGhlIHZhcmlhYmxlICh3aXRoIGNvbnN0KSBpbnNpZGUgdGhlIGxvb3AgaXMgZmFzdGVyXG4gICAgZm9yICh2YXIga2V5IGluIHNvdXJjZSkge1xuICAgICAgICAvLyBoYXNPd25Qcm9wZXJ0eSBjb3N0cyBhIGJpdCBvZiBwZXJmb3JtYW5jZSwgYnV0IGl0J3Mgc2VtYW50aWNhbGx5IG5lY2Vzc2FyeVxuICAgICAgICAvLyB1c2luZyBhIGdsb2JhbCBoZWxwZXIgaXMgTVVDSCBmYXN0ZXIgdGhhbiBjYWxsaW5nIHNvdXJjZS5oYXNPd25Qcm9wZXJ0eShrZXkpXG4gICAgICAgIGlmIChleHBvcnRzLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7XG4gICAgICAgICAgICBvYmplY3RUYXJnZXRba2V5XSA9IGNsb25lKHNvdXJjZVtrZXldKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gb2JqZWN0VGFyZ2V0O1xufVxuZXhwb3J0cy5jbG9uZSA9IGNsb25lO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/rfc6902/util.js\n"));

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/objectSpread2.js":
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/objectSpread2.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _objectSpread2; }\n/* harmony export */ });\n/* harmony import */ var _defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defineProperty.js */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0,_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMi5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFpRDs7QUFFakQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBOztBQUVlO0FBQ2Ysa0JBQWtCLHNCQUFzQjtBQUN4QztBQUNBO0FBQ0EsTUFBTSw4REFBYztBQUNwQixLQUFLO0FBQ0w7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMi5qcz9lNWNhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkZWZpbmVQcm9wZXJ0eSBmcm9tIFwiLi9kZWZpbmVQcm9wZXJ0eS5qc1wiO1xuXG5mdW5jdGlvbiBvd25LZXlzKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHtcbiAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpO1xuXG4gIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG4gICAgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7XG4gICAgZW51bWVyYWJsZU9ubHkgJiYgKHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7XG4gICAgICByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTtcbiAgICB9KSksIGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTtcbiAgfVxuXG4gIHJldHVybiBrZXlzO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfb2JqZWN0U3ByZWFkMih0YXJnZXQpIHtcbiAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgc291cmNlID0gbnVsbCAhPSBhcmd1bWVudHNbaV0gPyBhcmd1bWVudHNbaV0gOiB7fTtcbiAgICBpICUgMiA/IG93bktleXMoT2JqZWN0KHNvdXJjZSksICEwKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgIGRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7XG4gICAgfSkgOiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyA/IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSkgOiBvd25LZXlzKE9iamVjdChzb3VyY2UpKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpO1xuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIHRhcmdldDtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/objectSpread2.js\n"));

/***/ }),

/***/ "./node_modules/@socket.io/component-emitter/index.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/@socket.io/component-emitter/index.mjs ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Emitter\": function() { return /* binding */ Emitter; }\n/* harmony export */ });\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNvY2tldC5pby9jb21wb25lbnQtZW1pdHRlci9pbmRleC5tanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixZQUFZO0FBQ1o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsVUFBVTtBQUNyQixZQUFZO0FBQ1o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFVBQVU7QUFDckIsWUFBWTtBQUNaO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFVBQVU7QUFDckIsWUFBWTtBQUNaO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxrQkFBa0Isc0JBQXNCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsT0FBTztBQUNsQixZQUFZO0FBQ1o7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBLGtCQUFrQixzQkFBc0I7QUFDeEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsNENBQTRDLFNBQVM7QUFDckQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsWUFBWTtBQUNaO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFlBQVk7QUFDWjtBQUNBOztBQUVBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNvY2tldC5pby9jb21wb25lbnQtZW1pdHRlci9pbmRleC5tanM/N2JkNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEluaXRpYWxpemUgYSBuZXcgYEVtaXR0ZXJgLlxuICpcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIEVtaXR0ZXIob2JqKSB7XG4gIGlmIChvYmopIHJldHVybiBtaXhpbihvYmopO1xufVxuXG4vKipcbiAqIE1peGluIHRoZSBlbWl0dGVyIHByb3BlcnRpZXMuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IG9ialxuICogQHJldHVybiB7T2JqZWN0fVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gbWl4aW4ob2JqKSB7XG4gIGZvciAodmFyIGtleSBpbiBFbWl0dGVyLnByb3RvdHlwZSkge1xuICAgIG9ialtrZXldID0gRW1pdHRlci5wcm90b3R5cGVba2V5XTtcbiAgfVxuICByZXR1cm4gb2JqO1xufVxuXG4vKipcbiAqIExpc3RlbiBvbiB0aGUgZ2l2ZW4gYGV2ZW50YCB3aXRoIGBmbmAuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IGV2ZW50XG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmblxuICogQHJldHVybiB7RW1pdHRlcn1cbiAqIEBhcGkgcHVibGljXG4gKi9cblxuRW1pdHRlci5wcm90b3R5cGUub24gPVxuRW1pdHRlci5wcm90b3R5cGUuYWRkRXZlbnRMaXN0ZW5lciA9IGZ1bmN0aW9uKGV2ZW50LCBmbil7XG4gIHRoaXMuX2NhbGxiYWNrcyA9IHRoaXMuX2NhbGxiYWNrcyB8fCB7fTtcbiAgKHRoaXMuX2NhbGxiYWNrc1snJCcgKyBldmVudF0gPSB0aGlzLl9jYWxsYmFja3NbJyQnICsgZXZlbnRdIHx8IFtdKVxuICAgIC5wdXNoKGZuKTtcbiAgcmV0dXJuIHRoaXM7XG59O1xuXG4vKipcbiAqIEFkZHMgYW4gYGV2ZW50YCBsaXN0ZW5lciB0aGF0IHdpbGwgYmUgaW52b2tlZCBhIHNpbmdsZVxuICogdGltZSB0aGVuIGF1dG9tYXRpY2FsbHkgcmVtb3ZlZC5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gZXZlbnRcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuXG4gKiBAcmV0dXJuIHtFbWl0dGVyfVxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5FbWl0dGVyLnByb3RvdHlwZS5vbmNlID0gZnVuY3Rpb24oZXZlbnQsIGZuKXtcbiAgZnVuY3Rpb24gb24oKSB7XG4gICAgdGhpcy5vZmYoZXZlbnQsIG9uKTtcbiAgICBmbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICB9XG5cbiAgb24uZm4gPSBmbjtcbiAgdGhpcy5vbihldmVudCwgb24pO1xuICByZXR1cm4gdGhpcztcbn07XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBnaXZlbiBjYWxsYmFjayBmb3IgYGV2ZW50YCBvciBhbGxcbiAqIHJlZ2lzdGVyZWQgY2FsbGJhY2tzLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBldmVudFxuICogQHBhcmFtIHtGdW5jdGlvbn0gZm5cbiAqIEByZXR1cm4ge0VtaXR0ZXJ9XG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbkVtaXR0ZXIucHJvdG90eXBlLm9mZiA9XG5FbWl0dGVyLnByb3RvdHlwZS5yZW1vdmVMaXN0ZW5lciA9XG5FbWl0dGVyLnByb3RvdHlwZS5yZW1vdmVBbGxMaXN0ZW5lcnMgPVxuRW1pdHRlci5wcm90b3R5cGUucmVtb3ZlRXZlbnRMaXN0ZW5lciA9IGZ1bmN0aW9uKGV2ZW50LCBmbil7XG4gIHRoaXMuX2NhbGxiYWNrcyA9IHRoaXMuX2NhbGxiYWNrcyB8fCB7fTtcblxuICAvLyBhbGxcbiAgaWYgKDAgPT0gYXJndW1lbnRzLmxlbmd0aCkge1xuICAgIHRoaXMuX2NhbGxiYWNrcyA9IHt9O1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgLy8gc3BlY2lmaWMgZXZlbnRcbiAgdmFyIGNhbGxiYWNrcyA9IHRoaXMuX2NhbGxiYWNrc1snJCcgKyBldmVudF07XG4gIGlmICghY2FsbGJhY2tzKSByZXR1cm4gdGhpcztcblxuICAvLyByZW1vdmUgYWxsIGhhbmRsZXJzXG4gIGlmICgxID09IGFyZ3VtZW50cy5sZW5ndGgpIHtcbiAgICBkZWxldGUgdGhpcy5fY2FsbGJhY2tzWyckJyArIGV2ZW50XTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIC8vIHJlbW92ZSBzcGVjaWZpYyBoYW5kbGVyXG4gIHZhciBjYjtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBjYWxsYmFja3MubGVuZ3RoOyBpKyspIHtcbiAgICBjYiA9IGNhbGxiYWNrc1tpXTtcbiAgICBpZiAoY2IgPT09IGZuIHx8IGNiLmZuID09PSBmbikge1xuICAgICAgY2FsbGJhY2tzLnNwbGljZShpLCAxKTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIC8vIFJlbW92ZSBldmVudCBzcGVjaWZpYyBhcnJheXMgZm9yIGV2ZW50IHR5cGVzIHRoYXQgbm9cbiAgLy8gb25lIGlzIHN1YnNjcmliZWQgZm9yIHRvIGF2b2lkIG1lbW9yeSBsZWFrLlxuICBpZiAoY2FsbGJhY2tzLmxlbmd0aCA9PT0gMCkge1xuICAgIGRlbGV0ZSB0aGlzLl9jYWxsYmFja3NbJyQnICsgZXZlbnRdO1xuICB9XG5cbiAgcmV0dXJuIHRoaXM7XG59O1xuXG4vKipcbiAqIEVtaXQgYGV2ZW50YCB3aXRoIHRoZSBnaXZlbiBhcmdzLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBldmVudFxuICogQHBhcmFtIHtNaXhlZH0gLi4uXG4gKiBAcmV0dXJuIHtFbWl0dGVyfVxuICovXG5cbkVtaXR0ZXIucHJvdG90eXBlLmVtaXQgPSBmdW5jdGlvbihldmVudCl7XG4gIHRoaXMuX2NhbGxiYWNrcyA9IHRoaXMuX2NhbGxiYWNrcyB8fCB7fTtcblxuICB2YXIgYXJncyA9IG5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoIC0gMSlcbiAgICAsIGNhbGxiYWNrcyA9IHRoaXMuX2NhbGxiYWNrc1snJCcgKyBldmVudF07XG5cbiAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICBhcmdzW2kgLSAxXSA9IGFyZ3VtZW50c1tpXTtcbiAgfVxuXG4gIGlmIChjYWxsYmFja3MpIHtcbiAgICBjYWxsYmFja3MgPSBjYWxsYmFja3Muc2xpY2UoMCk7XG4gICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IGNhbGxiYWNrcy5sZW5ndGg7IGkgPCBsZW47ICsraSkge1xuICAgICAgY2FsbGJhY2tzW2ldLmFwcGx5KHRoaXMsIGFyZ3MpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0aGlzO1xufTtcblxuLy8gYWxpYXMgdXNlZCBmb3IgcmVzZXJ2ZWQgZXZlbnRzIChwcm90ZWN0ZWQgbWV0aG9kKVxuRW1pdHRlci5wcm90b3R5cGUuZW1pdFJlc2VydmVkID0gRW1pdHRlci5wcm90b3R5cGUuZW1pdDtcblxuLyoqXG4gKiBSZXR1cm4gYXJyYXkgb2YgY2FsbGJhY2tzIGZvciBgZXZlbnRgLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBldmVudFxuICogQHJldHVybiB7QXJyYXl9XG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbkVtaXR0ZXIucHJvdG90eXBlLmxpc3RlbmVycyA9IGZ1bmN0aW9uKGV2ZW50KXtcbiAgdGhpcy5fY2FsbGJhY2tzID0gdGhpcy5fY2FsbGJhY2tzIHx8IHt9O1xuICByZXR1cm4gdGhpcy5fY2FsbGJhY2tzWyckJyArIGV2ZW50XSB8fCBbXTtcbn07XG5cbi8qKlxuICogQ2hlY2sgaWYgdGhpcyBlbWl0dGVyIGhhcyBgZXZlbnRgIGhhbmRsZXJzLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBldmVudFxuICogQHJldHVybiB7Qm9vbGVhbn1cbiAqIEBhcGkgcHVibGljXG4gKi9cblxuRW1pdHRlci5wcm90b3R5cGUuaGFzTGlzdGVuZXJzID0gZnVuY3Rpb24oZXZlbnQpe1xuICByZXR1cm4gISEgdGhpcy5saXN0ZW5lcnMoZXZlbnQpLmxlbmd0aDtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@socket.io/component-emitter/index.mjs\n"));

/***/ }),

/***/ "./node_modules/@swc/helpers/src/_array_like_to_array.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/@swc/helpers/src/_array_like_to_array.mjs ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _arrayLikeToArray; }\n/* harmony export */ });\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL3NyYy9fYXJyYXlfbGlrZV90b19hcnJheS5tanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFlO0FBQ2Y7QUFDQSx5Q0FBeUMsU0FBUztBQUNsRDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3djL2hlbHBlcnMvc3JjL19hcnJheV9saWtlX3RvX2FycmF5Lm1qcz83Y2E2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9hcnJheUxpa2VUb0FycmF5KGFyciwgbGVuKSB7XG4gIGlmIChsZW4gPT0gbnVsbCB8fCBsZW4gPiBhcnIubGVuZ3RoKSBsZW4gPSBhcnIubGVuZ3RoO1xuICBmb3IgKHZhciBpID0gMCwgYXJyMiA9IG5ldyBBcnJheShsZW4pOyBpIDwgbGVuOyBpKyspIGFycjJbaV0gPSBhcnJbaV07XG4gIHJldHVybiBhcnIyO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@swc/helpers/src/_array_like_to_array.mjs\n"));

/***/ }),

/***/ "./node_modules/@swc/helpers/src/_array_without_holes.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/@swc/helpers/src/_array_without_holes.mjs ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _arrayWithoutHoles; }\n/* harmony export */ });\n/* harmony import */ var _array_like_to_array_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_array_like_to_array.mjs */ \"./node_modules/@swc/helpers/src/_array_like_to_array.mjs\");\n\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return (0,_array_like_to_array_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(arr);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL3NyYy9fYXJyYXlfd2l0aG91dF9ob2xlcy5tanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMkQ7O0FBRTVDO0FBQ2YsaUNBQWlDLG9FQUFpQjtBQUNsRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL3NyYy9fYXJyYXlfd2l0aG91dF9ob2xlcy5tanM/NDA5MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgX2FycmF5TGlrZVRvQXJyYXkgZnJvbSAnLi9fYXJyYXlfbGlrZV90b19hcnJheS5tanMnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShhcnIpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@swc/helpers/src/_array_without_holes.mjs\n"));

/***/ }),

/***/ "./node_modules/@swc/helpers/src/_iterable_to_array.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/@swc/helpers/src/_iterable_to_array.mjs ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _iterableToArray; }\n/* harmony export */ });\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL3NyYy9faXRlcmFibGVfdG9fYXJyYXkubWpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBZTtBQUNmO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bzd2MvaGVscGVycy9zcmMvX2l0ZXJhYmxlX3RvX2FycmF5Lm1qcz8xYzY0Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXkoaXRlcikge1xuICBpZiAodHlwZW9mIFN5bWJvbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBpdGVyW1N5bWJvbC5pdGVyYXRvcl0gIT0gbnVsbCB8fCBpdGVyW1wiQEBpdGVyYXRvclwiXSAhPSBudWxsKSByZXR1cm4gQXJyYXkuZnJvbShpdGVyKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@swc/helpers/src/_iterable_to_array.mjs\n"));

/***/ }),

/***/ "./node_modules/@swc/helpers/src/_non_iterable_spread.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/@swc/helpers/src/_non_iterable_spread.mjs ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _nonIterableSpread; }\n/* harmony export */ });\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL3NyYy9fbm9uX2l0ZXJhYmxlX3NwcmVhZC5tanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFlO0FBQ2Y7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL3NyYy9fbm9uX2l0ZXJhYmxlX3NwcmVhZC5tanM/MWNhMiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfbm9uSXRlcmFibGVTcHJlYWQoKSB7XG4gIHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gc3ByZWFkIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXFxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@swc/helpers/src/_non_iterable_spread.mjs\n"));

/***/ }),

/***/ "./node_modules/@swc/helpers/src/_object_spread_props.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/@swc/helpers/src/_object_spread_props.mjs ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _objectSpreadProps; }\n/* harmony export */ });\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\n\nfunction _objectSpreadProps(target, source) {\n  source = source != null ? source : {}\n  if (Object.getOwnPropertyDescriptors) {\n    Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n  } else {\n    ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(\n        target,\n        key,\n        Object.getOwnPropertyDescriptor(source, key)\n      );\n    });\n  }\n\n  return target;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL3NyYy9fb2JqZWN0X3NwcmVhZF9wcm9wcy5tanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bzd2MvaGVscGVycy9zcmMvX29iamVjdF9zcHJlYWRfcHJvcHMubWpzPzRlMDUiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7XG4gIHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTtcbiAgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcbiAgICB2YXIgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTtcbiAgICBpZiAoZW51bWVyYWJsZU9ubHkpIHtcbiAgICAgIHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7XG4gICAgICAgIHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlO1xuICAgICAgfSk7XG4gICAgfVxuICAgIGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTtcbiAgfVxuICByZXR1cm4ga2V5cztcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX29iamVjdFNwcmVhZFByb3BzKHRhcmdldCwgc291cmNlKSB7XG4gIHNvdXJjZSA9IHNvdXJjZSAhPSBudWxsID8gc291cmNlIDoge31cbiAgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTtcbiAgfSBlbHNlIHtcbiAgICBvd25LZXlzKE9iamVjdChzb3VyY2UpKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShcbiAgICAgICAgdGFyZ2V0LFxuICAgICAgICBrZXksXG4gICAgICAgIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpXG4gICAgICApO1xuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIHRhcmdldDtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@swc/helpers/src/_object_spread_props.mjs\n"));

/***/ }),

/***/ "./node_modules/@swc/helpers/src/_tagged_template_literal.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/@swc/helpers/src/_tagged_template_literal.mjs ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _taggedTemplateLiteral; }\n/* harmony export */ });\nfunction _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL3NyYy9fdGFnZ2VkX3RlbXBsYXRlX2xpdGVyYWwubWpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBZTtBQUNmO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL3NyYy9fdGFnZ2VkX3RlbXBsYXRlX2xpdGVyYWwubWpzPzg0MWMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChzdHJpbmdzLCByYXcpIHtcbiAgaWYgKCFyYXcpIHtcbiAgICByYXcgPSBzdHJpbmdzLnNsaWNlKDApO1xuICB9XG5cbiAgcmV0dXJuIE9iamVjdC5mcmVlemUoT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoc3RyaW5ncywge1xuICAgIHJhdzoge1xuICAgICAgdmFsdWU6IE9iamVjdC5mcmVlemUocmF3KVxuICAgIH1cbiAgfSkpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@swc/helpers/src/_tagged_template_literal.mjs\n"));

/***/ }),

/***/ "./node_modules/@swc/helpers/src/_to_consumable_array.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/@swc/helpers/src/_to_consumable_array.mjs ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _toConsumableArray; }\n/* harmony export */ });\n/* harmony import */ var _array_without_holes_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_array_without_holes.mjs */ \"./node_modules/@swc/helpers/src/_array_without_holes.mjs\");\n/* harmony import */ var _iterable_to_array_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_iterable_to_array.mjs */ \"./node_modules/@swc/helpers/src/_iterable_to_array.mjs\");\n/* harmony import */ var _non_iterable_spread_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./_non_iterable_spread.mjs */ \"./node_modules/@swc/helpers/src/_non_iterable_spread.mjs\");\n/* harmony import */ var _unsupported_iterable_to_array_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_unsupported_iterable_to_array.mjs */ \"./node_modules/@swc/helpers/src/_unsupported_iterable_to_array.mjs\");\n\n\n\n\n\nfunction _toConsumableArray(arr) {\n  return (0,_array_without_holes_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(arr) || (0,_iterable_to_array_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(arr) || (0,_unsupported_iterable_to_array_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(arr) || (0,_non_iterable_spread_mjs__WEBPACK_IMPORTED_MODULE_3__[\"default\"])();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL3NyYy9fdG9fY29uc3VtYWJsZV9hcnJheS5tanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBMkQ7QUFDSjtBQUNJO0FBQ21COztBQUUvRDtBQUNmLFNBQVMsb0VBQWlCLFNBQVMsa0VBQWUsU0FBUyw4RUFBMEIsU0FBUyxvRUFBaUI7QUFDL0ciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bzd2MvaGVscGVycy9zcmMvX3RvX2NvbnN1bWFibGVfYXJyYXkubWpzP2IwYjAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGFycmF5V2l0aG91dEhvbGVzIGZyb20gJy4vX2FycmF5X3dpdGhvdXRfaG9sZXMubWpzJztcbmltcG9ydCBpdGVyYWJsZVRvQXJyYXkgZnJvbSAnLi9faXRlcmFibGVfdG9fYXJyYXkubWpzJztcbmltcG9ydCBub25JdGVyYWJsZVNwcmVhZCBmcm9tICcuL19ub25faXRlcmFibGVfc3ByZWFkLm1qcyc7XG5pbXBvcnQgdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkgZnJvbSAnLi9fdW5zdXBwb3J0ZWRfaXRlcmFibGVfdG9fYXJyYXkubWpzJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX3RvQ29uc3VtYWJsZUFycmF5KGFycikge1xuICByZXR1cm4gYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB8fCBpdGVyYWJsZVRvQXJyYXkoYXJyKSB8fCB1bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShhcnIpIHx8IG5vbkl0ZXJhYmxlU3ByZWFkKCk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@swc/helpers/src/_to_consumable_array.mjs\n"));

/***/ }),

/***/ "./node_modules/@swc/helpers/src/_unsupported_iterable_to_array.mjs":
/*!**************************************************************************!*\
  !*** ./node_modules/@swc/helpers/src/_unsupported_iterable_to_array.mjs ***!
  \**************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _unsupportedIterableToArray; }\n/* harmony export */ });\n/* harmony import */ var _array_like_to_array_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_array_like_to_array.mjs */ \"./node_modules/@swc/helpers/src/_array_like_to_array.mjs\");\n\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return (0,_array_like_to_array_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))\n    return (0,_array_like_to_array_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(o, minLen);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL3NyYy9fdW5zdXBwb3J0ZWRfaXRlcmFibGVfdG9fYXJyYXkubWpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTJEOztBQUU1QztBQUNmO0FBQ0Esb0NBQW9DLG9FQUFpQjtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsb0VBQWlCO0FBQzVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3djL2hlbHBlcnMvc3JjL191bnN1cHBvcnRlZF9pdGVyYWJsZV90b19hcnJheS5tanM/YWI1YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgX2FycmF5TGlrZVRvQXJyYXkgZnJvbSAnLi9fYXJyYXlfbGlrZV90b19hcnJheS5tanMnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobywgbWluTGVuKSB7XG4gIGlmICghbykgcmV0dXJuO1xuICBpZiAodHlwZW9mIG8gPT09IFwic3RyaW5nXCIpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pO1xuICB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7XG4gIGlmIChuID09PSBcIk9iamVjdFwiICYmIG8uY29uc3RydWN0b3IpIG4gPSBvLmNvbnN0cnVjdG9yLm5hbWU7XG4gIGlmIChuID09PSBcIk1hcFwiIHx8IG4gPT09IFwiU2V0XCIpIHJldHVybiBBcnJheS5mcm9tKG4pO1xuICBpZiAobiA9PT0gXCJBcmd1bWVudHNcIiB8fCAvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSlcbiAgICByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@swc/helpers/src/_unsupported_iterable_to_array.mjs\n"));

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/contrib/has-cors.js":
/*!*********************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/contrib/has-cors.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"hasCORS\": function() { return /* binding */ hasCORS; }\n/* harmony export */ });\n// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nconst hasCORS = value;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLWNsaWVudC9idWlsZC9lc20vY29udHJpYi9oYXMtY29ycy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLWNsaWVudC9idWlsZC9lc20vY29udHJpYi9oYXMtY29ycy5qcz9lMGEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGltcG9ydGVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL2NvbXBvbmVudC9oYXMtY29yc1xubGV0IHZhbHVlID0gZmFsc2U7XG50cnkge1xuICAgIHZhbHVlID0gdHlwZW9mIFhNTEh0dHBSZXF1ZXN0ICE9PSAndW5kZWZpbmVkJyAmJlxuICAgICAgICAnd2l0aENyZWRlbnRpYWxzJyBpbiBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcbn1cbmNhdGNoIChlcnIpIHtcbiAgICAvLyBpZiBYTUxIdHRwIHN1cHBvcnQgaXMgZGlzYWJsZWQgaW4gSUUgdGhlbiBpdCB3aWxsIHRocm93XG4gICAgLy8gd2hlbiB0cnlpbmcgdG8gY3JlYXRlXG59XG5leHBvcnQgY29uc3QgaGFzQ09SUyA9IHZhbHVlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/engine.io-client/build/esm/contrib/has-cors.js\n"));

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/contrib/parseqs.js":
/*!********************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/contrib/parseqs.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"decode\": function() { return /* binding */ decode; },\n/* harmony export */   \"encode\": function() { return /* binding */ encode; }\n/* harmony export */ });\n// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nfunction encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nfunction decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLWNsaWVudC9idWlsZC9lc20vY29udHJpYi9wYXJzZXFzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0Esc0NBQXNDLE9BQU87QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLWNsaWVudC9idWlsZC9lc20vY29udHJpYi9wYXJzZXFzLmpzP2EwNWQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0ZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vZ2Fsa24vcXVlcnlzdHJpbmdcbi8qKlxuICogQ29tcGlsZXMgYSBxdWVyeXN0cmluZ1xuICogUmV0dXJucyBzdHJpbmcgcmVwcmVzZW50YXRpb24gb2YgdGhlIG9iamVjdFxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fVxuICogQGFwaSBwcml2YXRlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGUob2JqKSB7XG4gICAgbGV0IHN0ciA9ICcnO1xuICAgIGZvciAobGV0IGkgaW4gb2JqKSB7XG4gICAgICAgIGlmIChvYmouaGFzT3duUHJvcGVydHkoaSkpIHtcbiAgICAgICAgICAgIGlmIChzdHIubGVuZ3RoKVxuICAgICAgICAgICAgICAgIHN0ciArPSAnJic7XG4gICAgICAgICAgICBzdHIgKz0gZW5jb2RlVVJJQ29tcG9uZW50KGkpICsgJz0nICsgZW5jb2RlVVJJQ29tcG9uZW50KG9ialtpXSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHN0cjtcbn1cbi8qKlxuICogUGFyc2VzIGEgc2ltcGxlIHF1ZXJ5c3RyaW5nIGludG8gYW4gb2JqZWN0XG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHFzXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZShxcykge1xuICAgIGxldCBxcnkgPSB7fTtcbiAgICBsZXQgcGFpcnMgPSBxcy5zcGxpdCgnJicpO1xuICAgIGZvciAobGV0IGkgPSAwLCBsID0gcGFpcnMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgIGxldCBwYWlyID0gcGFpcnNbaV0uc3BsaXQoJz0nKTtcbiAgICAgICAgcXJ5W2RlY29kZVVSSUNvbXBvbmVudChwYWlyWzBdKV0gPSBkZWNvZGVVUklDb21wb25lbnQocGFpclsxXSk7XG4gICAgfVxuICAgIHJldHVybiBxcnk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/engine.io-client/build/esm/contrib/parseqs.js\n"));

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/contrib/parseuri.js":
/*!*********************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/contrib/parseuri.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"parse\": function() { return /* binding */ parse; }\n/* harmony export */ });\n// imported from https://github.com/galkn/parseuri\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nfunction parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLWNsaWVudC9idWlsZC9lc20vY29udHJpYi9wYXJzZXVyaS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyR0FBMkcsSUFBSSxHQUFHLElBQUksU0FBUyxJQUFJO0FBQ25JO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLHdFQUF3RTtBQUN4RTtBQUNBLHdDQUF3QztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0VBQXdFO0FBQ3hFLGtGQUFrRjtBQUNsRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixJQUFJO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLWNsaWVudC9idWlsZC9lc20vY29udHJpYi9wYXJzZXVyaS5qcz9mZmNmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGltcG9ydGVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL2dhbGtuL3BhcnNldXJpXG4vKipcbiAqIFBhcnNlcyBhbiBVUklcbiAqXG4gKiBAYXV0aG9yIFN0ZXZlbiBMZXZpdGhhbiA8c3RldmVubGV2aXRoYW4uY29tPiAoTUlUIGxpY2Vuc2UpXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuY29uc3QgcmUgPSAvXig/Oig/IVteOkBdKzpbXjpAXFwvXSpAKShodHRwfGh0dHBzfHdzfHdzcyk6XFwvXFwvKT8oKD86KChbXjpAXSopKD86OihbXjpAXSopKT8pP0ApPygoPzpbYS1mMC05XXswLDR9Oil7Miw3fVthLWYwLTldezAsNH18W146XFwvPyNdKikoPzo6KFxcZCopKT8pKCgoXFwvKD86W14/I10oPyFbXj8jXFwvXSpcXC5bXj8jXFwvLl0rKD86Wz8jXXwkKSkpKlxcLz8pPyhbXj8jXFwvXSopKSg/OlxcPyhbXiNdKikpPyg/OiMoLiopKT8pLztcbmNvbnN0IHBhcnRzID0gW1xuICAgICdzb3VyY2UnLCAncHJvdG9jb2wnLCAnYXV0aG9yaXR5JywgJ3VzZXJJbmZvJywgJ3VzZXInLCAncGFzc3dvcmQnLCAnaG9zdCcsICdwb3J0JywgJ3JlbGF0aXZlJywgJ3BhdGgnLCAnZGlyZWN0b3J5JywgJ2ZpbGUnLCAncXVlcnknLCAnYW5jaG9yJ1xuXTtcbmV4cG9ydCBmdW5jdGlvbiBwYXJzZShzdHIpIHtcbiAgICBjb25zdCBzcmMgPSBzdHIsIGIgPSBzdHIuaW5kZXhPZignWycpLCBlID0gc3RyLmluZGV4T2YoJ10nKTtcbiAgICBpZiAoYiAhPSAtMSAmJiBlICE9IC0xKSB7XG4gICAgICAgIHN0ciA9IHN0ci5zdWJzdHJpbmcoMCwgYikgKyBzdHIuc3Vic3RyaW5nKGIsIGUpLnJlcGxhY2UoLzovZywgJzsnKSArIHN0ci5zdWJzdHJpbmcoZSwgc3RyLmxlbmd0aCk7XG4gICAgfVxuICAgIGxldCBtID0gcmUuZXhlYyhzdHIgfHwgJycpLCB1cmkgPSB7fSwgaSA9IDE0O1xuICAgIHdoaWxlIChpLS0pIHtcbiAgICAgICAgdXJpW3BhcnRzW2ldXSA9IG1baV0gfHwgJyc7XG4gICAgfVxuICAgIGlmIChiICE9IC0xICYmIGUgIT0gLTEpIHtcbiAgICAgICAgdXJpLnNvdXJjZSA9IHNyYztcbiAgICAgICAgdXJpLmhvc3QgPSB1cmkuaG9zdC5zdWJzdHJpbmcoMSwgdXJpLmhvc3QubGVuZ3RoIC0gMSkucmVwbGFjZSgvOy9nLCAnOicpO1xuICAgICAgICB1cmkuYXV0aG9yaXR5ID0gdXJpLmF1dGhvcml0eS5yZXBsYWNlKCdbJywgJycpLnJlcGxhY2UoJ10nLCAnJykucmVwbGFjZSgvOy9nLCAnOicpO1xuICAgICAgICB1cmkuaXB2NnVyaSA9IHRydWU7XG4gICAgfVxuICAgIHVyaS5wYXRoTmFtZXMgPSBwYXRoTmFtZXModXJpLCB1cmlbJ3BhdGgnXSk7XG4gICAgdXJpLnF1ZXJ5S2V5ID0gcXVlcnlLZXkodXJpLCB1cmlbJ3F1ZXJ5J10pO1xuICAgIHJldHVybiB1cmk7XG59XG5mdW5jdGlvbiBwYXRoTmFtZXMob2JqLCBwYXRoKSB7XG4gICAgY29uc3QgcmVneCA9IC9cXC97Miw5fS9nLCBuYW1lcyA9IHBhdGgucmVwbGFjZShyZWd4LCBcIi9cIikuc3BsaXQoXCIvXCIpO1xuICAgIGlmIChwYXRoLnN1YnN0cigwLCAxKSA9PSAnLycgfHwgcGF0aC5sZW5ndGggPT09IDApIHtcbiAgICAgICAgbmFtZXMuc3BsaWNlKDAsIDEpO1xuICAgIH1cbiAgICBpZiAocGF0aC5zdWJzdHIocGF0aC5sZW5ndGggLSAxLCAxKSA9PSAnLycpIHtcbiAgICAgICAgbmFtZXMuc3BsaWNlKG5hbWVzLmxlbmd0aCAtIDEsIDEpO1xuICAgIH1cbiAgICByZXR1cm4gbmFtZXM7XG59XG5mdW5jdGlvbiBxdWVyeUtleSh1cmksIHF1ZXJ5KSB7XG4gICAgY29uc3QgZGF0YSA9IHt9O1xuICAgIHF1ZXJ5LnJlcGxhY2UoLyg/Ol58JikoW14mPV0qKT0/KFteJl0qKS9nLCBmdW5jdGlvbiAoJDAsICQxLCAkMikge1xuICAgICAgICBpZiAoJDEpIHtcbiAgICAgICAgICAgIGRhdGFbJDFdID0gJDI7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gZGF0YTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/engine.io-client/build/esm/contrib/parseuri.js\n"));

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/contrib/yeast.js":
/*!******************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/contrib/yeast.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"decode\": function() { return /* binding */ decode; },\n/* harmony export */   \"encode\": function() { return /* binding */ encode; },\n/* harmony export */   \"yeast\": function() { return /* binding */ yeast; }\n/* harmony export */ });\n// imported from https://github.com/unshiftio/yeast\n\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLWNsaWVudC9idWlsZC9lc20vY29udHJpYi95ZWFzdC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNPO0FBQ1A7QUFDQSxnQkFBZ0IsZ0JBQWdCO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPLFlBQVk7QUFDbkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2VuZ2luZS5pby1jbGllbnQvYnVpbGQvZXNtL2NvbnRyaWIveWVhc3QuanM/OGVjNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnRlZCBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS91bnNoaWZ0aW8veWVhc3Rcbid1c2Ugc3RyaWN0JztcbmNvbnN0IGFscGhhYmV0ID0gJzAxMjM0NTY3ODlBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6LV8nLnNwbGl0KCcnKSwgbGVuZ3RoID0gNjQsIG1hcCA9IHt9O1xubGV0IHNlZWQgPSAwLCBpID0gMCwgcHJldjtcbi8qKlxuICogUmV0dXJuIGEgc3RyaW5nIHJlcHJlc2VudGluZyB0aGUgc3BlY2lmaWVkIG51bWJlci5cbiAqXG4gKiBAcGFyYW0ge051bWJlcn0gbnVtIFRoZSBudW1iZXIgdG8gY29udmVydC5cbiAqIEByZXR1cm5zIHtTdHJpbmd9IFRoZSBzdHJpbmcgcmVwcmVzZW50YXRpb24gb2YgdGhlIG51bWJlci5cbiAqIEBhcGkgcHVibGljXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGUobnVtKSB7XG4gICAgbGV0IGVuY29kZWQgPSAnJztcbiAgICBkbyB7XG4gICAgICAgIGVuY29kZWQgPSBhbHBoYWJldFtudW0gJSBsZW5ndGhdICsgZW5jb2RlZDtcbiAgICAgICAgbnVtID0gTWF0aC5mbG9vcihudW0gLyBsZW5ndGgpO1xuICAgIH0gd2hpbGUgKG51bSA+IDApO1xuICAgIHJldHVybiBlbmNvZGVkO1xufVxuLyoqXG4gKiBSZXR1cm4gdGhlIGludGVnZXIgdmFsdWUgc3BlY2lmaWVkIGJ5IHRoZSBnaXZlbiBzdHJpbmcuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHN0ciBUaGUgc3RyaW5nIHRvIGNvbnZlcnQuXG4gKiBAcmV0dXJucyB7TnVtYmVyfSBUaGUgaW50ZWdlciB2YWx1ZSByZXByZXNlbnRlZCBieSB0aGUgc3RyaW5nLlxuICogQGFwaSBwdWJsaWNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZShzdHIpIHtcbiAgICBsZXQgZGVjb2RlZCA9IDA7XG4gICAgZm9yIChpID0gMDsgaSA8IHN0ci5sZW5ndGg7IGkrKykge1xuICAgICAgICBkZWNvZGVkID0gZGVjb2RlZCAqIGxlbmd0aCArIG1hcFtzdHIuY2hhckF0KGkpXTtcbiAgICB9XG4gICAgcmV0dXJuIGRlY29kZWQ7XG59XG4vKipcbiAqIFllYXN0OiBBIHRpbnkgZ3Jvd2luZyBpZCBnZW5lcmF0b3IuXG4gKlxuICogQHJldHVybnMge1N0cmluZ30gQSB1bmlxdWUgaWQuXG4gKiBAYXBpIHB1YmxpY1xuICovXG5leHBvcnQgZnVuY3Rpb24geWVhc3QoKSB7XG4gICAgY29uc3Qgbm93ID0gZW5jb2RlKCtuZXcgRGF0ZSgpKTtcbiAgICBpZiAobm93ICE9PSBwcmV2KVxuICAgICAgICByZXR1cm4gc2VlZCA9IDAsIHByZXYgPSBub3c7XG4gICAgcmV0dXJuIG5vdyArICcuJyArIGVuY29kZShzZWVkKyspO1xufVxuLy9cbi8vIE1hcCBlYWNoIGNoYXJhY3RlciB0byBpdHMgaW5kZXguXG4vL1xuZm9yICg7IGkgPCBsZW5ndGg7IGkrKylcbiAgICBtYXBbYWxwaGFiZXRbaV1dID0gaTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/engine.io-client/build/esm/contrib/yeast.js\n"));

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/globalThis.browser.js":
/*!***********************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/globalThis.browser.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"globalThisShim\": function() { return /* binding */ globalThisShim; }\n/* harmony export */ });\nconst globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLWNsaWVudC9idWlsZC9lc20vZ2xvYmFsVGhpcy5icm93c2VyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2VuZ2luZS5pby1jbGllbnQvYnVpbGQvZXNtL2dsb2JhbFRoaXMuYnJvd3Nlci5qcz9lODM3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBnbG9iYWxUaGlzU2hpbSA9ICgoKSA9PiB7XG4gICAgaWYgKHR5cGVvZiBzZWxmICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIHJldHVybiBzZWxmO1xuICAgIH1cbiAgICBlbHNlIGlmICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIHJldHVybiB3aW5kb3c7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpO1xuICAgIH1cbn0pKCk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/engine.io-client/build/esm/globalThis.browser.js\n"));

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Socket\": function() { return /* reexport safe */ _socket_js__WEBPACK_IMPORTED_MODULE_0__.Socket; },\n/* harmony export */   \"Transport\": function() { return /* reexport safe */ _transport_js__WEBPACK_IMPORTED_MODULE_1__.Transport; },\n/* harmony export */   \"installTimerFunctions\": function() { return /* reexport safe */ _util_js__WEBPACK_IMPORTED_MODULE_3__.installTimerFunctions; },\n/* harmony export */   \"parse\": function() { return /* reexport safe */ _contrib_parseuri_js__WEBPACK_IMPORTED_MODULE_4__.parse; },\n/* harmony export */   \"protocol\": function() { return /* binding */ protocol; },\n/* harmony export */   \"transports\": function() { return /* reexport safe */ _transports_index_js__WEBPACK_IMPORTED_MODULE_2__.transports; }\n/* harmony export */ });\n/* harmony import */ var _socket_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./socket.js */ \"./node_modules/engine.io-client/build/esm/socket.js\");\n/* harmony import */ var _transport_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transport.js */ \"./node_modules/engine.io-client/build/esm/transport.js\");\n/* harmony import */ var _transports_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./transports/index.js */ \"./node_modules/engine.io-client/build/esm/transports/index.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util.js */ \"./node_modules/engine.io-client/build/esm/util.js\");\n/* harmony import */ var _contrib_parseuri_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./contrib/parseuri.js */ \"./node_modules/engine.io-client/build/esm/contrib/parseuri.js\");\n\n\nconst protocol = _socket_js__WEBPACK_IMPORTED_MODULE_0__.Socket.protocol;\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLWNsaWVudC9idWlsZC9lc20vaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBcUM7QUFDbkI7QUFDWCxpQkFBaUIsdURBQWU7QUFDSTtBQUNRO0FBQ0Q7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLWNsaWVudC9idWlsZC9lc20vaW5kZXguanM/OTViYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTb2NrZXQgfSBmcm9tIFwiLi9zb2NrZXQuanNcIjtcbmV4cG9ydCB7IFNvY2tldCB9O1xuZXhwb3J0IGNvbnN0IHByb3RvY29sID0gU29ja2V0LnByb3RvY29sO1xuZXhwb3J0IHsgVHJhbnNwb3J0IH0gZnJvbSBcIi4vdHJhbnNwb3J0LmpzXCI7XG5leHBvcnQgeyB0cmFuc3BvcnRzIH0gZnJvbSBcIi4vdHJhbnNwb3J0cy9pbmRleC5qc1wiO1xuZXhwb3J0IHsgaW5zdGFsbFRpbWVyRnVuY3Rpb25zIH0gZnJvbSBcIi4vdXRpbC5qc1wiO1xuZXhwb3J0IHsgcGFyc2UgfSBmcm9tIFwiLi9jb250cmliL3BhcnNldXJpLmpzXCI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/engine.io-client/build/esm/index.js\n"));

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/socket.js":
/*!***********************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/socket.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Socket\": function() { return /* binding */ Socket; }\n/* harmony export */ });\n/* harmony import */ var _transports_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transports/index.js */ \"./node_modules/engine.io-client/build/esm/transports/index.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util.js */ \"./node_modules/engine.io-client/build/esm/util.js\");\n/* harmony import */ var _contrib_parseqs_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./contrib/parseqs.js */ \"./node_modules/engine.io-client/build/esm/contrib/parseqs.js\");\n/* harmony import */ var _contrib_parseuri_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./contrib/parseuri.js */ \"./node_modules/engine.io-client/build/esm/contrib/parseuri.js\");\n/* harmony import */ var _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @socket.io/component-emitter */ \"./node_modules/@socket.io/component-emitter/index.mjs\");\n/* harmony import */ var engine_io_parser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! engine.io-parser */ \"./node_modules/engine.io-parser/build/esm/index.js\");\n\n\n\n\n\n\nclass Socket extends _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_4__.Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = (0,_contrib_parseuri_js__WEBPACK_IMPORTED_MODULE_3__.parse)(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = (0,_contrib_parseuri_js__WEBPACK_IMPORTED_MODULE_3__.parse)(opts.host).host;\n        }\n        (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.installTimerFunctions)(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = (0,_contrib_parseqs_js__WEBPACK_IMPORTED_MODULE_2__.decode)(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = engine_io_parser__WEBPACK_IMPORTED_MODULE_5__.protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new _transports_index_js__WEBPACK_IMPORTED_MODULE_0__.transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", reason => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.byteLength)(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = engine_io_parser__WEBPACK_IMPORTED_MODULE_5__.protocol;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/engine.io-client/build/esm/socket.js\n"));

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/transport.js":
/*!**************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/transport.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Transport\": function() { return /* binding */ Transport; }\n/* harmony export */ });\n/* harmony import */ var engine_io_parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! engine.io-parser */ \"./node_modules/engine.io-parser/build/esm/index.js\");\n/* harmony import */ var _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @socket.io/component-emitter */ \"./node_modules/@socket.io/component-emitter/index.mjs\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util.js */ \"./node_modules/engine.io-client/build/esm/util.js\");\n\n\n\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nclass Transport extends _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_1__.Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        (0,_util_js__WEBPACK_IMPORTED_MODULE_2__.installTimerFunctions)(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = (0,engine_io_parser__WEBPACK_IMPORTED_MODULE_0__.decodePacket)(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLWNsaWVudC9idWlsZC9lc20vdHJhbnNwb3J0LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBZ0Q7QUFDTztBQUNMO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyx3QkFBd0IsaUVBQU87QUFDdEM7QUFDQTtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLCtEQUFxQjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0E7QUFDQSxnQkFBZ0IsV0FBVztBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLE9BQU87QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QjtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsOERBQVk7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLWNsaWVudC9idWlsZC9lc20vdHJhbnNwb3J0LmpzP2ZmNTgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZGVjb2RlUGFja2V0IH0gZnJvbSBcImVuZ2luZS5pby1wYXJzZXJcIjtcbmltcG9ydCB7IEVtaXR0ZXIgfSBmcm9tIFwiQHNvY2tldC5pby9jb21wb25lbnQtZW1pdHRlclwiO1xuaW1wb3J0IHsgaW5zdGFsbFRpbWVyRnVuY3Rpb25zIH0gZnJvbSBcIi4vdXRpbC5qc1wiO1xuY2xhc3MgVHJhbnNwb3J0RXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IocmVhc29uLCBkZXNjcmlwdGlvbiwgY29udGV4dCkge1xuICAgICAgICBzdXBlcihyZWFzb24pO1xuICAgICAgICB0aGlzLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb247XG4gICAgICAgIHRoaXMuY29udGV4dCA9IGNvbnRleHQ7XG4gICAgICAgIHRoaXMudHlwZSA9IFwiVHJhbnNwb3J0RXJyb3JcIjtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgVHJhbnNwb3J0IGV4dGVuZHMgRW1pdHRlciB7XG4gICAgLyoqXG4gICAgICogVHJhbnNwb3J0IGFic3RyYWN0IGNvbnN0cnVjdG9yLlxuICAgICAqXG4gICAgICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMuXG4gICAgICogQGFwaSBwcml2YXRlXG4gICAgICovXG4gICAgY29uc3RydWN0b3Iob3B0cykge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLndyaXRhYmxlID0gZmFsc2U7XG4gICAgICAgIGluc3RhbGxUaW1lckZ1bmN0aW9ucyh0aGlzLCBvcHRzKTtcbiAgICAgICAgdGhpcy5vcHRzID0gb3B0cztcbiAgICAgICAgdGhpcy5xdWVyeSA9IG9wdHMucXVlcnk7XG4gICAgICAgIHRoaXMucmVhZHlTdGF0ZSA9IFwiXCI7XG4gICAgICAgIHRoaXMuc29ja2V0ID0gb3B0cy5zb2NrZXQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEVtaXRzIGFuIGVycm9yLlxuICAgICAqXG4gICAgICogQHBhcmFtIHtTdHJpbmd9IHJlYXNvblxuICAgICAqIEBwYXJhbSBkZXNjcmlwdGlvblxuICAgICAqIEBwYXJhbSBjb250ZXh0IC0gdGhlIGVycm9yIGNvbnRleHRcbiAgICAgKiBAcmV0dXJuIHtUcmFuc3BvcnR9IGZvciBjaGFpbmluZ1xuICAgICAqIEBhcGkgcHJvdGVjdGVkXG4gICAgICovXG4gICAgb25FcnJvcihyZWFzb24sIGRlc2NyaXB0aW9uLCBjb250ZXh0KSB7XG4gICAgICAgIHN1cGVyLmVtaXRSZXNlcnZlZChcImVycm9yXCIsIG5ldyBUcmFuc3BvcnRFcnJvcihyZWFzb24sIGRlc2NyaXB0aW9uLCBjb250ZXh0KSk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBPcGVucyB0aGUgdHJhbnNwb3J0LlxuICAgICAqXG4gICAgICogQGFwaSBwdWJsaWNcbiAgICAgKi9cbiAgICBvcGVuKCkge1xuICAgICAgICBpZiAoXCJjbG9zZWRcIiA9PT0gdGhpcy5yZWFkeVN0YXRlIHx8IFwiXCIgPT09IHRoaXMucmVhZHlTdGF0ZSkge1xuICAgICAgICAgICAgdGhpcy5yZWFkeVN0YXRlID0gXCJvcGVuaW5nXCI7XG4gICAgICAgICAgICB0aGlzLmRvT3BlbigpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDbG9zZXMgdGhlIHRyYW5zcG9ydC5cbiAgICAgKlxuICAgICAqIEBhcGkgcHVibGljXG4gICAgICovXG4gICAgY2xvc2UoKSB7XG4gICAgICAgIGlmIChcIm9wZW5pbmdcIiA9PT0gdGhpcy5yZWFkeVN0YXRlIHx8IFwib3BlblwiID09PSB0aGlzLnJlYWR5U3RhdGUpIHtcbiAgICAgICAgICAgIHRoaXMuZG9DbG9zZSgpO1xuICAgICAgICAgICAgdGhpcy5vbkNsb3NlKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNlbmRzIG11bHRpcGxlIHBhY2tldHMuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge0FycmF5fSBwYWNrZXRzXG4gICAgICogQGFwaSBwdWJsaWNcbiAgICAgKi9cbiAgICBzZW5kKHBhY2tldHMpIHtcbiAgICAgICAgaWYgKFwib3BlblwiID09PSB0aGlzLnJlYWR5U3RhdGUpIHtcbiAgICAgICAgICAgIHRoaXMud3JpdGUocGFja2V0cyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAvLyB0aGlzIG1pZ2h0IGhhcHBlbiBpZiB0aGUgdHJhbnNwb3J0IHdhcyBzaWxlbnRseSBjbG9zZWQgaW4gdGhlIGJlZm9yZXVubG9hZCBldmVudCBoYW5kbGVyXG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogQ2FsbGVkIHVwb24gb3BlblxuICAgICAqXG4gICAgICogQGFwaSBwcm90ZWN0ZWRcbiAgICAgKi9cbiAgICBvbk9wZW4oKSB7XG4gICAgICAgIHRoaXMucmVhZHlTdGF0ZSA9IFwib3BlblwiO1xuICAgICAgICB0aGlzLndyaXRhYmxlID0gdHJ1ZTtcbiAgICAgICAgc3VwZXIuZW1pdFJlc2VydmVkKFwib3BlblwiKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ2FsbGVkIHdpdGggZGF0YS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7U3RyaW5nfSBkYXRhXG4gICAgICogQGFwaSBwcm90ZWN0ZWRcbiAgICAgKi9cbiAgICBvbkRhdGEoZGF0YSkge1xuICAgICAgICBjb25zdCBwYWNrZXQgPSBkZWNvZGVQYWNrZXQoZGF0YSwgdGhpcy5zb2NrZXQuYmluYXJ5VHlwZSk7XG4gICAgICAgIHRoaXMub25QYWNrZXQocGFja2V0KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ2FsbGVkIHdpdGggYSBkZWNvZGVkIHBhY2tldC5cbiAgICAgKlxuICAgICAqIEBhcGkgcHJvdGVjdGVkXG4gICAgICovXG4gICAgb25QYWNrZXQocGFja2V0KSB7XG4gICAgICAgIHN1cGVyLmVtaXRSZXNlcnZlZChcInBhY2tldFwiLCBwYWNrZXQpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDYWxsZWQgdXBvbiBjbG9zZS5cbiAgICAgKlxuICAgICAqIEBhcGkgcHJvdGVjdGVkXG4gICAgICovXG4gICAgb25DbG9zZShkZXRhaWxzKSB7XG4gICAgICAgIHRoaXMucmVhZHlTdGF0ZSA9IFwiY2xvc2VkXCI7XG4gICAgICAgIHN1cGVyLmVtaXRSZXNlcnZlZChcImNsb3NlXCIsIGRldGFpbHMpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/engine.io-client/build/esm/transport.js\n"));

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/transports/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/transports/index.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"transports\": function() { return /* binding */ transports; }\n/* harmony export */ });\n/* harmony import */ var _polling_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./polling.js */ \"./node_modules/engine.io-client/build/esm/transports/polling.js\");\n/* harmony import */ var _websocket_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./websocket.js */ \"./node_modules/engine.io-client/build/esm/transports/websocket.js\");\n\n\nconst transports = {\n    websocket: _websocket_js__WEBPACK_IMPORTED_MODULE_1__.WS,\n    polling: _polling_js__WEBPACK_IMPORTED_MODULE_0__.Polling\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLWNsaWVudC9idWlsZC9lc20vdHJhbnNwb3J0cy9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBdUM7QUFDSDtBQUM3QjtBQUNQLGVBQWUsNkNBQUU7QUFDakIsYUFBYSxnREFBTztBQUNwQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLWNsaWVudC9idWlsZC9lc20vdHJhbnNwb3J0cy9pbmRleC5qcz83OGQyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBvbGxpbmcgfSBmcm9tIFwiLi9wb2xsaW5nLmpzXCI7XG5pbXBvcnQgeyBXUyB9IGZyb20gXCIuL3dlYnNvY2tldC5qc1wiO1xuZXhwb3J0IGNvbnN0IHRyYW5zcG9ydHMgPSB7XG4gICAgd2Vic29ja2V0OiBXUyxcbiAgICBwb2xsaW5nOiBQb2xsaW5nXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/engine.io-client/build/esm/transports/index.js\n"));

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/transports/polling.js":
/*!***********************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/transports/polling.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Polling\": function() { return /* binding */ Polling; },\n/* harmony export */   \"Request\": function() { return /* binding */ Request; }\n/* harmony export */ });\n/* harmony import */ var _transport_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../transport.js */ \"./node_modules/engine.io-client/build/esm/transport.js\");\n/* harmony import */ var _contrib_yeast_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../contrib/yeast.js */ \"./node_modules/engine.io-client/build/esm/contrib/yeast.js\");\n/* harmony import */ var _contrib_parseqs_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../contrib/parseqs.js */ \"./node_modules/engine.io-client/build/esm/contrib/parseqs.js\");\n/* harmony import */ var engine_io_parser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! engine.io-parser */ \"./node_modules/engine.io-parser/build/esm/index.js\");\n/* harmony import */ var _xmlhttprequest_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./xmlhttprequest.js */ \"./node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js\");\n/* harmony import */ var _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @socket.io/component-emitter */ \"./node_modules/@socket.io/component-emitter/index.mjs\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util.js */ \"./node_modules/engine.io-client/build/esm/util.js\");\n/* harmony import */ var _globalThis_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../globalThis.js */ \"./node_modules/engine.io-client/build/esm/globalThis.browser.js\");\n\n\n\n\n\n\n\n\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new _xmlhttprequest_js__WEBPACK_IMPORTED_MODULE_4__.XHR({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nclass Polling extends _transport_js__WEBPACK_IMPORTED_MODULE_0__.Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        (0,engine_io_parser__WEBPACK_IMPORTED_MODULE_3__.decodePayload)(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        (0,engine_io_parser__WEBPACK_IMPORTED_MODULE_3__.encodePayload)(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = (0,_contrib_yeast_js__WEBPACK_IMPORTED_MODULE_1__.yeast)();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = (0,_contrib_parseqs_js__WEBPACK_IMPORTED_MODULE_2__.encode)(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nclass Request extends _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_5__.Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        (0,_util_js__WEBPACK_IMPORTED_MODULE_6__.installTimerFunctions)(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = (0,_util_js__WEBPACK_IMPORTED_MODULE_6__.pick)(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new _xmlhttprequest_js__WEBPACK_IMPORTED_MODULE_4__.XHR(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in _globalThis_js__WEBPACK_IMPORTED_MODULE_7__.globalThisShim ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/engine.io-client/build/esm/transports/polling.js\n"));

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"WebSocket\": function() { return /* binding */ WebSocket; },\n/* harmony export */   \"defaultBinaryType\": function() { return /* binding */ defaultBinaryType; },\n/* harmony export */   \"nextTick\": function() { return /* binding */ nextTick; },\n/* harmony export */   \"usingBrowserWebSocket\": function() { return /* binding */ usingBrowserWebSocket; }\n/* harmony export */ });\n/* harmony import */ var _globalThis_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globalThis.js */ \"./node_modules/engine.io-client/build/esm/globalThis.browser.js\");\n\nconst nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nconst WebSocket = _globalThis_js__WEBPACK_IMPORTED_MODULE_0__.globalThisShim.WebSocket || _globalThis_js__WEBPACK_IMPORTED_MODULE_0__.globalThisShim.MozWebSocket;\nconst usingBrowserWebSocket = true;\nconst defaultBinaryType = \"arraybuffer\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLWNsaWVudC9idWlsZC9lc20vdHJhbnNwb3J0cy93ZWJzb2NrZXQtY29uc3RydWN0b3IuYnJvd3Nlci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFnRTtBQUN6RDtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNLGtCQUFrQixvRUFBb0IsSUFBSSx1RUFBdUI7QUFDakU7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLWNsaWVudC9idWlsZC9lc20vdHJhbnNwb3J0cy93ZWJzb2NrZXQtY29uc3RydWN0b3IuYnJvd3Nlci5qcz84YmZkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdsb2JhbFRoaXNTaGltIGFzIGdsb2JhbFRoaXMgfSBmcm9tIFwiLi4vZ2xvYmFsVGhpcy5qc1wiO1xuZXhwb3J0IGNvbnN0IG5leHRUaWNrID0gKCgpID0+IHtcbiAgICBjb25zdCBpc1Byb21pc2VBdmFpbGFibGUgPSB0eXBlb2YgUHJvbWlzZSA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBQcm9taXNlLnJlc29sdmUgPT09IFwiZnVuY3Rpb25cIjtcbiAgICBpZiAoaXNQcm9taXNlQXZhaWxhYmxlKSB7XG4gICAgICAgIHJldHVybiBjYiA9PiBQcm9taXNlLnJlc29sdmUoKS50aGVuKGNiKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiAoY2IsIHNldFRpbWVvdXRGbikgPT4gc2V0VGltZW91dEZuKGNiLCAwKTtcbiAgICB9XG59KSgpO1xuZXhwb3J0IGNvbnN0IFdlYlNvY2tldCA9IGdsb2JhbFRoaXMuV2ViU29ja2V0IHx8IGdsb2JhbFRoaXMuTW96V2ViU29ja2V0O1xuZXhwb3J0IGNvbnN0IHVzaW5nQnJvd3NlcldlYlNvY2tldCA9IHRydWU7XG5leHBvcnQgY29uc3QgZGVmYXVsdEJpbmFyeVR5cGUgPSBcImFycmF5YnVmZmVyXCI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js\n"));

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/transports/websocket.js":
/*!*************************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/transports/websocket.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"WS\": function() { return /* binding */ WS; }\n/* harmony export */ });\n/* harmony import */ var _transport_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../transport.js */ \"./node_modules/engine.io-client/build/esm/transport.js\");\n/* harmony import */ var _contrib_parseqs_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../contrib/parseqs.js */ \"./node_modules/engine.io-client/build/esm/contrib/parseqs.js\");\n/* harmony import */ var _contrib_yeast_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../contrib/yeast.js */ \"./node_modules/engine.io-client/build/esm/contrib/yeast.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util.js */ \"./node_modules/engine.io-client/build/esm/util.js\");\n/* harmony import */ var _websocket_constructor_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./websocket-constructor.js */ \"./node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js\");\n/* harmony import */ var engine_io_parser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! engine.io-parser */ \"./node_modules/engine.io-parser/build/esm/index.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/next/dist/compiled/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n\n\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nclass WS extends _transport_js__WEBPACK_IMPORTED_MODULE_0__.Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : (0,_util_js__WEBPACK_IMPORTED_MODULE_3__.pick)(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                _websocket_constructor_js__WEBPACK_IMPORTED_MODULE_4__.usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new _websocket_constructor_js__WEBPACK_IMPORTED_MODULE_4__.WebSocket(uri, protocols)\n                        : new _websocket_constructor_js__WEBPACK_IMPORTED_MODULE_4__.WebSocket(uri)\n                    : new _websocket_constructor_js__WEBPACK_IMPORTED_MODULE_4__.WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || _websocket_constructor_js__WEBPACK_IMPORTED_MODULE_4__.defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = closeEvent => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent\n        });\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            (0,engine_io_parser__WEBPACK_IMPORTED_MODULE_5__.encodePacket)(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!_websocket_constructor_js__WEBPACK_IMPORTED_MODULE_4__.usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (_websocket_constructor_js__WEBPACK_IMPORTED_MODULE_4__.usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    (0,_websocket_constructor_js__WEBPACK_IMPORTED_MODULE_4__.nextTick)(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = (0,_contrib_yeast_js__WEBPACK_IMPORTED_MODULE_2__.yeast)();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = (0,_contrib_parseqs_js__WEBPACK_IMPORTED_MODULE_1__.encode)(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return !!_websocket_constructor_js__WEBPACK_IMPORTED_MODULE_4__.WebSocket;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLWNsaWVudC9idWlsZC9lc20vdHJhbnNwb3J0cy93ZWJzb2NrZXQuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBNEM7QUFDRztBQUNIO0FBQ1Y7QUFDeUU7QUFDM0Q7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDTyxpQkFBaUIsb0RBQVM7QUFDakM7QUFDQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLDhDQUFJO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsNEVBQXFCO0FBQ3JDO0FBQ0EsOEJBQThCLGdFQUFTO0FBQ3ZDLDhCQUE4QixnRUFBUztBQUN2QywwQkFBMEIsZ0VBQVM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQsd0VBQWlCO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxPQUFPO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixvQkFBb0I7QUFDNUM7QUFDQTtBQUNBLFlBQVksOERBQVk7QUFDeEI7QUFDQTtBQUNBLHFCQUFxQiw0RUFBcUI7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1ELE1BQU07QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLDRFQUFxQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsbUVBQVE7QUFDNUI7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsd0RBQUs7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QiwyREFBTTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLFNBQVM7QUFDekI7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLGdFQUFTO0FBQzFCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2VuZ2luZS5pby1jbGllbnQvYnVpbGQvZXNtL3RyYW5zcG9ydHMvd2Vic29ja2V0LmpzP2Y3M2QiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVHJhbnNwb3J0IH0gZnJvbSBcIi4uL3RyYW5zcG9ydC5qc1wiO1xuaW1wb3J0IHsgZW5jb2RlIH0gZnJvbSBcIi4uL2NvbnRyaWIvcGFyc2Vxcy5qc1wiO1xuaW1wb3J0IHsgeWVhc3QgfSBmcm9tIFwiLi4vY29udHJpYi95ZWFzdC5qc1wiO1xuaW1wb3J0IHsgcGljayB9IGZyb20gXCIuLi91dGlsLmpzXCI7XG5pbXBvcnQgeyBkZWZhdWx0QmluYXJ5VHlwZSwgbmV4dFRpY2ssIHVzaW5nQnJvd3NlcldlYlNvY2tldCwgV2ViU29ja2V0IH0gZnJvbSBcIi4vd2Vic29ja2V0LWNvbnN0cnVjdG9yLmpzXCI7XG5pbXBvcnQgeyBlbmNvZGVQYWNrZXQgfSBmcm9tIFwiZW5naW5lLmlvLXBhcnNlclwiO1xuLy8gZGV0ZWN0IFJlYWN0TmF0aXZlIGVudmlyb25tZW50XG5jb25zdCBpc1JlYWN0TmF0aXZlID0gdHlwZW9mIG5hdmlnYXRvciAhPT0gXCJ1bmRlZmluZWRcIiAmJlxuICAgIHR5cGVvZiBuYXZpZ2F0b3IucHJvZHVjdCA9PT0gXCJzdHJpbmdcIiAmJlxuICAgIG5hdmlnYXRvci5wcm9kdWN0LnRvTG93ZXJDYXNlKCkgPT09IFwicmVhY3RuYXRpdmVcIjtcbmV4cG9ydCBjbGFzcyBXUyBleHRlbmRzIFRyYW5zcG9ydCB7XG4gICAgLyoqXG4gICAgICogV2ViU29ja2V0IHRyYW5zcG9ydCBjb25zdHJ1Y3Rvci5cbiAgICAgKlxuICAgICAqIEBhcGkge09iamVjdH0gY29ubmVjdGlvbiBvcHRpb25zXG4gICAgICogQGFwaSBwdWJsaWNcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihvcHRzKSB7XG4gICAgICAgIHN1cGVyKG9wdHMpO1xuICAgICAgICB0aGlzLnN1cHBvcnRzQmluYXJ5ID0gIW9wdHMuZm9yY2VCYXNlNjQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRyYW5zcG9ydCBuYW1lLlxuICAgICAqXG4gICAgICogQGFwaSBwdWJsaWNcbiAgICAgKi9cbiAgICBnZXQgbmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIFwid2Vic29ja2V0XCI7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIE9wZW5zIHNvY2tldC5cbiAgICAgKlxuICAgICAqIEBhcGkgcHJpdmF0ZVxuICAgICAqL1xuICAgIGRvT3BlbigpIHtcbiAgICAgICAgaWYgKCF0aGlzLmNoZWNrKCkpIHtcbiAgICAgICAgICAgIC8vIGxldCBwcm9iZSB0aW1lb3V0XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgdXJpID0gdGhpcy51cmkoKTtcbiAgICAgICAgY29uc3QgcHJvdG9jb2xzID0gdGhpcy5vcHRzLnByb3RvY29scztcbiAgICAgICAgLy8gUmVhY3QgTmF0aXZlIG9ubHkgc3VwcG9ydHMgdGhlICdoZWFkZXJzJyBvcHRpb24sIGFuZCB3aWxsIHByaW50IGEgd2FybmluZyBpZiBhbnl0aGluZyBlbHNlIGlzIHBhc3NlZFxuICAgICAgICBjb25zdCBvcHRzID0gaXNSZWFjdE5hdGl2ZVxuICAgICAgICAgICAgPyB7fVxuICAgICAgICAgICAgOiBwaWNrKHRoaXMub3B0cywgXCJhZ2VudFwiLCBcInBlck1lc3NhZ2VEZWZsYXRlXCIsIFwicGZ4XCIsIFwia2V5XCIsIFwicGFzc3BocmFzZVwiLCBcImNlcnRcIiwgXCJjYVwiLCBcImNpcGhlcnNcIiwgXCJyZWplY3RVbmF1dGhvcml6ZWRcIiwgXCJsb2NhbEFkZHJlc3NcIiwgXCJwcm90b2NvbFZlcnNpb25cIiwgXCJvcmlnaW5cIiwgXCJtYXhQYXlsb2FkXCIsIFwiZmFtaWx5XCIsIFwiY2hlY2tTZXJ2ZXJJZGVudGl0eVwiKTtcbiAgICAgICAgaWYgKHRoaXMub3B0cy5leHRyYUhlYWRlcnMpIHtcbiAgICAgICAgICAgIG9wdHMuaGVhZGVycyA9IHRoaXMub3B0cy5leHRyYUhlYWRlcnM7XG4gICAgICAgIH1cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHRoaXMud3MgPVxuICAgICAgICAgICAgICAgIHVzaW5nQnJvd3NlcldlYlNvY2tldCAmJiAhaXNSZWFjdE5hdGl2ZVxuICAgICAgICAgICAgICAgICAgICA/IHByb3RvY29sc1xuICAgICAgICAgICAgICAgICAgICAgICAgPyBuZXcgV2ViU29ja2V0KHVyaSwgcHJvdG9jb2xzKVxuICAgICAgICAgICAgICAgICAgICAgICAgOiBuZXcgV2ViU29ja2V0KHVyaSlcbiAgICAgICAgICAgICAgICAgICAgOiBuZXcgV2ViU29ja2V0KHVyaSwgcHJvdG9jb2xzLCBvcHRzKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5lbWl0UmVzZXJ2ZWQoXCJlcnJvclwiLCBlcnIpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMud3MuYmluYXJ5VHlwZSA9IHRoaXMuc29ja2V0LmJpbmFyeVR5cGUgfHwgZGVmYXVsdEJpbmFyeVR5cGU7XG4gICAgICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcnMoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQWRkcyBldmVudCBsaXN0ZW5lcnMgdG8gdGhlIHNvY2tldFxuICAgICAqXG4gICAgICogQGFwaSBwcml2YXRlXG4gICAgICovXG4gICAgYWRkRXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgICAgIHRoaXMud3Mub25vcGVuID0gKCkgPT4ge1xuICAgICAgICAgICAgaWYgKHRoaXMub3B0cy5hdXRvVW5yZWYpIHtcbiAgICAgICAgICAgICAgICB0aGlzLndzLl9zb2NrZXQudW5yZWYoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMub25PcGVuKCk7XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMud3Mub25jbG9zZSA9IGNsb3NlRXZlbnQgPT4gdGhpcy5vbkNsb3NlKHtcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIndlYnNvY2tldCBjb25uZWN0aW9uIGNsb3NlZFwiLFxuICAgICAgICAgICAgY29udGV4dDogY2xvc2VFdmVudFxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy53cy5vbm1lc3NhZ2UgPSBldiA9PiB0aGlzLm9uRGF0YShldi5kYXRhKTtcbiAgICAgICAgdGhpcy53cy5vbmVycm9yID0gZSA9PiB0aGlzLm9uRXJyb3IoXCJ3ZWJzb2NrZXQgZXJyb3JcIiwgZSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFdyaXRlcyBkYXRhIHRvIHNvY2tldC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IG9mIHBhY2tldHMuXG4gICAgICogQGFwaSBwcml2YXRlXG4gICAgICovXG4gICAgd3JpdGUocGFja2V0cykge1xuICAgICAgICB0aGlzLndyaXRhYmxlID0gZmFsc2U7XG4gICAgICAgIC8vIGVuY29kZVBhY2tldCBlZmZpY2llbnQgYXMgaXQgdXNlcyBXUyBmcmFtaW5nXG4gICAgICAgIC8vIG5vIG5lZWQgZm9yIGVuY29kZVBheWxvYWRcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwYWNrZXRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBjb25zdCBwYWNrZXQgPSBwYWNrZXRzW2ldO1xuICAgICAgICAgICAgY29uc3QgbGFzdFBhY2tldCA9IGkgPT09IHBhY2tldHMubGVuZ3RoIC0gMTtcbiAgICAgICAgICAgIGVuY29kZVBhY2tldChwYWNrZXQsIHRoaXMuc3VwcG9ydHNCaW5hcnksIGRhdGEgPT4ge1xuICAgICAgICAgICAgICAgIC8vIGFsd2F5cyBjcmVhdGUgYSBuZXcgb2JqZWN0IChHSC00MzcpXG4gICAgICAgICAgICAgICAgY29uc3Qgb3B0cyA9IHt9O1xuICAgICAgICAgICAgICAgIGlmICghdXNpbmdCcm93c2VyV2ViU29ja2V0KSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChwYWNrZXQub3B0aW9ucykge1xuICAgICAgICAgICAgICAgICAgICAgICAgb3B0cy5jb21wcmVzcyA9IHBhY2tldC5vcHRpb25zLmNvbXByZXNzO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLm9wdHMucGVyTWVzc2FnZURlZmxhdGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGxlbiA9IFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICAgICAgICAgICAgICAgICAgXCJzdHJpbmdcIiA9PT0gdHlwZW9mIGRhdGEgPyBCdWZmZXIuYnl0ZUxlbmd0aChkYXRhKSA6IGRhdGEubGVuZ3RoO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGxlbiA8IHRoaXMub3B0cy5wZXJNZXNzYWdlRGVmbGF0ZS50aHJlc2hvbGQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcHRzLmNvbXByZXNzID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gU29tZXRpbWVzIHRoZSB3ZWJzb2NrZXQgaGFzIGFscmVhZHkgYmVlbiBjbG9zZWQgYnV0IHRoZSBicm93c2VyIGRpZG4ndFxuICAgICAgICAgICAgICAgIC8vIGhhdmUgYSBjaGFuY2Ugb2YgaW5mb3JtaW5nIHVzIGFib3V0IGl0IHlldCwgaW4gdGhhdCBjYXNlIHNlbmQgd2lsbFxuICAgICAgICAgICAgICAgIC8vIHRocm93IGFuIGVycm9yXG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHVzaW5nQnJvd3NlcldlYlNvY2tldCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gVHlwZUVycm9yIGlzIHRocm93biB3aGVuIHBhc3NpbmcgdGhlIHNlY29uZCBhcmd1bWVudCBvbiBTYWZhcmlcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMud3Muc2VuZChkYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMud3Muc2VuZChkYXRhLCBvcHRzKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAobGFzdFBhY2tldCkge1xuICAgICAgICAgICAgICAgICAgICAvLyBmYWtlIGRyYWluXG4gICAgICAgICAgICAgICAgICAgIC8vIGRlZmVyIHRvIG5leHQgdGljayB0byBhbGxvdyBTb2NrZXQgdG8gY2xlYXIgd3JpdGVCdWZmZXJcbiAgICAgICAgICAgICAgICAgICAgbmV4dFRpY2soKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy53cml0YWJsZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmVtaXRSZXNlcnZlZChcImRyYWluXCIpO1xuICAgICAgICAgICAgICAgICAgICB9LCB0aGlzLnNldFRpbWVvdXRGbik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogQ2xvc2VzIHNvY2tldC5cbiAgICAgKlxuICAgICAqIEBhcGkgcHJpdmF0ZVxuICAgICAqL1xuICAgIGRvQ2xvc2UoKSB7XG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy53cyAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgICAgdGhpcy53cy5jbG9zZSgpO1xuICAgICAgICAgICAgdGhpcy53cyA9IG51bGw7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogR2VuZXJhdGVzIHVyaSBmb3IgY29ubmVjdGlvbi5cbiAgICAgKlxuICAgICAqIEBhcGkgcHJpdmF0ZVxuICAgICAqL1xuICAgIHVyaSgpIHtcbiAgICAgICAgbGV0IHF1ZXJ5ID0gdGhpcy5xdWVyeSB8fCB7fTtcbiAgICAgICAgY29uc3Qgc2NoZW1hID0gdGhpcy5vcHRzLnNlY3VyZSA/IFwid3NzXCIgOiBcIndzXCI7XG4gICAgICAgIGxldCBwb3J0ID0gXCJcIjtcbiAgICAgICAgLy8gYXZvaWQgcG9ydCBpZiBkZWZhdWx0IGZvciBzY2hlbWFcbiAgICAgICAgaWYgKHRoaXMub3B0cy5wb3J0ICYmXG4gICAgICAgICAgICAoKFwid3NzXCIgPT09IHNjaGVtYSAmJiBOdW1iZXIodGhpcy5vcHRzLnBvcnQpICE9PSA0NDMpIHx8XG4gICAgICAgICAgICAgICAgKFwid3NcIiA9PT0gc2NoZW1hICYmIE51bWJlcih0aGlzLm9wdHMucG9ydCkgIT09IDgwKSkpIHtcbiAgICAgICAgICAgIHBvcnQgPSBcIjpcIiArIHRoaXMub3B0cy5wb3J0O1xuICAgICAgICB9XG4gICAgICAgIC8vIGFwcGVuZCB0aW1lc3RhbXAgdG8gVVJJXG4gICAgICAgIGlmICh0aGlzLm9wdHMudGltZXN0YW1wUmVxdWVzdHMpIHtcbiAgICAgICAgICAgIHF1ZXJ5W3RoaXMub3B0cy50aW1lc3RhbXBQYXJhbV0gPSB5ZWFzdCgpO1xuICAgICAgICB9XG4gICAgICAgIC8vIGNvbW11bmljYXRlIGJpbmFyeSBzdXBwb3J0IGNhcGFiaWxpdGllc1xuICAgICAgICBpZiAoIXRoaXMuc3VwcG9ydHNCaW5hcnkpIHtcbiAgICAgICAgICAgIHF1ZXJ5LmI2NCA9IDE7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZW5jb2RlZFF1ZXJ5ID0gZW5jb2RlKHF1ZXJ5KTtcbiAgICAgICAgY29uc3QgaXB2NiA9IHRoaXMub3B0cy5ob3N0bmFtZS5pbmRleE9mKFwiOlwiKSAhPT0gLTE7XG4gICAgICAgIHJldHVybiAoc2NoZW1hICtcbiAgICAgICAgICAgIFwiOi8vXCIgK1xuICAgICAgICAgICAgKGlwdjYgPyBcIltcIiArIHRoaXMub3B0cy5ob3N0bmFtZSArIFwiXVwiIDogdGhpcy5vcHRzLmhvc3RuYW1lKSArXG4gICAgICAgICAgICBwb3J0ICtcbiAgICAgICAgICAgIHRoaXMub3B0cy5wYXRoICtcbiAgICAgICAgICAgIChlbmNvZGVkUXVlcnkubGVuZ3RoID8gXCI/XCIgKyBlbmNvZGVkUXVlcnkgOiBcIlwiKSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEZlYXR1cmUgZGV0ZWN0aW9uIGZvciBXZWJTb2NrZXQuXG4gICAgICpcbiAgICAgKiBAcmV0dXJuIHtCb29sZWFufSB3aGV0aGVyIHRoaXMgdHJhbnNwb3J0IGlzIGF2YWlsYWJsZS5cbiAgICAgKiBAYXBpIHB1YmxpY1xuICAgICAqL1xuICAgIGNoZWNrKCkge1xuICAgICAgICByZXR1cm4gISFXZWJTb2NrZXQ7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/engine.io-client/build/esm/transports/websocket.js\n"));

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"XHR\": function() { return /* binding */ XHR; }\n/* harmony export */ });\n/* harmony import */ var _contrib_has_cors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../contrib/has-cors.js */ \"./node_modules/engine.io-client/build/esm/contrib/has-cors.js\");\n/* harmony import */ var _globalThis_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../globalThis.js */ \"./node_modules/engine.io-client/build/esm/globalThis.browser.js\");\n// browser shim for xmlhttprequest module\n\n\nfunction XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || _contrib_has_cors_js__WEBPACK_IMPORTED_MODULE_0__.hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new _globalThis_js__WEBPACK_IMPORTED_MODULE_1__.globalThisShim[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLWNsaWVudC9idWlsZC9lc20vdHJhbnNwb3J0cy94bWxodHRwcmVxdWVzdC5icm93c2VyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ2lEO0FBQ2U7QUFDekQ7QUFDUDtBQUNBO0FBQ0E7QUFDQSxrRUFBa0UseURBQU87QUFDekU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLDBEQUFVO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9lbmdpbmUuaW8tY2xpZW50L2J1aWxkL2VzbS90cmFuc3BvcnRzL3htbGh0dHByZXF1ZXN0LmJyb3dzZXIuanM/MWNlYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBicm93c2VyIHNoaW0gZm9yIHhtbGh0dHByZXF1ZXN0IG1vZHVsZVxuaW1wb3J0IHsgaGFzQ09SUyB9IGZyb20gXCIuLi9jb250cmliL2hhcy1jb3JzLmpzXCI7XG5pbXBvcnQgeyBnbG9iYWxUaGlzU2hpbSBhcyBnbG9iYWxUaGlzIH0gZnJvbSBcIi4uL2dsb2JhbFRoaXMuanNcIjtcbmV4cG9ydCBmdW5jdGlvbiBYSFIob3B0cykge1xuICAgIGNvbnN0IHhkb21haW4gPSBvcHRzLnhkb21haW47XG4gICAgLy8gWE1MSHR0cFJlcXVlc3QgY2FuIGJlIGRpc2FibGVkIG9uIElFXG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKFwidW5kZWZpbmVkXCIgIT09IHR5cGVvZiBYTUxIdHRwUmVxdWVzdCAmJiAoIXhkb21haW4gfHwgaGFzQ09SUykpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjYXRjaCAoZSkgeyB9XG4gICAgaWYgKCF4ZG9tYWluKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IGdsb2JhbFRoaXNbW1wiQWN0aXZlXCJdLmNvbmNhdChcIk9iamVjdFwiKS5qb2luKFwiWFwiKV0oXCJNaWNyb3NvZnQuWE1MSFRUUFwiKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkgeyB9XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js\n"));

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/util.js":
/*!*********************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/util.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"byteLength\": function() { return /* binding */ byteLength; },\n/* harmony export */   \"installTimerFunctions\": function() { return /* binding */ installTimerFunctions; },\n/* harmony export */   \"pick\": function() { return /* binding */ pick; }\n/* harmony export */ });\n/* harmony import */ var _globalThis_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./globalThis.js */ \"./node_modules/engine.io-client/build/esm/globalThis.browser.js\");\n\nfunction pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nfunction installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(_globalThis_js__WEBPACK_IMPORTED_MODULE_0__.globalThisShim);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(_globalThis_js__WEBPACK_IMPORTED_MODULE_0__.globalThisShim);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(_globalThis_js__WEBPACK_IMPORTED_MODULE_0__.globalThisShim);\n        obj.clearTimeoutFn = clearTimeout.bind(_globalThis_js__WEBPACK_IMPORTED_MODULE_0__.globalThisShim);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nfunction byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLWNsaWVudC9idWlsZC9lc20vdXRpbC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQStEO0FBQ3hEO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUssSUFBSTtBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLG1EQUFtRCwwREFBVTtBQUM3RCx1REFBdUQsMERBQVU7QUFDakU7QUFDQTtBQUNBLDJDQUEyQywwREFBVTtBQUNyRCwrQ0FBK0MsMERBQVU7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyxPQUFPO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2VuZ2luZS5pby1jbGllbnQvYnVpbGQvZXNtL3V0aWwuanM/ODJjNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnbG9iYWxUaGlzU2hpbSBhcyBnbG9iYWxUaGlzIH0gZnJvbSBcIi4vZ2xvYmFsVGhpcy5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIHBpY2sob2JqLCAuLi5hdHRyKSB7XG4gICAgcmV0dXJuIGF0dHIucmVkdWNlKChhY2MsIGspID0+IHtcbiAgICAgICAgaWYgKG9iai5oYXNPd25Qcm9wZXJ0eShrKSkge1xuICAgICAgICAgICAgYWNjW2tdID0gb2JqW2tdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhY2M7XG4gICAgfSwge30pO1xufVxuLy8gS2VlcCBhIHJlZmVyZW5jZSB0byB0aGUgcmVhbCB0aW1lb3V0IGZ1bmN0aW9ucyBzbyB0aGV5IGNhbiBiZSB1c2VkIHdoZW4gb3ZlcnJpZGRlblxuY29uc3QgTkFUSVZFX1NFVF9USU1FT1VUID0gc2V0VGltZW91dDtcbmNvbnN0IE5BVElWRV9DTEVBUl9USU1FT1VUID0gY2xlYXJUaW1lb3V0O1xuZXhwb3J0IGZ1bmN0aW9uIGluc3RhbGxUaW1lckZ1bmN0aW9ucyhvYmosIG9wdHMpIHtcbiAgICBpZiAob3B0cy51c2VOYXRpdmVUaW1lcnMpIHtcbiAgICAgICAgb2JqLnNldFRpbWVvdXRGbiA9IE5BVElWRV9TRVRfVElNRU9VVC5iaW5kKGdsb2JhbFRoaXMpO1xuICAgICAgICBvYmouY2xlYXJUaW1lb3V0Rm4gPSBOQVRJVkVfQ0xFQVJfVElNRU9VVC5iaW5kKGdsb2JhbFRoaXMpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgb2JqLnNldFRpbWVvdXRGbiA9IHNldFRpbWVvdXQuYmluZChnbG9iYWxUaGlzKTtcbiAgICAgICAgb2JqLmNsZWFyVGltZW91dEZuID0gY2xlYXJUaW1lb3V0LmJpbmQoZ2xvYmFsVGhpcyk7XG4gICAgfVxufVxuLy8gYmFzZTY0IGVuY29kZWQgYnVmZmVycyBhcmUgYWJvdXQgMzMlIGJpZ2dlciAoaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvQmFzZTY0KVxuY29uc3QgQkFTRTY0X09WRVJIRUFEID0gMS4zMztcbi8vIHdlIGNvdWxkIGFsc28gaGF2ZSB1c2VkIGBuZXcgQmxvYihbb2JqXSkuc2l6ZWAsIGJ1dCBpdCBpc24ndCBzdXBwb3J0ZWQgaW4gSUU5XG5leHBvcnQgZnVuY3Rpb24gYnl0ZUxlbmd0aChvYmopIHtcbiAgICBpZiAodHlwZW9mIG9iaiA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICByZXR1cm4gdXRmOExlbmd0aChvYmopO1xuICAgIH1cbiAgICAvLyBhcnJheWJ1ZmZlciBvciBibG9iXG4gICAgcmV0dXJuIE1hdGguY2VpbCgob2JqLmJ5dGVMZW5ndGggfHwgb2JqLnNpemUpICogQkFTRTY0X09WRVJIRUFEKTtcbn1cbmZ1bmN0aW9uIHV0ZjhMZW5ndGgoc3RyKSB7XG4gICAgbGV0IGMgPSAwLCBsZW5ndGggPSAwO1xuICAgIGZvciAobGV0IGkgPSAwLCBsID0gc3RyLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgICBjID0gc3RyLmNoYXJDb2RlQXQoaSk7XG4gICAgICAgIGlmIChjIDwgMHg4MCkge1xuICAgICAgICAgICAgbGVuZ3RoICs9IDE7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoYyA8IDB4ODAwKSB7XG4gICAgICAgICAgICBsZW5ndGggKz0gMjtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChjIDwgMHhkODAwIHx8IGMgPj0gMHhlMDAwKSB7XG4gICAgICAgICAgICBsZW5ndGggKz0gMztcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGkrKztcbiAgICAgICAgICAgIGxlbmd0aCArPSA0O1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBsZW5ndGg7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/engine.io-client/build/esm/util.js\n"));

/***/ }),

/***/ "./node_modules/engine.io-parser/build/esm/commons.js":
/*!************************************************************!*\
  !*** ./node_modules/engine.io-parser/build/esm/commons.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ERROR_PACKET\": function() { return /* binding */ ERROR_PACKET; },\n/* harmony export */   \"PACKET_TYPES\": function() { return /* binding */ PACKET_TYPES; },\n/* harmony export */   \"PACKET_TYPES_REVERSE\": function() { return /* binding */ PACKET_TYPES_REVERSE; }\n/* harmony export */ });\nconst PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLXBhcnNlci9idWlsZC9lc20vY29tbW9ucy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSwwQ0FBMEM7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsdUJBQXVCO0FBQ3FDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9lbmdpbmUuaW8tcGFyc2VyL2J1aWxkL2VzbS9jb21tb25zLmpzPzhiZTEiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgUEFDS0VUX1RZUEVTID0gT2JqZWN0LmNyZWF0ZShudWxsKTsgLy8gbm8gTWFwID0gbm8gcG9seWZpbGxcblBBQ0tFVF9UWVBFU1tcIm9wZW5cIl0gPSBcIjBcIjtcblBBQ0tFVF9UWVBFU1tcImNsb3NlXCJdID0gXCIxXCI7XG5QQUNLRVRfVFlQRVNbXCJwaW5nXCJdID0gXCIyXCI7XG5QQUNLRVRfVFlQRVNbXCJwb25nXCJdID0gXCIzXCI7XG5QQUNLRVRfVFlQRVNbXCJtZXNzYWdlXCJdID0gXCI0XCI7XG5QQUNLRVRfVFlQRVNbXCJ1cGdyYWRlXCJdID0gXCI1XCI7XG5QQUNLRVRfVFlQRVNbXCJub29wXCJdID0gXCI2XCI7XG5jb25zdCBQQUNLRVRfVFlQRVNfUkVWRVJTRSA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG5PYmplY3Qua2V5cyhQQUNLRVRfVFlQRVMpLmZvckVhY2goa2V5ID0+IHtcbiAgICBQQUNLRVRfVFlQRVNfUkVWRVJTRVtQQUNLRVRfVFlQRVNba2V5XV0gPSBrZXk7XG59KTtcbmNvbnN0IEVSUk9SX1BBQ0tFVCA9IHsgdHlwZTogXCJlcnJvclwiLCBkYXRhOiBcInBhcnNlciBlcnJvclwiIH07XG5leHBvcnQgeyBQQUNLRVRfVFlQRVMsIFBBQ0tFVF9UWVBFU19SRVZFUlNFLCBFUlJPUl9QQUNLRVQgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/engine.io-parser/build/esm/commons.js\n"));

/***/ }),

/***/ "./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"decode\": function() { return /* binding */ decode; },\n/* harmony export */   \"encode\": function() { return /* binding */ encode; }\n/* harmony export */ });\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nconst encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nconst decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLXBhcnNlci9idWlsZC9lc20vY29udHJpYi9iYXNlNjQtYXJyYXlidWZmZXIuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0Isa0JBQWtCO0FBQ2xDO0FBQ0E7QUFDTztBQUNQO0FBQ0EsZ0JBQWdCLFNBQVM7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsU0FBUztBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLXBhcnNlci9idWlsZC9lc20vY29udHJpYi9iYXNlNjQtYXJyYXlidWZmZXIuanM/MDljMyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjaGFycyA9ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvJztcbi8vIFVzZSBhIGxvb2t1cCB0YWJsZSB0byBmaW5kIHRoZSBpbmRleC5cbmNvbnN0IGxvb2t1cCA9IHR5cGVvZiBVaW50OEFycmF5ID09PSAndW5kZWZpbmVkJyA/IFtdIDogbmV3IFVpbnQ4QXJyYXkoMjU2KTtcbmZvciAobGV0IGkgPSAwOyBpIDwgY2hhcnMubGVuZ3RoOyBpKyspIHtcbiAgICBsb29rdXBbY2hhcnMuY2hhckNvZGVBdChpKV0gPSBpO1xufVxuZXhwb3J0IGNvbnN0IGVuY29kZSA9IChhcnJheWJ1ZmZlcikgPT4ge1xuICAgIGxldCBieXRlcyA9IG5ldyBVaW50OEFycmF5KGFycmF5YnVmZmVyKSwgaSwgbGVuID0gYnl0ZXMubGVuZ3RoLCBiYXNlNjQgPSAnJztcbiAgICBmb3IgKGkgPSAwOyBpIDwgbGVuOyBpICs9IDMpIHtcbiAgICAgICAgYmFzZTY0ICs9IGNoYXJzW2J5dGVzW2ldID4+IDJdO1xuICAgICAgICBiYXNlNjQgKz0gY2hhcnNbKChieXRlc1tpXSAmIDMpIDw8IDQpIHwgKGJ5dGVzW2kgKyAxXSA+PiA0KV07XG4gICAgICAgIGJhc2U2NCArPSBjaGFyc1soKGJ5dGVzW2kgKyAxXSAmIDE1KSA8PCAyKSB8IChieXRlc1tpICsgMl0gPj4gNildO1xuICAgICAgICBiYXNlNjQgKz0gY2hhcnNbYnl0ZXNbaSArIDJdICYgNjNdO1xuICAgIH1cbiAgICBpZiAobGVuICUgMyA9PT0gMikge1xuICAgICAgICBiYXNlNjQgPSBiYXNlNjQuc3Vic3RyaW5nKDAsIGJhc2U2NC5sZW5ndGggLSAxKSArICc9JztcbiAgICB9XG4gICAgZWxzZSBpZiAobGVuICUgMyA9PT0gMSkge1xuICAgICAgICBiYXNlNjQgPSBiYXNlNjQuc3Vic3RyaW5nKDAsIGJhc2U2NC5sZW5ndGggLSAyKSArICc9PSc7XG4gICAgfVxuICAgIHJldHVybiBiYXNlNjQ7XG59O1xuZXhwb3J0IGNvbnN0IGRlY29kZSA9IChiYXNlNjQpID0+IHtcbiAgICBsZXQgYnVmZmVyTGVuZ3RoID0gYmFzZTY0Lmxlbmd0aCAqIDAuNzUsIGxlbiA9IGJhc2U2NC5sZW5ndGgsIGksIHAgPSAwLCBlbmNvZGVkMSwgZW5jb2RlZDIsIGVuY29kZWQzLCBlbmNvZGVkNDtcbiAgICBpZiAoYmFzZTY0W2Jhc2U2NC5sZW5ndGggLSAxXSA9PT0gJz0nKSB7XG4gICAgICAgIGJ1ZmZlckxlbmd0aC0tO1xuICAgICAgICBpZiAoYmFzZTY0W2Jhc2U2NC5sZW5ndGggLSAyXSA9PT0gJz0nKSB7XG4gICAgICAgICAgICBidWZmZXJMZW5ndGgtLTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb25zdCBhcnJheWJ1ZmZlciA9IG5ldyBBcnJheUJ1ZmZlcihidWZmZXJMZW5ndGgpLCBieXRlcyA9IG5ldyBVaW50OEFycmF5KGFycmF5YnVmZmVyKTtcbiAgICBmb3IgKGkgPSAwOyBpIDwgbGVuOyBpICs9IDQpIHtcbiAgICAgICAgZW5jb2RlZDEgPSBsb29rdXBbYmFzZTY0LmNoYXJDb2RlQXQoaSldO1xuICAgICAgICBlbmNvZGVkMiA9IGxvb2t1cFtiYXNlNjQuY2hhckNvZGVBdChpICsgMSldO1xuICAgICAgICBlbmNvZGVkMyA9IGxvb2t1cFtiYXNlNjQuY2hhckNvZGVBdChpICsgMildO1xuICAgICAgICBlbmNvZGVkNCA9IGxvb2t1cFtiYXNlNjQuY2hhckNvZGVBdChpICsgMyldO1xuICAgICAgICBieXRlc1twKytdID0gKGVuY29kZWQxIDw8IDIpIHwgKGVuY29kZWQyID4+IDQpO1xuICAgICAgICBieXRlc1twKytdID0gKChlbmNvZGVkMiAmIDE1KSA8PCA0KSB8IChlbmNvZGVkMyA+PiAyKTtcbiAgICAgICAgYnl0ZXNbcCsrXSA9ICgoZW5jb2RlZDMgJiAzKSA8PCA2KSB8IChlbmNvZGVkNCAmIDYzKTtcbiAgICB9XG4gICAgcmV0dXJuIGFycmF5YnVmZmVyO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js\n"));

/***/ }),

/***/ "./node_modules/engine.io-parser/build/esm/decodePacket.browser.js":
/*!*************************************************************************!*\
  !*** ./node_modules/engine.io-parser/build/esm/decodePacket.browser.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _commons_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./commons.js */ \"./node_modules/engine.io-parser/build/esm/commons.js\");\n/* harmony import */ var _contrib_base64_arraybuffer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./contrib/base64-arraybuffer.js */ \"./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js\");\n\n\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = _commons_js__WEBPACK_IMPORTED_MODULE_0__.PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return _commons_js__WEBPACK_IMPORTED_MODULE_0__.ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: _commons_js__WEBPACK_IMPORTED_MODULE_0__.PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: _commons_js__WEBPACK_IMPORTED_MODULE_0__.PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = (0,_contrib_base64_arraybuffer_js__WEBPACK_IMPORTED_MODULE_1__.decode)(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (decodePacket);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLXBhcnNlci9idWlsZC9lc20vZGVjb2RlUGFja2V0LmJyb3dzZXIuanMuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQWtFO0FBQ1Q7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLDZEQUFvQjtBQUMzQztBQUNBLGVBQWUscURBQVk7QUFDM0I7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLDZEQUFvQjtBQUN0QztBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsNkRBQW9CO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHNFQUFNO0FBQzlCO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixzQkFBc0I7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0EsK0RBQWUsWUFBWSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9lbmdpbmUuaW8tcGFyc2VyL2J1aWxkL2VzbS9kZWNvZGVQYWNrZXQuYnJvd3Nlci5qcz9iMWU3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVSUk9SX1BBQ0tFVCwgUEFDS0VUX1RZUEVTX1JFVkVSU0UgfSBmcm9tIFwiLi9jb21tb25zLmpzXCI7XG5pbXBvcnQgeyBkZWNvZGUgfSBmcm9tIFwiLi9jb250cmliL2Jhc2U2NC1hcnJheWJ1ZmZlci5qc1wiO1xuY29uc3Qgd2l0aE5hdGl2ZUFycmF5QnVmZmVyID0gdHlwZW9mIEFycmF5QnVmZmVyID09PSBcImZ1bmN0aW9uXCI7XG5jb25zdCBkZWNvZGVQYWNrZXQgPSAoZW5jb2RlZFBhY2tldCwgYmluYXJ5VHlwZSkgPT4ge1xuICAgIGlmICh0eXBlb2YgZW5jb2RlZFBhY2tldCAhPT0gXCJzdHJpbmdcIikge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdHlwZTogXCJtZXNzYWdlXCIsXG4gICAgICAgICAgICBkYXRhOiBtYXBCaW5hcnkoZW5jb2RlZFBhY2tldCwgYmluYXJ5VHlwZSlcbiAgICAgICAgfTtcbiAgICB9XG4gICAgY29uc3QgdHlwZSA9IGVuY29kZWRQYWNrZXQuY2hhckF0KDApO1xuICAgIGlmICh0eXBlID09PSBcImJcIikge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdHlwZTogXCJtZXNzYWdlXCIsXG4gICAgICAgICAgICBkYXRhOiBkZWNvZGVCYXNlNjRQYWNrZXQoZW5jb2RlZFBhY2tldC5zdWJzdHJpbmcoMSksIGJpbmFyeVR5cGUpXG4gICAgICAgIH07XG4gICAgfVxuICAgIGNvbnN0IHBhY2tldFR5cGUgPSBQQUNLRVRfVFlQRVNfUkVWRVJTRVt0eXBlXTtcbiAgICBpZiAoIXBhY2tldFR5cGUpIHtcbiAgICAgICAgcmV0dXJuIEVSUk9SX1BBQ0tFVDtcbiAgICB9XG4gICAgcmV0dXJuIGVuY29kZWRQYWNrZXQubGVuZ3RoID4gMVxuICAgICAgICA/IHtcbiAgICAgICAgICAgIHR5cGU6IFBBQ0tFVF9UWVBFU19SRVZFUlNFW3R5cGVdLFxuICAgICAgICAgICAgZGF0YTogZW5jb2RlZFBhY2tldC5zdWJzdHJpbmcoMSlcbiAgICAgICAgfVxuICAgICAgICA6IHtcbiAgICAgICAgICAgIHR5cGU6IFBBQ0tFVF9UWVBFU19SRVZFUlNFW3R5cGVdXG4gICAgICAgIH07XG59O1xuY29uc3QgZGVjb2RlQmFzZTY0UGFja2V0ID0gKGRhdGEsIGJpbmFyeVR5cGUpID0+IHtcbiAgICBpZiAod2l0aE5hdGl2ZUFycmF5QnVmZmVyKSB7XG4gICAgICAgIGNvbnN0IGRlY29kZWQgPSBkZWNvZGUoZGF0YSk7XG4gICAgICAgIHJldHVybiBtYXBCaW5hcnkoZGVjb2RlZCwgYmluYXJ5VHlwZSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4geyBiYXNlNjQ6IHRydWUsIGRhdGEgfTsgLy8gZmFsbGJhY2sgZm9yIG9sZCBicm93c2Vyc1xuICAgIH1cbn07XG5jb25zdCBtYXBCaW5hcnkgPSAoZGF0YSwgYmluYXJ5VHlwZSkgPT4ge1xuICAgIHN3aXRjaCAoYmluYXJ5VHlwZSkge1xuICAgICAgICBjYXNlIFwiYmxvYlwiOlxuICAgICAgICAgICAgcmV0dXJuIGRhdGEgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlciA/IG5ldyBCbG9iKFtkYXRhXSkgOiBkYXRhO1xuICAgICAgICBjYXNlIFwiYXJyYXlidWZmZXJcIjpcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBkYXRhOyAvLyBhc3N1bWluZyB0aGUgZGF0YSBpcyBhbHJlYWR5IGFuIEFycmF5QnVmZmVyXG4gICAgfVxufTtcbmV4cG9ydCBkZWZhdWx0IGRlY29kZVBhY2tldDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/engine.io-parser/build/esm/decodePacket.browser.js\n"));

/***/ }),

/***/ "./node_modules/engine.io-parser/build/esm/encodePacket.browser.js":
/*!*************************************************************************!*\
  !*** ./node_modules/engine.io-parser/build/esm/encodePacket.browser.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _commons_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./commons.js */ \"./node_modules/engine.io-parser/build/esm/commons.js\");\n\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(_commons_js__WEBPACK_IMPORTED_MODULE_0__.PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (encodePacket);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLXBhcnNlci9idWlsZC9lc20vZW5jb2RlUGFja2V0LmJyb3dzZXIuanMuanMiLCJtYXBwaW5ncyI6Ijs7QUFBNEM7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsWUFBWTtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IscURBQVk7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0RBQWUsWUFBWSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9lbmdpbmUuaW8tcGFyc2VyL2J1aWxkL2VzbS9lbmNvZGVQYWNrZXQuYnJvd3Nlci5qcz9mZTY3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBBQ0tFVF9UWVBFUyB9IGZyb20gXCIuL2NvbW1vbnMuanNcIjtcbmNvbnN0IHdpdGhOYXRpdmVCbG9iID0gdHlwZW9mIEJsb2IgPT09IFwiZnVuY3Rpb25cIiB8fFxuICAgICh0eXBlb2YgQmxvYiAhPT0gXCJ1bmRlZmluZWRcIiAmJlxuICAgICAgICBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoQmxvYikgPT09IFwiW29iamVjdCBCbG9iQ29uc3RydWN0b3JdXCIpO1xuY29uc3Qgd2l0aE5hdGl2ZUFycmF5QnVmZmVyID0gdHlwZW9mIEFycmF5QnVmZmVyID09PSBcImZ1bmN0aW9uXCI7XG4vLyBBcnJheUJ1ZmZlci5pc1ZpZXcgbWV0aG9kIGlzIG5vdCBkZWZpbmVkIGluIElFMTBcbmNvbnN0IGlzVmlldyA9IG9iaiA9PiB7XG4gICAgcmV0dXJuIHR5cGVvZiBBcnJheUJ1ZmZlci5pc1ZpZXcgPT09IFwiZnVuY3Rpb25cIlxuICAgICAgICA/IEFycmF5QnVmZmVyLmlzVmlldyhvYmopXG4gICAgICAgIDogb2JqICYmIG9iai5idWZmZXIgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcjtcbn07XG5jb25zdCBlbmNvZGVQYWNrZXQgPSAoeyB0eXBlLCBkYXRhIH0sIHN1cHBvcnRzQmluYXJ5LCBjYWxsYmFjaykgPT4ge1xuICAgIGlmICh3aXRoTmF0aXZlQmxvYiAmJiBkYXRhIGluc3RhbmNlb2YgQmxvYikge1xuICAgICAgICBpZiAoc3VwcG9ydHNCaW5hcnkpIHtcbiAgICAgICAgICAgIHJldHVybiBjYWxsYmFjayhkYXRhKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBlbmNvZGVCbG9iQXNCYXNlNjQoZGF0YSwgY2FsbGJhY2spO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2UgaWYgKHdpdGhOYXRpdmVBcnJheUJ1ZmZlciAmJlxuICAgICAgICAoZGF0YSBpbnN0YW5jZW9mIEFycmF5QnVmZmVyIHx8IGlzVmlldyhkYXRhKSkpIHtcbiAgICAgICAgaWYgKHN1cHBvcnRzQmluYXJ5KSB7XG4gICAgICAgICAgICByZXR1cm4gY2FsbGJhY2soZGF0YSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gZW5jb2RlQmxvYkFzQmFzZTY0KG5ldyBCbG9iKFtkYXRhXSksIGNhbGxiYWNrKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvLyBwbGFpbiBzdHJpbmdcbiAgICByZXR1cm4gY2FsbGJhY2soUEFDS0VUX1RZUEVTW3R5cGVdICsgKGRhdGEgfHwgXCJcIikpO1xufTtcbmNvbnN0IGVuY29kZUJsb2JBc0Jhc2U2NCA9IChkYXRhLCBjYWxsYmFjaykgPT4ge1xuICAgIGNvbnN0IGZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpO1xuICAgIGZpbGVSZWFkZXIub25sb2FkID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBjb25zdCBjb250ZW50ID0gZmlsZVJlYWRlci5yZXN1bHQuc3BsaXQoXCIsXCIpWzFdO1xuICAgICAgICBjYWxsYmFjayhcImJcIiArIGNvbnRlbnQpO1xuICAgIH07XG4gICAgcmV0dXJuIGZpbGVSZWFkZXIucmVhZEFzRGF0YVVSTChkYXRhKTtcbn07XG5leHBvcnQgZGVmYXVsdCBlbmNvZGVQYWNrZXQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/engine.io-parser/build/esm/encodePacket.browser.js\n"));

/***/ }),

/***/ "./node_modules/engine.io-parser/build/esm/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/engine.io-parser/build/esm/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"decodePacket\": function() { return /* reexport safe */ _decodePacket_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; },\n/* harmony export */   \"decodePayload\": function() { return /* binding */ decodePayload; },\n/* harmony export */   \"encodePacket\": function() { return /* reexport safe */ _encodePacket_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; },\n/* harmony export */   \"encodePayload\": function() { return /* binding */ encodePayload; },\n/* harmony export */   \"protocol\": function() { return /* binding */ protocol; }\n/* harmony export */ });\n/* harmony import */ var _encodePacket_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./encodePacket.js */ \"./node_modules/engine.io-parser/build/esm/encodePacket.browser.js\");\n/* harmony import */ var _decodePacket_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./decodePacket.js */ \"./node_modules/engine.io-parser/build/esm/decodePacket.browser.js\");\n\n\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        (0,_encodePacket_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = (0,_decodePacket_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nconst protocol = 4;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLXBhcnNlci9idWlsZC9lc20vaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUE2QztBQUNBO0FBQzdDLDJDQUEyQztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsNERBQVk7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLDJCQUEyQjtBQUMvQyw4QkFBOEIsNERBQVk7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUM2RCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZW5naW5lLmlvLXBhcnNlci9idWlsZC9lc20vaW5kZXguanM/Njc0MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZW5jb2RlUGFja2V0IGZyb20gXCIuL2VuY29kZVBhY2tldC5qc1wiO1xuaW1wb3J0IGRlY29kZVBhY2tldCBmcm9tIFwiLi9kZWNvZGVQYWNrZXQuanNcIjtcbmNvbnN0IFNFUEFSQVRPUiA9IFN0cmluZy5mcm9tQ2hhckNvZGUoMzApOyAvLyBzZWUgaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvRGVsaW1pdGVyI0FTQ0lJX2RlbGltaXRlZF90ZXh0XG5jb25zdCBlbmNvZGVQYXlsb2FkID0gKHBhY2tldHMsIGNhbGxiYWNrKSA9PiB7XG4gICAgLy8gc29tZSBwYWNrZXRzIG1heSBiZSBhZGRlZCB0byB0aGUgYXJyYXkgd2hpbGUgZW5jb2RpbmcsIHNvIHRoZSBpbml0aWFsIGxlbmd0aCBtdXN0IGJlIHNhdmVkXG4gICAgY29uc3QgbGVuZ3RoID0gcGFja2V0cy5sZW5ndGg7XG4gICAgY29uc3QgZW5jb2RlZFBhY2tldHMgPSBuZXcgQXJyYXkobGVuZ3RoKTtcbiAgICBsZXQgY291bnQgPSAwO1xuICAgIHBhY2tldHMuZm9yRWFjaCgocGFja2V0LCBpKSA9PiB7XG4gICAgICAgIC8vIGZvcmNlIGJhc2U2NCBlbmNvZGluZyBmb3IgYmluYXJ5IHBhY2tldHNcbiAgICAgICAgZW5jb2RlUGFja2V0KHBhY2tldCwgZmFsc2UsIGVuY29kZWRQYWNrZXQgPT4ge1xuICAgICAgICAgICAgZW5jb2RlZFBhY2tldHNbaV0gPSBlbmNvZGVkUGFja2V0O1xuICAgICAgICAgICAgaWYgKCsrY291bnQgPT09IGxlbmd0aCkge1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrKGVuY29kZWRQYWNrZXRzLmpvaW4oU0VQQVJBVE9SKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0pO1xufTtcbmNvbnN0IGRlY29kZVBheWxvYWQgPSAoZW5jb2RlZFBheWxvYWQsIGJpbmFyeVR5cGUpID0+IHtcbiAgICBjb25zdCBlbmNvZGVkUGFja2V0cyA9IGVuY29kZWRQYXlsb2FkLnNwbGl0KFNFUEFSQVRPUik7XG4gICAgY29uc3QgcGFja2V0cyA9IFtdO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZW5jb2RlZFBhY2tldHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3QgZGVjb2RlZFBhY2tldCA9IGRlY29kZVBhY2tldChlbmNvZGVkUGFja2V0c1tpXSwgYmluYXJ5VHlwZSk7XG4gICAgICAgIHBhY2tldHMucHVzaChkZWNvZGVkUGFja2V0KTtcbiAgICAgICAgaWYgKGRlY29kZWRQYWNrZXQudHlwZSA9PT0gXCJlcnJvclwiKSB7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcGFja2V0cztcbn07XG5leHBvcnQgY29uc3QgcHJvdG9jb2wgPSA0O1xuZXhwb3J0IHsgZW5jb2RlUGFja2V0LCBlbmNvZGVQYXlsb2FkLCBkZWNvZGVQYWNrZXQsIGRlY29kZVBheWxvYWQgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/engine.io-parser/build/esm/index.js\n"));

/***/ }),

/***/ "./node_modules/flatted/esm/index.js":
/*!*******************************************!*\
  !*** ./node_modules/flatted/esm/index.js ***!
  \*******************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"fromJSON\": function() { return /* binding */ fromJSON; },\n/* harmony export */   \"parse\": function() { return /* binding */ parse; },\n/* harmony export */   \"stringify\": function() { return /* binding */ stringify; },\n/* harmony export */   \"toJSON\": function() { return /* binding */ toJSON; }\n/* harmony export */ });\n/*! (c) 2020 Andrea Giammarchi */\n\nconst {parse: $parse, stringify: $stringify} = JSON;\nconst {keys} = Object;\n\nconst Primitive = String;   // it could be Number\nconst primitive = 'string'; // it could be 'number'\n\nconst ignore = {};\nconst object = 'object';\n\nconst noop = (_, value) => value;\n\nconst primitives = value => (\n  value instanceof Primitive ? Primitive(value) : value\n);\n\nconst Primitives = (_, value) => (\n  typeof value === primitive ? new Primitive(value) : value\n);\n\nconst revive = (input, parsed, output, $) => {\n  const lazy = [];\n  for (let ke = keys(output), {length} = ke, y = 0; y < length; y++) {\n    const k = ke[y];\n    const value = output[k];\n    if (value instanceof Primitive) {\n      const tmp = input[value];\n      if (typeof tmp === object && !parsed.has(tmp)) {\n        parsed.add(tmp);\n        output[k] = ignore;\n        lazy.push({k, a: [input, parsed, tmp, $]});\n      }\n      else\n        output[k] = $.call(output, k, tmp);\n    }\n    else if (output[k] !== ignore)\n      output[k] = $.call(output, k, value);\n  }\n  for (let {length} = lazy, i = 0; i < length; i++) {\n    const {k, a} = lazy[i];\n    output[k] = $.call(output, k, revive.apply(null, a));\n  }\n  return output;\n};\n\nconst set = (known, input, value) => {\n  const index = Primitive(input.push(value) - 1);\n  known.set(value, index);\n  return index;\n};\n\nconst parse = (text, reviver) => {\n  const input = $parse(text, Primitives).map(primitives);\n  const value = input[0];\n  const $ = reviver || noop;\n  const tmp = typeof value === object && value ?\n              revive(input, new Set, value, $) :\n              value;\n  return $.call({'': tmp}, '', tmp);\n};\n\nconst stringify = (value, replacer, space) => {\n  const $ = replacer && typeof replacer === object ?\n            (k, v) => (k === '' || -1 < replacer.indexOf(k) ? v : void 0) :\n            (replacer || noop);\n  const known = new Map;\n  const input = [];\n  const output = [];\n  let i = +set(known, input, $.call({'': value}, '', value));\n  let firstRun = !i;\n  while (i < input.length) {\n    firstRun = true;\n    output[i] = $stringify(input[i++], replace, space);\n  }\n  return '[' + output.join(',') + ']';\n  function replace(key, value) {\n    if (firstRun) {\n      firstRun = !firstRun;\n      return value;\n    }\n    const after = $.call(this, key, value);\n    switch (typeof after) {\n      case object:\n        if (after === null) return after;\n      case primitive:\n        return known.get(after) || set(known, input, after);\n    }\n    return after;\n  }\n};\n\nconst toJSON = any => $parse(stringify(any));\nconst fromJSON = any => parse($stringify(any));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZmxhdHRlZC9lc20vaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBLE9BQU8sc0NBQXNDO0FBQzdDLE9BQU8sTUFBTTs7QUFFYiw0QkFBNEI7QUFDNUIsNEJBQTRCOztBQUU1QjtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLCtCQUErQixRQUFRLGFBQWEsWUFBWTtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQiw4QkFBOEI7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLFFBQVEsZUFBZSxZQUFZO0FBQy9DLFdBQVcsTUFBTTtBQUNqQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFFBQVE7QUFDekI7O0FBRU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsVUFBVTtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRU87QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZmxhdHRlZC9lc20vaW5kZXguanM/YTEwNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgKGMpIDIwMjAgQW5kcmVhIEdpYW1tYXJjaGkgKi9cblxuY29uc3Qge3BhcnNlOiAkcGFyc2UsIHN0cmluZ2lmeTogJHN0cmluZ2lmeX0gPSBKU09OO1xuY29uc3Qge2tleXN9ID0gT2JqZWN0O1xuXG5jb25zdCBQcmltaXRpdmUgPSBTdHJpbmc7ICAgLy8gaXQgY291bGQgYmUgTnVtYmVyXG5jb25zdCBwcmltaXRpdmUgPSAnc3RyaW5nJzsgLy8gaXQgY291bGQgYmUgJ251bWJlcidcblxuY29uc3QgaWdub3JlID0ge307XG5jb25zdCBvYmplY3QgPSAnb2JqZWN0JztcblxuY29uc3Qgbm9vcCA9IChfLCB2YWx1ZSkgPT4gdmFsdWU7XG5cbmNvbnN0IHByaW1pdGl2ZXMgPSB2YWx1ZSA9PiAoXG4gIHZhbHVlIGluc3RhbmNlb2YgUHJpbWl0aXZlID8gUHJpbWl0aXZlKHZhbHVlKSA6IHZhbHVlXG4pO1xuXG5jb25zdCBQcmltaXRpdmVzID0gKF8sIHZhbHVlKSA9PiAoXG4gIHR5cGVvZiB2YWx1ZSA9PT0gcHJpbWl0aXZlID8gbmV3IFByaW1pdGl2ZSh2YWx1ZSkgOiB2YWx1ZVxuKTtcblxuY29uc3QgcmV2aXZlID0gKGlucHV0LCBwYXJzZWQsIG91dHB1dCwgJCkgPT4ge1xuICBjb25zdCBsYXp5ID0gW107XG4gIGZvciAobGV0IGtlID0ga2V5cyhvdXRwdXQpLCB7bGVuZ3RofSA9IGtlLCB5ID0gMDsgeSA8IGxlbmd0aDsgeSsrKSB7XG4gICAgY29uc3QgayA9IGtlW3ldO1xuICAgIGNvbnN0IHZhbHVlID0gb3V0cHV0W2tdO1xuICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIFByaW1pdGl2ZSkge1xuICAgICAgY29uc3QgdG1wID0gaW5wdXRbdmFsdWVdO1xuICAgICAgaWYgKHR5cGVvZiB0bXAgPT09IG9iamVjdCAmJiAhcGFyc2VkLmhhcyh0bXApKSB7XG4gICAgICAgIHBhcnNlZC5hZGQodG1wKTtcbiAgICAgICAgb3V0cHV0W2tdID0gaWdub3JlO1xuICAgICAgICBsYXp5LnB1c2goe2ssIGE6IFtpbnB1dCwgcGFyc2VkLCB0bXAsICRdfSk7XG4gICAgICB9XG4gICAgICBlbHNlXG4gICAgICAgIG91dHB1dFtrXSA9ICQuY2FsbChvdXRwdXQsIGssIHRtcCk7XG4gICAgfVxuICAgIGVsc2UgaWYgKG91dHB1dFtrXSAhPT0gaWdub3JlKVxuICAgICAgb3V0cHV0W2tdID0gJC5jYWxsKG91dHB1dCwgaywgdmFsdWUpO1xuICB9XG4gIGZvciAobGV0IHtsZW5ndGh9ID0gbGF6eSwgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IHtrLCBhfSA9IGxhenlbaV07XG4gICAgb3V0cHV0W2tdID0gJC5jYWxsKG91dHB1dCwgaywgcmV2aXZlLmFwcGx5KG51bGwsIGEpKTtcbiAgfVxuICByZXR1cm4gb3V0cHV0O1xufTtcblxuY29uc3Qgc2V0ID0gKGtub3duLCBpbnB1dCwgdmFsdWUpID0+IHtcbiAgY29uc3QgaW5kZXggPSBQcmltaXRpdmUoaW5wdXQucHVzaCh2YWx1ZSkgLSAxKTtcbiAga25vd24uc2V0KHZhbHVlLCBpbmRleCk7XG4gIHJldHVybiBpbmRleDtcbn07XG5cbmV4cG9ydCBjb25zdCBwYXJzZSA9ICh0ZXh0LCByZXZpdmVyKSA9PiB7XG4gIGNvbnN0IGlucHV0ID0gJHBhcnNlKHRleHQsIFByaW1pdGl2ZXMpLm1hcChwcmltaXRpdmVzKTtcbiAgY29uc3QgdmFsdWUgPSBpbnB1dFswXTtcbiAgY29uc3QgJCA9IHJldml2ZXIgfHwgbm9vcDtcbiAgY29uc3QgdG1wID0gdHlwZW9mIHZhbHVlID09PSBvYmplY3QgJiYgdmFsdWUgP1xuICAgICAgICAgICAgICByZXZpdmUoaW5wdXQsIG5ldyBTZXQsIHZhbHVlLCAkKSA6XG4gICAgICAgICAgICAgIHZhbHVlO1xuICByZXR1cm4gJC5jYWxsKHsnJzogdG1wfSwgJycsIHRtcCk7XG59O1xuXG5leHBvcnQgY29uc3Qgc3RyaW5naWZ5ID0gKHZhbHVlLCByZXBsYWNlciwgc3BhY2UpID0+IHtcbiAgY29uc3QgJCA9IHJlcGxhY2VyICYmIHR5cGVvZiByZXBsYWNlciA9PT0gb2JqZWN0ID9cbiAgICAgICAgICAgIChrLCB2KSA9PiAoayA9PT0gJycgfHwgLTEgPCByZXBsYWNlci5pbmRleE9mKGspID8gdiA6IHZvaWQgMCkgOlxuICAgICAgICAgICAgKHJlcGxhY2VyIHx8IG5vb3ApO1xuICBjb25zdCBrbm93biA9IG5ldyBNYXA7XG4gIGNvbnN0IGlucHV0ID0gW107XG4gIGNvbnN0IG91dHB1dCA9IFtdO1xuICBsZXQgaSA9ICtzZXQoa25vd24sIGlucHV0LCAkLmNhbGwoeycnOiB2YWx1ZX0sICcnLCB2YWx1ZSkpO1xuICBsZXQgZmlyc3RSdW4gPSAhaTtcbiAgd2hpbGUgKGkgPCBpbnB1dC5sZW5ndGgpIHtcbiAgICBmaXJzdFJ1biA9IHRydWU7XG4gICAgb3V0cHV0W2ldID0gJHN0cmluZ2lmeShpbnB1dFtpKytdLCByZXBsYWNlLCBzcGFjZSk7XG4gIH1cbiAgcmV0dXJuICdbJyArIG91dHB1dC5qb2luKCcsJykgKyAnXSc7XG4gIGZ1bmN0aW9uIHJlcGxhY2Uoa2V5LCB2YWx1ZSkge1xuICAgIGlmIChmaXJzdFJ1bikge1xuICAgICAgZmlyc3RSdW4gPSAhZmlyc3RSdW47XG4gICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuICAgIGNvbnN0IGFmdGVyID0gJC5jYWxsKHRoaXMsIGtleSwgdmFsdWUpO1xuICAgIHN3aXRjaCAodHlwZW9mIGFmdGVyKSB7XG4gICAgICBjYXNlIG9iamVjdDpcbiAgICAgICAgaWYgKGFmdGVyID09PSBudWxsKSByZXR1cm4gYWZ0ZXI7XG4gICAgICBjYXNlIHByaW1pdGl2ZTpcbiAgICAgICAgcmV0dXJuIGtub3duLmdldChhZnRlcikgfHwgc2V0KGtub3duLCBpbnB1dCwgYWZ0ZXIpO1xuICAgIH1cbiAgICByZXR1cm4gYWZ0ZXI7XG4gIH1cbn07XG5cbmV4cG9ydCBjb25zdCB0b0pTT04gPSBhbnkgPT4gJHBhcnNlKHN0cmluZ2lmeShhbnkpKTtcbmV4cG9ydCBjb25zdCBmcm9tSlNPTiA9IGFueSA9PiBwYXJzZSgkc3RyaW5naWZ5KGFueSkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/flatted/esm/index.js\n"));

/***/ }),

/***/ "./node_modules/immer/dist/immer.esm.mjs":
/*!***********************************************!*\
  !*** ./node_modules/immer/dist/immer.esm.mjs ***!
  \***********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Immer\": function() { return /* binding */ un; },\n/* harmony export */   \"applyPatches\": function() { return /* binding */ pn; },\n/* harmony export */   \"castDraft\": function() { return /* binding */ K; },\n/* harmony export */   \"castImmutable\": function() { return /* binding */ $; },\n/* harmony export */   \"createDraft\": function() { return /* binding */ ln; },\n/* harmony export */   \"current\": function() { return /* binding */ D; },\n/* harmony export */   \"enableAllPlugins\": function() { return /* binding */ J; },\n/* harmony export */   \"enableES5\": function() { return /* binding */ N; },\n/* harmony export */   \"enableMapSet\": function() { return /* binding */ C; },\n/* harmony export */   \"enablePatches\": function() { return /* binding */ T; },\n/* harmony export */   \"finishDraft\": function() { return /* binding */ dn; },\n/* harmony export */   \"freeze\": function() { return /* binding */ d; },\n/* harmony export */   \"immerable\": function() { return /* binding */ L; },\n/* harmony export */   \"isDraft\": function() { return /* binding */ r; },\n/* harmony export */   \"isDraftable\": function() { return /* binding */ t; },\n/* harmony export */   \"nothing\": function() { return /* binding */ H; },\n/* harmony export */   \"original\": function() { return /* binding */ e; },\n/* harmony export */   \"produce\": function() { return /* binding */ fn; },\n/* harmony export */   \"produceWithPatches\": function() { return /* binding */ cn; },\n/* harmony export */   \"setAutoFreeze\": function() { return /* binding */ sn; },\n/* harmony export */   \"setUseProxies\": function() { return /* binding */ vn; }\n/* harmony export */ });\nfunction n(n){for(var r=arguments.length,t=Array(r>1?r-1:0),e=1;e<r;e++)t[e-1]=arguments[e];if(true){var i=Y[n],o=i?\"function\"==typeof i?i.apply(null,t):i:\"unknown error nr: \"+n;throw Error(\"[Immer] \"+o)}throw Error(\"[Immer] minified error nr: \"+n+(t.length?\" \"+t.map((function(n){return\"'\"+n+\"'\"})).join(\",\"):\"\")+\". Find the full error at: https://bit.ly/3cXEKWf\")}function r(n){return!!n&&!!n[Q]}function t(n){return!!n&&(function(n){if(!n||\"object\"!=typeof n)return!1;var r=Object.getPrototypeOf(n);if(null===r)return!0;var t=Object.hasOwnProperty.call(r,\"constructor\")&&r.constructor;return t===Object||\"function\"==typeof t&&Function.toString.call(t)===Z}(n)||Array.isArray(n)||!!n[L]||!!n.constructor[L]||s(n)||v(n))}function e(t){return r(t)||n(23,t),t[Q].t}function i(n,r,t){void 0===t&&(t=!1),0===o(n)?(t?Object.keys:nn)(n).forEach((function(e){t&&\"symbol\"==typeof e||r(e,n[e],n)})):n.forEach((function(t,e){return r(e,t,n)}))}function o(n){var r=n[Q];return r?r.i>3?r.i-4:r.i:Array.isArray(n)?1:s(n)?2:v(n)?3:0}function u(n,r){return 2===o(n)?n.has(r):Object.prototype.hasOwnProperty.call(n,r)}function a(n,r){return 2===o(n)?n.get(r):n[r]}function f(n,r,t){var e=o(n);2===e?n.set(r,t):3===e?(n.delete(r),n.add(t)):n[r]=t}function c(n,r){return n===r?0!==n||1/n==1/r:n!=n&&r!=r}function s(n){return X&&n instanceof Map}function v(n){return q&&n instanceof Set}function p(n){return n.o||n.t}function l(n){if(Array.isArray(n))return Array.prototype.slice.call(n);var r=rn(n);delete r[Q];for(var t=nn(r),e=0;e<t.length;e++){var i=t[e],o=r[i];!1===o.writable&&(o.writable=!0,o.configurable=!0),(o.get||o.set)&&(r[i]={configurable:!0,writable:!0,enumerable:o.enumerable,value:n[i]})}return Object.create(Object.getPrototypeOf(n),r)}function d(n,e){return void 0===e&&(e=!1),y(n)||r(n)||!t(n)?n:(o(n)>1&&(n.set=n.add=n.clear=n.delete=h),Object.freeze(n),e&&i(n,(function(n,r){return d(r,!0)}),!0),n)}function h(){n(2)}function y(n){return null==n||\"object\"!=typeof n||Object.isFrozen(n)}function b(r){var t=tn[r];return t||n(18,r),t}function m(n,r){tn[n]||(tn[n]=r)}function _(){return false||U||n(0),U}function j(n,r){r&&(b(\"Patches\"),n.u=[],n.s=[],n.v=r)}function O(n){g(n),n.p.forEach(S),n.p=null}function g(n){n===U&&(U=n.l)}function w(n){return U={p:[],l:U,h:n,m:!0,_:0}}function S(n){var r=n[Q];0===r.i||1===r.i?r.j():r.O=!0}function P(r,e){e._=e.p.length;var i=e.p[0],o=void 0!==r&&r!==i;return e.h.g||b(\"ES5\").S(e,r,o),o?(i[Q].P&&(O(e),n(4)),t(r)&&(r=M(e,r),e.l||x(e,r)),e.u&&b(\"Patches\").M(i[Q].t,r,e.u,e.s)):r=M(e,i,[]),O(e),e.u&&e.v(e.u,e.s),r!==H?r:void 0}function M(n,r,t){if(y(r))return r;var e=r[Q];if(!e)return i(r,(function(i,o){return A(n,e,r,i,o,t)}),!0),r;if(e.A!==n)return r;if(!e.P)return x(n,e.t,!0),e.t;if(!e.I){e.I=!0,e.A._--;var o=4===e.i||5===e.i?e.o=l(e.k):e.o;i(3===e.i?new Set(o):o,(function(r,i){return A(n,e,o,r,i,t)})),x(n,o,!1),t&&n.u&&b(\"Patches\").R(e,t,n.u,n.s)}return e.o}function A(e,i,o,a,c,s){if( true&&c===o&&n(5),r(c)){var v=M(e,c,s&&i&&3!==i.i&&!u(i.D,a)?s.concat(a):void 0);if(f(o,a,v),!r(v))return;e.m=!1}if(t(c)&&!y(c)){if(!e.h.F&&e._<1)return;M(e,c),i&&i.A.l||x(e,c)}}function x(n,r,t){void 0===t&&(t=!1),n.h.F&&n.m&&d(r,t)}function z(n,r){var t=n[Q];return(t?p(t):n)[r]}function I(n,r){if(r in n)for(var t=Object.getPrototypeOf(n);t;){var e=Object.getOwnPropertyDescriptor(t,r);if(e)return e;t=Object.getPrototypeOf(t)}}function k(n){n.P||(n.P=!0,n.l&&k(n.l))}function E(n){n.o||(n.o=l(n.t))}function R(n,r,t){var e=s(r)?b(\"MapSet\").N(r,t):v(r)?b(\"MapSet\").T(r,t):n.g?function(n,r){var t=Array.isArray(n),e={i:t?1:0,A:r?r.A:_(),P:!1,I:!1,D:{},l:r,t:n,k:null,o:null,j:null,C:!1},i=e,o=en;t&&(i=[e],o=on);var u=Proxy.revocable(i,o),a=u.revoke,f=u.proxy;return e.k=f,e.j=a,f}(r,t):b(\"ES5\").J(r,t);return(t?t.A:_()).p.push(e),e}function D(e){return r(e)||n(22,e),function n(r){if(!t(r))return r;var e,u=r[Q],c=o(r);if(u){if(!u.P&&(u.i<4||!b(\"ES5\").K(u)))return u.t;u.I=!0,e=F(r,c),u.I=!1}else e=F(r,c);return i(e,(function(r,t){u&&a(u.t,r)===t||f(e,r,n(t))})),3===c?new Set(e):e}(e)}function F(n,r){switch(r){case 2:return new Map(n);case 3:return Array.from(n)}return l(n)}function N(){function t(n,r){var t=s[n];return t?t.enumerable=r:s[n]=t={configurable:!0,enumerable:r,get:function(){var r=this[Q];return true&&f(r),en.get(r,n)},set:function(r){var t=this[Q]; true&&f(t),en.set(t,n,r)}},t}function e(n){for(var r=n.length-1;r>=0;r--){var t=n[r][Q];if(!t.P)switch(t.i){case 5:a(t)&&k(t);break;case 4:o(t)&&k(t)}}}function o(n){for(var r=n.t,t=n.k,e=nn(t),i=e.length-1;i>=0;i--){var o=e[i];if(o!==Q){var a=r[o];if(void 0===a&&!u(r,o))return!0;var f=t[o],s=f&&f[Q];if(s?s.t!==a:!c(f,a))return!0}}var v=!!r[Q];return e.length!==nn(r).length+(v?0:1)}function a(n){var r=n.k;if(r.length!==n.t.length)return!0;var t=Object.getOwnPropertyDescriptor(r,r.length-1);if(t&&!t.get)return!0;for(var e=0;e<r.length;e++)if(!r.hasOwnProperty(e))return!0;return!1}function f(r){r.O&&n(3,JSON.stringify(p(r)))}var s={};m(\"ES5\",{J:function(n,r){var e=Array.isArray(n),i=function(n,r){if(n){for(var e=Array(r.length),i=0;i<r.length;i++)Object.defineProperty(e,\"\"+i,t(i,!0));return e}var o=rn(r);delete o[Q];for(var u=nn(o),a=0;a<u.length;a++){var f=u[a];o[f]=t(f,n||!!o[f].enumerable)}return Object.create(Object.getPrototypeOf(r),o)}(e,n),o={i:e?5:4,A:r?r.A:_(),P:!1,I:!1,D:{},l:r,t:n,k:i,o:null,O:!1,C:!1};return Object.defineProperty(i,Q,{value:o,writable:!0}),i},S:function(n,t,o){o?r(t)&&t[Q].A===n&&e(n.p):(n.u&&function n(r){if(r&&\"object\"==typeof r){var t=r[Q];if(t){var e=t.t,o=t.k,f=t.D,c=t.i;if(4===c)i(o,(function(r){r!==Q&&(void 0!==e[r]||u(e,r)?f[r]||n(o[r]):(f[r]=!0,k(t)))})),i(e,(function(n){void 0!==o[n]||u(o,n)||(f[n]=!1,k(t))}));else if(5===c){if(a(t)&&(k(t),f.length=!0),o.length<e.length)for(var s=o.length;s<e.length;s++)f[s]=!1;else for(var v=e.length;v<o.length;v++)f[v]=!0;for(var p=Math.min(o.length,e.length),l=0;l<p;l++)o.hasOwnProperty(l)||(f[l]=!0),void 0===f[l]&&n(o[l])}}}}(n.p[0]),e(n.p))},K:function(n){return 4===n.i?o(n):a(n)}})}function T(){function e(n){if(!t(n))return n;if(Array.isArray(n))return n.map(e);if(s(n))return new Map(Array.from(n.entries()).map((function(n){return[n[0],e(n[1])]})));if(v(n))return new Set(Array.from(n).map(e));var r=Object.create(Object.getPrototypeOf(n));for(var i in n)r[i]=e(n[i]);return u(n,L)&&(r[L]=n[L]),r}function f(n){return r(n)?e(n):n}var c=\"add\";m(\"Patches\",{$:function(r,t){return t.forEach((function(t){for(var i=t.path,u=t.op,f=r,s=0;s<i.length-1;s++){var v=o(f),p=\"\"+i[s];0!==v&&1!==v||\"__proto__\"!==p&&\"constructor\"!==p||n(24),\"function\"==typeof f&&\"prototype\"===p&&n(24),\"object\"!=typeof(f=a(f,p))&&n(15,i.join(\"/\"))}var l=o(f),d=e(t.value),h=i[i.length-1];switch(u){case\"replace\":switch(l){case 2:return f.set(h,d);case 3:n(16);default:return f[h]=d}case c:switch(l){case 1:return\"-\"===h?f.push(d):f.splice(h,0,d);case 2:return f.set(h,d);case 3:return f.add(d);default:return f[h]=d}case\"remove\":switch(l){case 1:return f.splice(h,1);case 2:return f.delete(h);case 3:return f.delete(t.value);default:return delete f[h]}default:n(17,u)}})),r},R:function(n,r,t,e){switch(n.i){case 0:case 4:case 2:return function(n,r,t,e){var o=n.t,s=n.o;i(n.D,(function(n,i){var v=a(o,n),p=a(s,n),l=i?u(o,n)?\"replace\":c:\"remove\";if(v!==p||\"replace\"!==l){var d=r.concat(n);t.push(\"remove\"===l?{op:l,path:d}:{op:l,path:d,value:p}),e.push(l===c?{op:\"remove\",path:d}:\"remove\"===l?{op:c,path:d,value:f(v)}:{op:\"replace\",path:d,value:f(v)})}}))}(n,r,t,e);case 5:case 1:return function(n,r,t,e){var i=n.t,o=n.D,u=n.o;if(u.length<i.length){var a=[u,i];i=a[0],u=a[1];var s=[e,t];t=s[0],e=s[1]}for(var v=0;v<i.length;v++)if(o[v]&&u[v]!==i[v]){var p=r.concat([v]);t.push({op:\"replace\",path:p,value:f(u[v])}),e.push({op:\"replace\",path:p,value:f(i[v])})}for(var l=i.length;l<u.length;l++){var d=r.concat([l]);t.push({op:c,path:d,value:f(u[l])})}i.length<u.length&&e.push({op:\"replace\",path:r.concat([\"length\"]),value:i.length})}(n,r,t,e);case 3:return function(n,r,t,e){var i=n.t,o=n.o,u=0;i.forEach((function(n){if(!o.has(n)){var i=r.concat([u]);t.push({op:\"remove\",path:i,value:n}),e.unshift({op:c,path:i,value:n})}u++})),u=0,o.forEach((function(n){if(!i.has(n)){var o=r.concat([u]);t.push({op:c,path:o,value:n}),e.unshift({op:\"remove\",path:o,value:n})}u++}))}(n,r,t,e)}},M:function(n,r,t,e){t.push({op:\"replace\",path:[],value:r===H?void 0:r}),e.push({op:\"replace\",path:[],value:n})}})}function C(){function r(n,r){function t(){this.constructor=n}a(n,r),n.prototype=(t.prototype=r.prototype,new t)}function e(n){n.o||(n.D=new Map,n.o=new Map(n.t))}function o(n){n.o||(n.o=new Set,n.t.forEach((function(r){if(t(r)){var e=R(n.A.h,r,n);n.p.set(r,e),n.o.add(e)}else n.o.add(r)})))}function u(r){r.O&&n(3,JSON.stringify(p(r)))}var a=function(n,r){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,r){n.__proto__=r}||function(n,r){for(var t in r)r.hasOwnProperty(t)&&(n[t]=r[t])})(n,r)},f=function(){function n(n,r){return this[Q]={i:2,l:r,A:r?r.A:_(),P:!1,I:!1,o:void 0,D:void 0,t:n,k:this,C:!1,O:!1},this}r(n,Map);var o=n.prototype;return Object.defineProperty(o,\"size\",{get:function(){return p(this[Q]).size}}),o.has=function(n){return p(this[Q]).has(n)},o.set=function(n,r){var t=this[Q];return u(t),p(t).has(n)&&p(t).get(n)===r||(e(t),k(t),t.D.set(n,!0),t.o.set(n,r),t.D.set(n,!0)),this},o.delete=function(n){if(!this.has(n))return!1;var r=this[Q];return u(r),e(r),k(r),r.t.has(n)?r.D.set(n,!1):r.D.delete(n),r.o.delete(n),!0},o.clear=function(){var n=this[Q];u(n),p(n).size&&(e(n),k(n),n.D=new Map,i(n.t,(function(r){n.D.set(r,!1)})),n.o.clear())},o.forEach=function(n,r){var t=this;p(this[Q]).forEach((function(e,i){n.call(r,t.get(i),i,t)}))},o.get=function(n){var r=this[Q];u(r);var i=p(r).get(n);if(r.I||!t(i))return i;if(i!==r.t.get(n))return i;var o=R(r.A.h,i,r);return e(r),r.o.set(n,o),o},o.keys=function(){return p(this[Q]).keys()},o.values=function(){var n,r=this,t=this.keys();return(n={})[V]=function(){return r.values()},n.next=function(){var n=t.next();return n.done?n:{done:!1,value:r.get(n.value)}},n},o.entries=function(){var n,r=this,t=this.keys();return(n={})[V]=function(){return r.entries()},n.next=function(){var n=t.next();if(n.done)return n;var e=r.get(n.value);return{done:!1,value:[n.value,e]}},n},o[V]=function(){return this.entries()},n}(),c=function(){function n(n,r){return this[Q]={i:3,l:r,A:r?r.A:_(),P:!1,I:!1,o:void 0,t:n,k:this,p:new Map,O:!1,C:!1},this}r(n,Set);var t=n.prototype;return Object.defineProperty(t,\"size\",{get:function(){return p(this[Q]).size}}),t.has=function(n){var r=this[Q];return u(r),r.o?!!r.o.has(n)||!(!r.p.has(n)||!r.o.has(r.p.get(n))):r.t.has(n)},t.add=function(n){var r=this[Q];return u(r),this.has(n)||(o(r),k(r),r.o.add(n)),this},t.delete=function(n){if(!this.has(n))return!1;var r=this[Q];return u(r),o(r),k(r),r.o.delete(n)||!!r.p.has(n)&&r.o.delete(r.p.get(n))},t.clear=function(){var n=this[Q];u(n),p(n).size&&(o(n),k(n),n.o.clear())},t.values=function(){var n=this[Q];return u(n),o(n),n.o.values()},t.entries=function(){var n=this[Q];return u(n),o(n),n.o.entries()},t.keys=function(){return this.values()},t[V]=function(){return this.values()},t.forEach=function(n,r){for(var t=this.values(),e=t.next();!e.done;)n.call(r,e.value,e.value,this),e=t.next()},n}();m(\"MapSet\",{N:function(n,r){return new f(n,r)},T:function(n,r){return new c(n,r)}})}function J(){N(),C(),T()}function K(n){return n}function $(n){return n}var G,U,W=\"undefined\"!=typeof Symbol&&\"symbol\"==typeof Symbol(\"x\"),X=\"undefined\"!=typeof Map,q=\"undefined\"!=typeof Set,B=\"undefined\"!=typeof Proxy&&void 0!==Proxy.revocable&&\"undefined\"!=typeof Reflect,H=W?Symbol.for(\"immer-nothing\"):((G={})[\"immer-nothing\"]=!0,G),L=W?Symbol.for(\"immer-draftable\"):\"__$immer_draftable\",Q=W?Symbol.for(\"immer-state\"):\"__$immer_state\",V=\"undefined\"!=typeof Symbol&&Symbol.iterator||\"@@iterator\",Y={0:\"Illegal state\",1:\"Immer drafts cannot have computed properties\",2:\"This object has been frozen and should not be mutated\",3:function(n){return\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \"+n},4:\"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",5:\"Immer forbids circular references\",6:\"The first or second argument to `produce` must be a function\",7:\"The third argument to `produce` must be a function or undefined\",8:\"First argument to `createDraft` must be a plain object, an array, or an immerable object\",9:\"First argument to `finishDraft` must be a draft returned by `createDraft`\",10:\"The given draft is already finalized\",11:\"Object.defineProperty() cannot be used on an Immer draft\",12:\"Object.setPrototypeOf() cannot be used on an Immer draft\",13:\"Immer only supports deleting array indices\",14:\"Immer only supports setting array indices and the 'length' property\",15:function(n){return\"Cannot apply patch, path doesn't resolve: \"+n},16:'Sets cannot have \"replace\" patches.',17:function(n){return\"Unsupported patch operation: \"+n},18:function(n){return\"The plugin for '\"+n+\"' has not been loaded into Immer. To enable the plugin, import and call `enable\"+n+\"()` when initializing your application.\"},20:\"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available\",21:function(n){return\"produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '\"+n+\"'\"},22:function(n){return\"'current' expects a draft, got: \"+n},23:function(n){return\"'original' expects a draft, got: \"+n},24:\"Patching reserved attributes like __proto__, prototype and constructor is not allowed\"},Z=\"\"+Object.prototype.constructor,nn=\"undefined\"!=typeof Reflect&&Reflect.ownKeys?Reflect.ownKeys:void 0!==Object.getOwnPropertySymbols?function(n){return Object.getOwnPropertyNames(n).concat(Object.getOwnPropertySymbols(n))}:Object.getOwnPropertyNames,rn=Object.getOwnPropertyDescriptors||function(n){var r={};return nn(n).forEach((function(t){r[t]=Object.getOwnPropertyDescriptor(n,t)})),r},tn={},en={get:function(n,r){if(r===Q)return n;var e=p(n);if(!u(e,r))return function(n,r,t){var e,i=I(r,t);return i?\"value\"in i?i.value:null===(e=i.get)||void 0===e?void 0:e.call(n.k):void 0}(n,e,r);var i=e[r];return n.I||!t(i)?i:i===z(n.t,r)?(E(n),n.o[r]=R(n.A.h,i,n)):i},has:function(n,r){return r in p(n)},ownKeys:function(n){return Reflect.ownKeys(p(n))},set:function(n,r,t){var e=I(p(n),r);if(null==e?void 0:e.set)return e.set.call(n.k,t),!0;if(!n.P){var i=z(p(n),r),o=null==i?void 0:i[Q];if(o&&o.t===t)return n.o[r]=t,n.D[r]=!1,!0;if(c(t,i)&&(void 0!==t||u(n.t,r)))return!0;E(n),k(n)}return n.o[r]===t&&\"number\"!=typeof t&&(void 0!==t||r in n.o)||(n.o[r]=t,n.D[r]=!0,!0)},deleteProperty:function(n,r){return void 0!==z(n.t,r)||r in n.t?(n.D[r]=!1,E(n),k(n)):delete n.D[r],n.o&&delete n.o[r],!0},getOwnPropertyDescriptor:function(n,r){var t=p(n),e=Reflect.getOwnPropertyDescriptor(t,r);return e?{writable:!0,configurable:1!==n.i||\"length\"!==r,enumerable:e.enumerable,value:t[r]}:e},defineProperty:function(){n(11)},getPrototypeOf:function(n){return Object.getPrototypeOf(n.t)},setPrototypeOf:function(){n(12)}},on={};i(en,(function(n,r){on[n]=function(){return arguments[0]=arguments[0][0],r.apply(this,arguments)}})),on.deleteProperty=function(r,t){return true&&isNaN(parseInt(t))&&n(13),on.set.call(this,r,t,void 0)},on.set=function(r,t,e){return true&&\"length\"!==t&&isNaN(parseInt(t))&&n(14),en.set.call(this,r[0],t,e,r[0])};var un=function(){function e(r){var e=this;this.g=B,this.F=!0,this.produce=function(r,i,o){if(\"function\"==typeof r&&\"function\"!=typeof i){var u=i;i=r;var a=e;return function(n){var r=this;void 0===n&&(n=u);for(var t=arguments.length,e=Array(t>1?t-1:0),o=1;o<t;o++)e[o-1]=arguments[o];return a.produce(n,(function(n){var t;return(t=i).call.apply(t,[r,n].concat(e))}))}}var f;if(\"function\"!=typeof i&&n(6),void 0!==o&&\"function\"!=typeof o&&n(7),t(r)){var c=w(e),s=R(e,r,void 0),v=!0;try{f=i(s),v=!1}finally{v?O(c):g(c)}return\"undefined\"!=typeof Promise&&f instanceof Promise?f.then((function(n){return j(c,o),P(n,c)}),(function(n){throw O(c),n})):(j(c,o),P(f,c))}if(!r||\"object\"!=typeof r){if(void 0===(f=i(r))&&(f=r),f===H&&(f=void 0),e.F&&d(f,!0),o){var p=[],l=[];b(\"Patches\").M(r,f,p,l),o(p,l)}return f}n(21,r)},this.produceWithPatches=function(n,r){if(\"function\"==typeof n)return function(r){for(var t=arguments.length,i=Array(t>1?t-1:0),o=1;o<t;o++)i[o-1]=arguments[o];return e.produceWithPatches(r,(function(r){return n.apply(void 0,[r].concat(i))}))};var t,i,o=e.produce(n,r,(function(n,r){t=n,i=r}));return\"undefined\"!=typeof Promise&&o instanceof Promise?o.then((function(n){return[n,t,i]})):[o,t,i]},\"boolean\"==typeof(null==r?void 0:r.useProxies)&&this.setUseProxies(r.useProxies),\"boolean\"==typeof(null==r?void 0:r.autoFreeze)&&this.setAutoFreeze(r.autoFreeze)}var i=e.prototype;return i.createDraft=function(e){t(e)||n(8),r(e)&&(e=D(e));var i=w(this),o=R(this,e,void 0);return o[Q].C=!0,g(i),o},i.finishDraft=function(r,t){var e=r&&r[Q]; true&&(e&&e.C||n(9),e.I&&n(10));var i=e.A;return j(i,t),P(void 0,i)},i.setAutoFreeze=function(n){this.F=n},i.setUseProxies=function(r){r&&!B&&n(20),this.g=r},i.applyPatches=function(n,t){var e;for(e=t.length-1;e>=0;e--){var i=t[e];if(0===i.path.length&&\"replace\"===i.op){n=i.value;break}}e>-1&&(t=t.slice(e+1));var o=b(\"Patches\").$;return r(n)?o(n,t):this.produce(n,(function(n){return o(n,t)}))},e}(),an=new un,fn=an.produce,cn=an.produceWithPatches.bind(an),sn=an.setAutoFreeze.bind(an),vn=an.setUseProxies.bind(an),pn=an.applyPatches.bind(an),ln=an.createDraft.bind(an),dn=an.finishDraft.bind(an);/* harmony default export */ __webpack_exports__[\"default\"] = (fn);\n//# sourceMappingURL=immer.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaW1tZXIvZGlzdC9pbW1lci5lc20ubWpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLGNBQWMsa0RBQWtELElBQUksd0JBQXdCLEdBQUcsSUFBbUMsRUFBRSw2RUFBNkUsMEJBQTBCLDZFQUE2RSxnQkFBZ0IscUVBQXFFLGNBQWMsa0JBQWtCLGNBQWMsd0JBQXdCLG1DQUFtQywrQkFBK0IscUJBQXFCLGlFQUFpRSx1RUFBdUUsK0RBQStELGNBQWMsNEJBQTRCLGtCQUFrQix1RUFBdUUsbUNBQW1DLDRCQUE0QixnQkFBZ0IsR0FBRyxjQUFjLFdBQVcsNERBQTRELGdCQUFnQixtRUFBbUUsZ0JBQWdCLDhCQUE4QixrQkFBa0IsV0FBVyxxREFBcUQsZ0JBQWdCLHdDQUF3QyxjQUFjLDJCQUEyQixjQUFjLDJCQUEyQixjQUFjLGdCQUFnQixjQUFjLHlEQUF5RCxZQUFZLFlBQVksb0JBQW9CLFdBQVcsS0FBSyxrQkFBa0IsMEVBQTBFLCtEQUErRCxFQUFFLGlEQUFpRCxnQkFBZ0IsK0hBQStILGVBQWUsU0FBUyxhQUFhLEtBQUssY0FBYyx1REFBdUQsY0FBYyxZQUFZLG9CQUFvQixnQkFBZ0IsaUJBQWlCLGFBQWEsTUFBTSxNQUFtQyxZQUFZLGdCQUFnQixzQ0FBc0MsY0FBYyw2QkFBNkIsY0FBYyxlQUFlLGNBQWMsVUFBVSx1QkFBdUIsY0FBYyxXQUFXLDhCQUE4QixnQkFBZ0IsZUFBZSxpQ0FBaUMsNktBQTZLLGtCQUFrQixpQkFBaUIsV0FBVyxnQ0FBZ0Msc0JBQXNCLFFBQVEsb0JBQW9CLCtCQUErQixTQUFTLGVBQWUsc0NBQXNDLHNDQUFzQyxzQkFBc0IsaURBQWlELFdBQVcsd0JBQXdCLEdBQUcsS0FBbUMsb0JBQW9CLHlEQUF5RCx5QkFBeUIsT0FBTyxnQkFBZ0Isd0JBQXdCLHlCQUF5QixrQkFBa0Isc0NBQXNDLGdCQUFnQixXQUFXLG9CQUFvQixnQkFBZ0IsNkNBQTZDLEVBQUUsRUFBRSwyQ0FBMkMsY0FBYyw0QkFBNEIsY0FBYywwQkFBMEIsY0FBYyxrQkFBa0Isa0JBQWtCLHdFQUF3RSwwQkFBMEIsa0NBQWtDLG1DQUFtQyxVQUFVLGdCQUFnQixnREFBZ0QscUJBQXFCLHNCQUFzQiw4QkFBOEIsY0FBYyxtQ0FBbUMsa0JBQWtCLG9CQUFvQixNQUFNLDRDQUE0Qyx1QkFBdUIsY0FBYywwQkFBMEIsNkJBQTZCLHNCQUFzQixJQUFJLGdCQUFnQixVQUFVLHlCQUF5Qiw0QkFBNEIsWUFBWSxhQUFhLGdCQUFnQixXQUFXLGdDQUFnQyw0Q0FBNEMsY0FBYyxNQUFNLEtBQW1DLG1CQUFtQixpQkFBaUIsY0FBYyxLQUFtQyxzQkFBc0IsR0FBRyxjQUFjLHFCQUFxQixLQUFLLEtBQUssY0FBYyxvQkFBb0Isa0JBQWtCLE1BQU0sb0JBQW9CLGNBQWMseUNBQXlDLEtBQUssS0FBSyxXQUFXLFVBQVUsV0FBVyxnQ0FBZ0MscUJBQXFCLCtCQUErQixhQUFhLHVDQUF1QyxjQUFjLFVBQVUsa0NBQWtDLG9EQUFvRCxzQkFBc0IsWUFBWSxXQUFXLHFDQUFxQyxTQUFTLGNBQWMsK0JBQStCLFNBQVMsU0FBUyxnQkFBZ0IsdUNBQXVDLE1BQU0sOEJBQThCLFdBQVcsMENBQTBDLFNBQVMsWUFBWSxZQUFZLG9CQUFvQixXQUFXLEtBQUssV0FBVywrQkFBK0IsaURBQWlELFNBQVMsa0NBQWtDLCtCQUErQixrQ0FBa0Msb0JBQW9CLElBQUksbUJBQW1CLCtDQUErQywwQkFBMEIsV0FBVyxNQUFNLDRCQUE0QiwwQkFBMEIsNERBQTRELG9CQUFvQixzQ0FBc0MsR0FBRyxlQUFlLGlFQUFpRSxXQUFXLFlBQVksd0JBQXdCLFdBQVcsWUFBWSwwQ0FBMEMsSUFBSSw2REFBNkQsaUJBQWlCLGVBQWUsMEJBQTBCLEVBQUUsYUFBYSxjQUFjLGtCQUFrQixvQ0FBb0MsZ0VBQWdFLHFCQUFxQixJQUFJLDZDQUE2Qyw4Q0FBOEMsNEJBQTRCLDZCQUE2QixjQUFjLG1CQUFtQixZQUFZLGFBQWEsZ0JBQWdCLDhCQUE4QixnQ0FBZ0MsYUFBYSxLQUFLLHFCQUFxQixtSkFBbUosd0NBQXdDLFVBQVUsd0JBQXdCLHlCQUF5QixhQUFhLHNCQUFzQixpQkFBaUIsK0NBQStDLHlCQUF5Qix1QkFBdUIsc0JBQXNCLHVCQUF1Qiw0QkFBNEIsMEJBQTBCLGdDQUFnQywyQkFBMkIsaUJBQWlCLEtBQUsscUJBQXFCLFlBQVksOENBQThDLGdCQUFnQixxQkFBcUIsc0RBQXNELHlCQUF5QixrQkFBa0IscUJBQXFCLFlBQVksRUFBRSxvQkFBb0IsZ0JBQWdCLG1CQUFtQixlQUFlLHVCQUF1QixFQUFFLCtCQUErQixHQUFHLEdBQUcsVUFBVSx1Q0FBdUMsc0JBQXNCLHNCQUFzQixZQUFZLGNBQWMsWUFBWSxjQUFjLFlBQVksV0FBVywwQkFBMEIsb0JBQW9CLFFBQVEsa0NBQWtDLFVBQVUsa0NBQWtDLEVBQUUsbUJBQW1CLFdBQVcsS0FBSyxvQkFBb0IsUUFBUSwwQkFBMEIsRUFBRSwyQkFBMkIsc0RBQXNELEVBQUUsVUFBVSxnQ0FBZ0Msb0JBQW9CLHVCQUF1QixjQUFjLG9CQUFvQixRQUFRLDJCQUEyQixhQUFhLG9CQUFvQixFQUFFLElBQUksOEJBQThCLGNBQWMsb0JBQW9CLFFBQVEsb0JBQW9CLGFBQWEsMkJBQTJCLEVBQUUsSUFBSSxHQUFHLFdBQVcscUJBQXFCLFFBQVEsMENBQTBDLFVBQVUsNkJBQTZCLEdBQUcsRUFBRSxhQUFhLGdCQUFnQixhQUFhLG1CQUFtQixtREFBbUQsY0FBYyxvQ0FBb0MsY0FBYywyQ0FBMkMsU0FBUyxtQkFBbUIsd0JBQXdCLGdCQUFnQixJQUFJLGNBQWMsK0JBQStCLG9CQUFvQixpQ0FBaUMsYUFBYSxnQ0FBZ0MsY0FBYyxnQkFBZ0IsZ0RBQWdELE9BQU8sY0FBYyxnQkFBZ0IsZ0JBQWdCLHFFQUFxRSxNQUFNLFNBQVMsa0JBQWtCLHVDQUF1QyxlQUFlLHdCQUF3QixvQkFBb0IseUJBQXlCLHFCQUFxQixjQUFjLG9HQUFvRyxzQkFBc0IseUJBQXlCLGNBQWMsOEVBQThFLG9CQUFvQixjQUFjLDBEQUEwRCxjQUFjLGdCQUFnQix5QkFBeUIsV0FBVyxrQ0FBa0MsdUJBQXVCLEdBQUcsbUJBQW1CLGNBQWMsS0FBSyxrQkFBa0IsdUJBQXVCLDJCQUEyQixtQkFBbUIsMkJBQTJCLG1CQUFtQix5QkFBeUIscUJBQXFCLDJCQUEyQixXQUFXLGdCQUFnQixrQkFBa0IsbUJBQW1CLGVBQWUsaUJBQWlCLDhCQUE4QixHQUFHLHNCQUFzQiwyQkFBMkIsV0FBVyxnQkFBZ0IsbUJBQW1CLG1CQUFtQixlQUFlLG1CQUFtQixxQkFBcUIsT0FBTywyQkFBMkIsR0FBRyxpQkFBaUIsc0JBQXNCLEdBQUcsZ0JBQWdCLGdCQUFnQixnQkFBZ0Isc0VBQXNFLE1BQU0sU0FBUyxrQkFBa0IsdUNBQXVDLGVBQWUsd0JBQXdCLG9CQUFvQixjQUFjLDhFQUE4RSxtQkFBbUIsY0FBYyxxREFBcUQsc0JBQXNCLHlCQUF5QixjQUFjLDBFQUEwRSxvQkFBb0IsY0FBYyx3Q0FBd0MscUJBQXFCLGNBQWMsOEJBQThCLHNCQUFzQixjQUFjLCtCQUErQixtQkFBbUIscUJBQXFCLGlCQUFpQixxQkFBcUIseUJBQXlCLG1DQUFtQyxRQUFRLDJDQUEyQyxHQUFHLEdBQUcsWUFBWSxnQkFBZ0Isa0JBQWtCLGlCQUFpQixtQkFBbUIsRUFBRSxhQUFhLFlBQVksY0FBYyxTQUFTLGNBQWMsU0FBUyxnUEFBZ1AsOExBQThMLDJJQUEySSwrSEFBK0gsMnZCQUEydkIscURBQXFELHlEQUF5RCx3Q0FBd0MsZ0JBQWdCLHlKQUF5SiwrRkFBK0Ysa0tBQWtLLGdCQUFnQiwyQ0FBMkMsZ0JBQWdCLDRDQUE0Qyw0RkFBNEYscUpBQXFKLDZFQUE2RSw2RUFBNkUsU0FBUyxrQ0FBa0MsMENBQTBDLEtBQUssTUFBTSxLQUFLLGtCQUFrQixrQkFBa0IsV0FBVyxrQ0FBa0MsZUFBZSxvRkFBb0YsUUFBUSxXQUFXLDhEQUE4RCxtQkFBbUIsaUJBQWlCLHFCQUFxQiw2QkFBNkIscUJBQXFCLGdCQUFnQixvREFBb0QsU0FBUyxzQ0FBc0MsMkNBQTJDLDJDQUEyQyxVQUFVLHVGQUF1Riw4QkFBOEIsNkZBQTZGLHdDQUF3QyxtREFBbUQsVUFBVSxrRkFBa0YsR0FBRywyQkFBMkIsTUFBTSw0QkFBNEIsa0NBQWtDLDJCQUEyQixPQUFPLE9BQU8sb0JBQW9CLGlCQUFpQiw2REFBNkQsbUNBQW1DLE1BQU0sS0FBbUMseURBQXlELHdCQUF3QixNQUFNLEtBQW1DLDJFQUEyRSxrQkFBa0IsY0FBYyxXQUFXLGdEQUFnRCwrQ0FBK0MsUUFBUSxJQUFJLFFBQVEsbUJBQW1CLFdBQVcsa0JBQWtCLGtEQUFrRCxJQUFJLHdCQUF3QixnQ0FBZ0MsTUFBTSwwQ0FBMEMsSUFBSSxNQUFNLDJFQUEyRSxnQ0FBZ0MsSUFBSSxZQUFZLFFBQVEsWUFBWSw0RUFBNEUscUJBQXFCLGVBQWUsYUFBYSxtQkFBbUIsMkJBQTJCLDhEQUE4RCxjQUFjLCtCQUErQixTQUFTLFFBQVEsdUNBQXVDLDJDQUEyQyxrREFBa0QsSUFBSSx3QkFBd0IsMkNBQTJDLHFDQUFxQyxJQUFJLHVDQUF1QyxRQUFRLEdBQUcsNEVBQTRFLGNBQWMsV0FBVyxtS0FBbUssa0JBQWtCLGlDQUFpQywwQkFBMEIsaUNBQWlDLHdCQUF3Qiw2QkFBNkIsY0FBYyxLQUFtQyw0QkFBNEIsVUFBVSwwQkFBMEIsNkJBQTZCLFNBQVMsNkJBQTZCLHNCQUFzQiw4QkFBOEIsTUFBTSxpQkFBaUIsS0FBSyxLQUFLLFdBQVcsd0NBQXdDLFVBQVUsT0FBTyx1QkFBdUIscUJBQXFCLCtDQUErQyxjQUFjLEdBQUcsR0FBRyx5TUFBeU0sK0RBQWUsRUFBRSxFQUF3VztBQUMvempCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9pbW1lci9kaXN0L2ltbWVyLmVzbS5tanM/N2UwNSJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBuKG4pe2Zvcih2YXIgcj1hcmd1bWVudHMubGVuZ3RoLHQ9QXJyYXkocj4xP3ItMTowKSxlPTE7ZTxyO2UrKyl0W2UtMV09YXJndW1lbnRzW2VdO2lmKFwicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYpe3ZhciBpPVlbbl0sbz1pP1wiZnVuY3Rpb25cIj09dHlwZW9mIGk/aS5hcHBseShudWxsLHQpOmk6XCJ1bmtub3duIGVycm9yIG5yOiBcIituO3Rocm93IEVycm9yKFwiW0ltbWVyXSBcIitvKX10aHJvdyBFcnJvcihcIltJbW1lcl0gbWluaWZpZWQgZXJyb3IgbnI6IFwiK24rKHQubGVuZ3RoP1wiIFwiK3QubWFwKChmdW5jdGlvbihuKXtyZXR1cm5cIidcIituK1wiJ1wifSkpLmpvaW4oXCIsXCIpOlwiXCIpK1wiLiBGaW5kIHRoZSBmdWxsIGVycm9yIGF0OiBodHRwczovL2JpdC5seS8zY1hFS1dmXCIpfWZ1bmN0aW9uIHIobil7cmV0dXJuISFuJiYhIW5bUV19ZnVuY3Rpb24gdChuKXtyZXR1cm4hIW4mJihmdW5jdGlvbihuKXtpZighbnx8XCJvYmplY3RcIiE9dHlwZW9mIG4pcmV0dXJuITE7dmFyIHI9T2JqZWN0LmdldFByb3RvdHlwZU9mKG4pO2lmKG51bGw9PT1yKXJldHVybiEwO3ZhciB0PU9iamVjdC5oYXNPd25Qcm9wZXJ0eS5jYWxsKHIsXCJjb25zdHJ1Y3RvclwiKSYmci5jb25zdHJ1Y3RvcjtyZXR1cm4gdD09PU9iamVjdHx8XCJmdW5jdGlvblwiPT10eXBlb2YgdCYmRnVuY3Rpb24udG9TdHJpbmcuY2FsbCh0KT09PVp9KG4pfHxBcnJheS5pc0FycmF5KG4pfHwhIW5bTF18fCEhbi5jb25zdHJ1Y3RvcltMXXx8cyhuKXx8dihuKSl9ZnVuY3Rpb24gZSh0KXtyZXR1cm4gcih0KXx8bigyMyx0KSx0W1FdLnR9ZnVuY3Rpb24gaShuLHIsdCl7dm9pZCAwPT09dCYmKHQ9ITEpLDA9PT1vKG4pPyh0P09iamVjdC5rZXlzOm5uKShuKS5mb3JFYWNoKChmdW5jdGlvbihlKXt0JiZcInN5bWJvbFwiPT10eXBlb2YgZXx8cihlLG5bZV0sbil9KSk6bi5mb3JFYWNoKChmdW5jdGlvbih0LGUpe3JldHVybiByKGUsdCxuKX0pKX1mdW5jdGlvbiBvKG4pe3ZhciByPW5bUV07cmV0dXJuIHI/ci5pPjM/ci5pLTQ6ci5pOkFycmF5LmlzQXJyYXkobik/MTpzKG4pPzI6dihuKT8zOjB9ZnVuY3Rpb24gdShuLHIpe3JldHVybiAyPT09byhuKT9uLmhhcyhyKTpPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobixyKX1mdW5jdGlvbiBhKG4scil7cmV0dXJuIDI9PT1vKG4pP24uZ2V0KHIpOm5bcl19ZnVuY3Rpb24gZihuLHIsdCl7dmFyIGU9byhuKTsyPT09ZT9uLnNldChyLHQpOjM9PT1lPyhuLmRlbGV0ZShyKSxuLmFkZCh0KSk6bltyXT10fWZ1bmN0aW9uIGMobixyKXtyZXR1cm4gbj09PXI/MCE9PW58fDEvbj09MS9yOm4hPW4mJnIhPXJ9ZnVuY3Rpb24gcyhuKXtyZXR1cm4gWCYmbiBpbnN0YW5jZW9mIE1hcH1mdW5jdGlvbiB2KG4pe3JldHVybiBxJiZuIGluc3RhbmNlb2YgU2V0fWZ1bmN0aW9uIHAobil7cmV0dXJuIG4ub3x8bi50fWZ1bmN0aW9uIGwobil7aWYoQXJyYXkuaXNBcnJheShuKSlyZXR1cm4gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwobik7dmFyIHI9cm4obik7ZGVsZXRlIHJbUV07Zm9yKHZhciB0PW5uKHIpLGU9MDtlPHQubGVuZ3RoO2UrKyl7dmFyIGk9dFtlXSxvPXJbaV07ITE9PT1vLndyaXRhYmxlJiYoby53cml0YWJsZT0hMCxvLmNvbmZpZ3VyYWJsZT0hMCksKG8uZ2V0fHxvLnNldCkmJihyW2ldPXtjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITAsZW51bWVyYWJsZTpvLmVudW1lcmFibGUsdmFsdWU6bltpXX0pfXJldHVybiBPYmplY3QuY3JlYXRlKE9iamVjdC5nZXRQcm90b3R5cGVPZihuKSxyKX1mdW5jdGlvbiBkKG4sZSl7cmV0dXJuIHZvaWQgMD09PWUmJihlPSExKSx5KG4pfHxyKG4pfHwhdChuKT9uOihvKG4pPjEmJihuLnNldD1uLmFkZD1uLmNsZWFyPW4uZGVsZXRlPWgpLE9iamVjdC5mcmVlemUobiksZSYmaShuLChmdW5jdGlvbihuLHIpe3JldHVybiBkKHIsITApfSksITApLG4pfWZ1bmN0aW9uIGgoKXtuKDIpfWZ1bmN0aW9uIHkobil7cmV0dXJuIG51bGw9PW58fFwib2JqZWN0XCIhPXR5cGVvZiBufHxPYmplY3QuaXNGcm96ZW4obil9ZnVuY3Rpb24gYihyKXt2YXIgdD10bltyXTtyZXR1cm4gdHx8bigxOCxyKSx0fWZ1bmN0aW9uIG0obixyKXt0bltuXXx8KHRuW25dPXIpfWZ1bmN0aW9uIF8oKXtyZXR1cm5cInByb2R1Y3Rpb25cIj09PXByb2Nlc3MuZW52Lk5PREVfRU5WfHxVfHxuKDApLFV9ZnVuY3Rpb24gaihuLHIpe3ImJihiKFwiUGF0Y2hlc1wiKSxuLnU9W10sbi5zPVtdLG4udj1yKX1mdW5jdGlvbiBPKG4pe2cobiksbi5wLmZvckVhY2goUyksbi5wPW51bGx9ZnVuY3Rpb24gZyhuKXtuPT09VSYmKFU9bi5sKX1mdW5jdGlvbiB3KG4pe3JldHVybiBVPXtwOltdLGw6VSxoOm4sbTohMCxfOjB9fWZ1bmN0aW9uIFMobil7dmFyIHI9bltRXTswPT09ci5pfHwxPT09ci5pP3IuaigpOnIuTz0hMH1mdW5jdGlvbiBQKHIsZSl7ZS5fPWUucC5sZW5ndGg7dmFyIGk9ZS5wWzBdLG89dm9pZCAwIT09ciYmciE9PWk7cmV0dXJuIGUuaC5nfHxiKFwiRVM1XCIpLlMoZSxyLG8pLG8/KGlbUV0uUCYmKE8oZSksbig0KSksdChyKSYmKHI9TShlLHIpLGUubHx8eChlLHIpKSxlLnUmJmIoXCJQYXRjaGVzXCIpLk0oaVtRXS50LHIsZS51LGUucykpOnI9TShlLGksW10pLE8oZSksZS51JiZlLnYoZS51LGUucyksciE9PUg/cjp2b2lkIDB9ZnVuY3Rpb24gTShuLHIsdCl7aWYoeShyKSlyZXR1cm4gcjt2YXIgZT1yW1FdO2lmKCFlKXJldHVybiBpKHIsKGZ1bmN0aW9uKGksbyl7cmV0dXJuIEEobixlLHIsaSxvLHQpfSksITApLHI7aWYoZS5BIT09bilyZXR1cm4gcjtpZighZS5QKXJldHVybiB4KG4sZS50LCEwKSxlLnQ7aWYoIWUuSSl7ZS5JPSEwLGUuQS5fLS07dmFyIG89ND09PWUuaXx8NT09PWUuaT9lLm89bChlLmspOmUubztpKDM9PT1lLmk/bmV3IFNldChvKTpvLChmdW5jdGlvbihyLGkpe3JldHVybiBBKG4sZSxvLHIsaSx0KX0pKSx4KG4sbywhMSksdCYmbi51JiZiKFwiUGF0Y2hlc1wiKS5SKGUsdCxuLnUsbi5zKX1yZXR1cm4gZS5vfWZ1bmN0aW9uIEEoZSxpLG8sYSxjLHMpe2lmKFwicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJmM9PT1vJiZuKDUpLHIoYykpe3ZhciB2PU0oZSxjLHMmJmkmJjMhPT1pLmkmJiF1KGkuRCxhKT9zLmNvbmNhdChhKTp2b2lkIDApO2lmKGYobyxhLHYpLCFyKHYpKXJldHVybjtlLm09ITF9aWYodChjKSYmIXkoYykpe2lmKCFlLmguRiYmZS5fPDEpcmV0dXJuO00oZSxjKSxpJiZpLkEubHx8eChlLGMpfX1mdW5jdGlvbiB4KG4scix0KXt2b2lkIDA9PT10JiYodD0hMSksbi5oLkYmJm4ubSYmZChyLHQpfWZ1bmN0aW9uIHoobixyKXt2YXIgdD1uW1FdO3JldHVybih0P3AodCk6bilbcl19ZnVuY3Rpb24gSShuLHIpe2lmKHIgaW4gbilmb3IodmFyIHQ9T2JqZWN0LmdldFByb3RvdHlwZU9mKG4pO3Q7KXt2YXIgZT1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHQscik7aWYoZSlyZXR1cm4gZTt0PU9iamVjdC5nZXRQcm90b3R5cGVPZih0KX19ZnVuY3Rpb24gayhuKXtuLlB8fChuLlA9ITAsbi5sJiZrKG4ubCkpfWZ1bmN0aW9uIEUobil7bi5vfHwobi5vPWwobi50KSl9ZnVuY3Rpb24gUihuLHIsdCl7dmFyIGU9cyhyKT9iKFwiTWFwU2V0XCIpLk4ocix0KTp2KHIpP2IoXCJNYXBTZXRcIikuVChyLHQpOm4uZz9mdW5jdGlvbihuLHIpe3ZhciB0PUFycmF5LmlzQXJyYXkobiksZT17aTp0PzE6MCxBOnI/ci5BOl8oKSxQOiExLEk6ITEsRDp7fSxsOnIsdDpuLGs6bnVsbCxvOm51bGwsajpudWxsLEM6ITF9LGk9ZSxvPWVuO3QmJihpPVtlXSxvPW9uKTt2YXIgdT1Qcm94eS5yZXZvY2FibGUoaSxvKSxhPXUucmV2b2tlLGY9dS5wcm94eTtyZXR1cm4gZS5rPWYsZS5qPWEsZn0ocix0KTpiKFwiRVM1XCIpLkoocix0KTtyZXR1cm4odD90LkE6XygpKS5wLnB1c2goZSksZX1mdW5jdGlvbiBEKGUpe3JldHVybiByKGUpfHxuKDIyLGUpLGZ1bmN0aW9uIG4ocil7aWYoIXQocikpcmV0dXJuIHI7dmFyIGUsdT1yW1FdLGM9byhyKTtpZih1KXtpZighdS5QJiYodS5pPDR8fCFiKFwiRVM1XCIpLksodSkpKXJldHVybiB1LnQ7dS5JPSEwLGU9RihyLGMpLHUuST0hMX1lbHNlIGU9RihyLGMpO3JldHVybiBpKGUsKGZ1bmN0aW9uKHIsdCl7dSYmYSh1LnQscik9PT10fHxmKGUscixuKHQpKX0pKSwzPT09Yz9uZXcgU2V0KGUpOmV9KGUpfWZ1bmN0aW9uIEYobixyKXtzd2l0Y2gocil7Y2FzZSAyOnJldHVybiBuZXcgTWFwKG4pO2Nhc2UgMzpyZXR1cm4gQXJyYXkuZnJvbShuKX1yZXR1cm4gbChuKX1mdW5jdGlvbiBOKCl7ZnVuY3Rpb24gdChuLHIpe3ZhciB0PXNbbl07cmV0dXJuIHQ/dC5lbnVtZXJhYmxlPXI6c1tuXT10PXtjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTpyLGdldDpmdW5jdGlvbigpe3ZhciByPXRoaXNbUV07cmV0dXJuXCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmZihyKSxlbi5nZXQocixuKX0sc2V0OmZ1bmN0aW9uKHIpe3ZhciB0PXRoaXNbUV07XCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmZih0KSxlbi5zZXQodCxuLHIpfX0sdH1mdW5jdGlvbiBlKG4pe2Zvcih2YXIgcj1uLmxlbmd0aC0xO3I+PTA7ci0tKXt2YXIgdD1uW3JdW1FdO2lmKCF0LlApc3dpdGNoKHQuaSl7Y2FzZSA1OmEodCkmJmsodCk7YnJlYWs7Y2FzZSA0Om8odCkmJmsodCl9fX1mdW5jdGlvbiBvKG4pe2Zvcih2YXIgcj1uLnQsdD1uLmssZT1ubih0KSxpPWUubGVuZ3RoLTE7aT49MDtpLS0pe3ZhciBvPWVbaV07aWYobyE9PVEpe3ZhciBhPXJbb107aWYodm9pZCAwPT09YSYmIXUocixvKSlyZXR1cm4hMDt2YXIgZj10W29dLHM9ZiYmZltRXTtpZihzP3MudCE9PWE6IWMoZixhKSlyZXR1cm4hMH19dmFyIHY9ISFyW1FdO3JldHVybiBlLmxlbmd0aCE9PW5uKHIpLmxlbmd0aCsodj8wOjEpfWZ1bmN0aW9uIGEobil7dmFyIHI9bi5rO2lmKHIubGVuZ3RoIT09bi50Lmxlbmd0aClyZXR1cm4hMDt2YXIgdD1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHIsci5sZW5ndGgtMSk7aWYodCYmIXQuZ2V0KXJldHVybiEwO2Zvcih2YXIgZT0wO2U8ci5sZW5ndGg7ZSsrKWlmKCFyLmhhc093blByb3BlcnR5KGUpKXJldHVybiEwO3JldHVybiExfWZ1bmN0aW9uIGYocil7ci5PJiZuKDMsSlNPTi5zdHJpbmdpZnkocChyKSkpfXZhciBzPXt9O20oXCJFUzVcIix7SjpmdW5jdGlvbihuLHIpe3ZhciBlPUFycmF5LmlzQXJyYXkobiksaT1mdW5jdGlvbihuLHIpe2lmKG4pe2Zvcih2YXIgZT1BcnJheShyLmxlbmd0aCksaT0wO2k8ci5sZW5ndGg7aSsrKU9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiXCIraSx0KGksITApKTtyZXR1cm4gZX12YXIgbz1ybihyKTtkZWxldGUgb1tRXTtmb3IodmFyIHU9bm4obyksYT0wO2E8dS5sZW5ndGg7YSsrKXt2YXIgZj11W2FdO29bZl09dChmLG58fCEhb1tmXS5lbnVtZXJhYmxlKX1yZXR1cm4gT2JqZWN0LmNyZWF0ZShPYmplY3QuZ2V0UHJvdG90eXBlT2Yociksbyl9KGUsbiksbz17aTplPzU6NCxBOnI/ci5BOl8oKSxQOiExLEk6ITEsRDp7fSxsOnIsdDpuLGs6aSxvOm51bGwsTzohMSxDOiExfTtyZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KGksUSx7dmFsdWU6byx3cml0YWJsZTohMH0pLGl9LFM6ZnVuY3Rpb24obix0LG8pe28/cih0KSYmdFtRXS5BPT09biYmZShuLnApOihuLnUmJmZ1bmN0aW9uIG4ocil7aWYociYmXCJvYmplY3RcIj09dHlwZW9mIHIpe3ZhciB0PXJbUV07aWYodCl7dmFyIGU9dC50LG89dC5rLGY9dC5ELGM9dC5pO2lmKDQ9PT1jKWkobywoZnVuY3Rpb24ocil7ciE9PVEmJih2b2lkIDAhPT1lW3JdfHx1KGUscik/ZltyXXx8bihvW3JdKTooZltyXT0hMCxrKHQpKSl9KSksaShlLChmdW5jdGlvbihuKXt2b2lkIDAhPT1vW25dfHx1KG8sbil8fChmW25dPSExLGsodCkpfSkpO2Vsc2UgaWYoNT09PWMpe2lmKGEodCkmJihrKHQpLGYubGVuZ3RoPSEwKSxvLmxlbmd0aDxlLmxlbmd0aClmb3IodmFyIHM9by5sZW5ndGg7czxlLmxlbmd0aDtzKyspZltzXT0hMTtlbHNlIGZvcih2YXIgdj1lLmxlbmd0aDt2PG8ubGVuZ3RoO3YrKylmW3ZdPSEwO2Zvcih2YXIgcD1NYXRoLm1pbihvLmxlbmd0aCxlLmxlbmd0aCksbD0wO2w8cDtsKyspby5oYXNPd25Qcm9wZXJ0eShsKXx8KGZbbF09ITApLHZvaWQgMD09PWZbbF0mJm4ob1tsXSl9fX19KG4ucFswXSksZShuLnApKX0sSzpmdW5jdGlvbihuKXtyZXR1cm4gND09PW4uaT9vKG4pOmEobil9fSl9ZnVuY3Rpb24gVCgpe2Z1bmN0aW9uIGUobil7aWYoIXQobikpcmV0dXJuIG47aWYoQXJyYXkuaXNBcnJheShuKSlyZXR1cm4gbi5tYXAoZSk7aWYocyhuKSlyZXR1cm4gbmV3IE1hcChBcnJheS5mcm9tKG4uZW50cmllcygpKS5tYXAoKGZ1bmN0aW9uKG4pe3JldHVybltuWzBdLGUoblsxXSldfSkpKTtpZih2KG4pKXJldHVybiBuZXcgU2V0KEFycmF5LmZyb20obikubWFwKGUpKTt2YXIgcj1PYmplY3QuY3JlYXRlKE9iamVjdC5nZXRQcm90b3R5cGVPZihuKSk7Zm9yKHZhciBpIGluIG4pcltpXT1lKG5baV0pO3JldHVybiB1KG4sTCkmJihyW0xdPW5bTF0pLHJ9ZnVuY3Rpb24gZihuKXtyZXR1cm4gcihuKT9lKG4pOm59dmFyIGM9XCJhZGRcIjttKFwiUGF0Y2hlc1wiLHskOmZ1bmN0aW9uKHIsdCl7cmV0dXJuIHQuZm9yRWFjaCgoZnVuY3Rpb24odCl7Zm9yKHZhciBpPXQucGF0aCx1PXQub3AsZj1yLHM9MDtzPGkubGVuZ3RoLTE7cysrKXt2YXIgdj1vKGYpLHA9XCJcIitpW3NdOzAhPT12JiYxIT09dnx8XCJfX3Byb3RvX19cIiE9PXAmJlwiY29uc3RydWN0b3JcIiE9PXB8fG4oMjQpLFwiZnVuY3Rpb25cIj09dHlwZW9mIGYmJlwicHJvdG90eXBlXCI9PT1wJiZuKDI0KSxcIm9iamVjdFwiIT10eXBlb2YoZj1hKGYscCkpJiZuKDE1LGkuam9pbihcIi9cIikpfXZhciBsPW8oZiksZD1lKHQudmFsdWUpLGg9aVtpLmxlbmd0aC0xXTtzd2l0Y2godSl7Y2FzZVwicmVwbGFjZVwiOnN3aXRjaChsKXtjYXNlIDI6cmV0dXJuIGYuc2V0KGgsZCk7Y2FzZSAzOm4oMTYpO2RlZmF1bHQ6cmV0dXJuIGZbaF09ZH1jYXNlIGM6c3dpdGNoKGwpe2Nhc2UgMTpyZXR1cm5cIi1cIj09PWg/Zi5wdXNoKGQpOmYuc3BsaWNlKGgsMCxkKTtjYXNlIDI6cmV0dXJuIGYuc2V0KGgsZCk7Y2FzZSAzOnJldHVybiBmLmFkZChkKTtkZWZhdWx0OnJldHVybiBmW2hdPWR9Y2FzZVwicmVtb3ZlXCI6c3dpdGNoKGwpe2Nhc2UgMTpyZXR1cm4gZi5zcGxpY2UoaCwxKTtjYXNlIDI6cmV0dXJuIGYuZGVsZXRlKGgpO2Nhc2UgMzpyZXR1cm4gZi5kZWxldGUodC52YWx1ZSk7ZGVmYXVsdDpyZXR1cm4gZGVsZXRlIGZbaF19ZGVmYXVsdDpuKDE3LHUpfX0pKSxyfSxSOmZ1bmN0aW9uKG4scix0LGUpe3N3aXRjaChuLmkpe2Nhc2UgMDpjYXNlIDQ6Y2FzZSAyOnJldHVybiBmdW5jdGlvbihuLHIsdCxlKXt2YXIgbz1uLnQscz1uLm87aShuLkQsKGZ1bmN0aW9uKG4saSl7dmFyIHY9YShvLG4pLHA9YShzLG4pLGw9aT91KG8sbik/XCJyZXBsYWNlXCI6YzpcInJlbW92ZVwiO2lmKHYhPT1wfHxcInJlcGxhY2VcIiE9PWwpe3ZhciBkPXIuY29uY2F0KG4pO3QucHVzaChcInJlbW92ZVwiPT09bD97b3A6bCxwYXRoOmR9OntvcDpsLHBhdGg6ZCx2YWx1ZTpwfSksZS5wdXNoKGw9PT1jP3tvcDpcInJlbW92ZVwiLHBhdGg6ZH06XCJyZW1vdmVcIj09PWw/e29wOmMscGF0aDpkLHZhbHVlOmYodil9OntvcDpcInJlcGxhY2VcIixwYXRoOmQsdmFsdWU6Zih2KX0pfX0pKX0obixyLHQsZSk7Y2FzZSA1OmNhc2UgMTpyZXR1cm4gZnVuY3Rpb24obixyLHQsZSl7dmFyIGk9bi50LG89bi5ELHU9bi5vO2lmKHUubGVuZ3RoPGkubGVuZ3RoKXt2YXIgYT1bdSxpXTtpPWFbMF0sdT1hWzFdO3ZhciBzPVtlLHRdO3Q9c1swXSxlPXNbMV19Zm9yKHZhciB2PTA7djxpLmxlbmd0aDt2KyspaWYob1t2XSYmdVt2XSE9PWlbdl0pe3ZhciBwPXIuY29uY2F0KFt2XSk7dC5wdXNoKHtvcDpcInJlcGxhY2VcIixwYXRoOnAsdmFsdWU6Zih1W3ZdKX0pLGUucHVzaCh7b3A6XCJyZXBsYWNlXCIscGF0aDpwLHZhbHVlOmYoaVt2XSl9KX1mb3IodmFyIGw9aS5sZW5ndGg7bDx1Lmxlbmd0aDtsKyspe3ZhciBkPXIuY29uY2F0KFtsXSk7dC5wdXNoKHtvcDpjLHBhdGg6ZCx2YWx1ZTpmKHVbbF0pfSl9aS5sZW5ndGg8dS5sZW5ndGgmJmUucHVzaCh7b3A6XCJyZXBsYWNlXCIscGF0aDpyLmNvbmNhdChbXCJsZW5ndGhcIl0pLHZhbHVlOmkubGVuZ3RofSl9KG4scix0LGUpO2Nhc2UgMzpyZXR1cm4gZnVuY3Rpb24obixyLHQsZSl7dmFyIGk9bi50LG89bi5vLHU9MDtpLmZvckVhY2goKGZ1bmN0aW9uKG4pe2lmKCFvLmhhcyhuKSl7dmFyIGk9ci5jb25jYXQoW3VdKTt0LnB1c2goe29wOlwicmVtb3ZlXCIscGF0aDppLHZhbHVlOm59KSxlLnVuc2hpZnQoe29wOmMscGF0aDppLHZhbHVlOm59KX11Kyt9KSksdT0wLG8uZm9yRWFjaCgoZnVuY3Rpb24obil7aWYoIWkuaGFzKG4pKXt2YXIgbz1yLmNvbmNhdChbdV0pO3QucHVzaCh7b3A6YyxwYXRoOm8sdmFsdWU6bn0pLGUudW5zaGlmdCh7b3A6XCJyZW1vdmVcIixwYXRoOm8sdmFsdWU6bn0pfXUrK30pKX0obixyLHQsZSl9fSxNOmZ1bmN0aW9uKG4scix0LGUpe3QucHVzaCh7b3A6XCJyZXBsYWNlXCIscGF0aDpbXSx2YWx1ZTpyPT09SD92b2lkIDA6cn0pLGUucHVzaCh7b3A6XCJyZXBsYWNlXCIscGF0aDpbXSx2YWx1ZTpufSl9fSl9ZnVuY3Rpb24gQygpe2Z1bmN0aW9uIHIobixyKXtmdW5jdGlvbiB0KCl7dGhpcy5jb25zdHJ1Y3Rvcj1ufWEobixyKSxuLnByb3RvdHlwZT0odC5wcm90b3R5cGU9ci5wcm90b3R5cGUsbmV3IHQpfWZ1bmN0aW9uIGUobil7bi5vfHwobi5EPW5ldyBNYXAsbi5vPW5ldyBNYXAobi50KSl9ZnVuY3Rpb24gbyhuKXtuLm98fChuLm89bmV3IFNldCxuLnQuZm9yRWFjaCgoZnVuY3Rpb24ocil7aWYodChyKSl7dmFyIGU9UihuLkEuaCxyLG4pO24ucC5zZXQocixlKSxuLm8uYWRkKGUpfWVsc2Ugbi5vLmFkZChyKX0pKSl9ZnVuY3Rpb24gdShyKXtyLk8mJm4oMyxKU09OLnN0cmluZ2lmeShwKHIpKSl9dmFyIGE9ZnVuY3Rpb24obixyKXtyZXR1cm4oYT1PYmplY3Quc2V0UHJvdG90eXBlT2Z8fHtfX3Byb3RvX186W119aW5zdGFuY2VvZiBBcnJheSYmZnVuY3Rpb24obixyKXtuLl9fcHJvdG9fXz1yfXx8ZnVuY3Rpb24obixyKXtmb3IodmFyIHQgaW4gcilyLmhhc093blByb3BlcnR5KHQpJiYoblt0XT1yW3RdKX0pKG4scil9LGY9ZnVuY3Rpb24oKXtmdW5jdGlvbiBuKG4scil7cmV0dXJuIHRoaXNbUV09e2k6MixsOnIsQTpyP3IuQTpfKCksUDohMSxJOiExLG86dm9pZCAwLEQ6dm9pZCAwLHQ6bixrOnRoaXMsQzohMSxPOiExfSx0aGlzfXIobixNYXApO3ZhciBvPW4ucHJvdG90eXBlO3JldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkobyxcInNpemVcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHAodGhpc1tRXSkuc2l6ZX19KSxvLmhhcz1mdW5jdGlvbihuKXtyZXR1cm4gcCh0aGlzW1FdKS5oYXMobil9LG8uc2V0PWZ1bmN0aW9uKG4scil7dmFyIHQ9dGhpc1tRXTtyZXR1cm4gdSh0KSxwKHQpLmhhcyhuKSYmcCh0KS5nZXQobik9PT1yfHwoZSh0KSxrKHQpLHQuRC5zZXQobiwhMCksdC5vLnNldChuLHIpLHQuRC5zZXQobiwhMCkpLHRoaXN9LG8uZGVsZXRlPWZ1bmN0aW9uKG4pe2lmKCF0aGlzLmhhcyhuKSlyZXR1cm4hMTt2YXIgcj10aGlzW1FdO3JldHVybiB1KHIpLGUociksayhyKSxyLnQuaGFzKG4pP3IuRC5zZXQobiwhMSk6ci5ELmRlbGV0ZShuKSxyLm8uZGVsZXRlKG4pLCEwfSxvLmNsZWFyPWZ1bmN0aW9uKCl7dmFyIG49dGhpc1tRXTt1KG4pLHAobikuc2l6ZSYmKGUobiksayhuKSxuLkQ9bmV3IE1hcCxpKG4udCwoZnVuY3Rpb24ocil7bi5ELnNldChyLCExKX0pKSxuLm8uY2xlYXIoKSl9LG8uZm9yRWFjaD1mdW5jdGlvbihuLHIpe3ZhciB0PXRoaXM7cCh0aGlzW1FdKS5mb3JFYWNoKChmdW5jdGlvbihlLGkpe24uY2FsbChyLHQuZ2V0KGkpLGksdCl9KSl9LG8uZ2V0PWZ1bmN0aW9uKG4pe3ZhciByPXRoaXNbUV07dShyKTt2YXIgaT1wKHIpLmdldChuKTtpZihyLkl8fCF0KGkpKXJldHVybiBpO2lmKGkhPT1yLnQuZ2V0KG4pKXJldHVybiBpO3ZhciBvPVIoci5BLmgsaSxyKTtyZXR1cm4gZShyKSxyLm8uc2V0KG4sbyksb30sby5rZXlzPWZ1bmN0aW9uKCl7cmV0dXJuIHAodGhpc1tRXSkua2V5cygpfSxvLnZhbHVlcz1mdW5jdGlvbigpe3ZhciBuLHI9dGhpcyx0PXRoaXMua2V5cygpO3JldHVybihuPXt9KVtWXT1mdW5jdGlvbigpe3JldHVybiByLnZhbHVlcygpfSxuLm5leHQ9ZnVuY3Rpb24oKXt2YXIgbj10Lm5leHQoKTtyZXR1cm4gbi5kb25lP246e2RvbmU6ITEsdmFsdWU6ci5nZXQobi52YWx1ZSl9fSxufSxvLmVudHJpZXM9ZnVuY3Rpb24oKXt2YXIgbixyPXRoaXMsdD10aGlzLmtleXMoKTtyZXR1cm4obj17fSlbVl09ZnVuY3Rpb24oKXtyZXR1cm4gci5lbnRyaWVzKCl9LG4ubmV4dD1mdW5jdGlvbigpe3ZhciBuPXQubmV4dCgpO2lmKG4uZG9uZSlyZXR1cm4gbjt2YXIgZT1yLmdldChuLnZhbHVlKTtyZXR1cm57ZG9uZTohMSx2YWx1ZTpbbi52YWx1ZSxlXX19LG59LG9bVl09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5lbnRyaWVzKCl9LG59KCksYz1mdW5jdGlvbigpe2Z1bmN0aW9uIG4obixyKXtyZXR1cm4gdGhpc1tRXT17aTozLGw6cixBOnI/ci5BOl8oKSxQOiExLEk6ITEsbzp2b2lkIDAsdDpuLGs6dGhpcyxwOm5ldyBNYXAsTzohMSxDOiExfSx0aGlzfXIobixTZXQpO3ZhciB0PW4ucHJvdG90eXBlO3JldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcInNpemVcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHAodGhpc1tRXSkuc2l6ZX19KSx0Lmhhcz1mdW5jdGlvbihuKXt2YXIgcj10aGlzW1FdO3JldHVybiB1KHIpLHIubz8hIXIuby5oYXMobil8fCEoIXIucC5oYXMobil8fCFyLm8uaGFzKHIucC5nZXQobikpKTpyLnQuaGFzKG4pfSx0LmFkZD1mdW5jdGlvbihuKXt2YXIgcj10aGlzW1FdO3JldHVybiB1KHIpLHRoaXMuaGFzKG4pfHwobyhyKSxrKHIpLHIuby5hZGQobikpLHRoaXN9LHQuZGVsZXRlPWZ1bmN0aW9uKG4pe2lmKCF0aGlzLmhhcyhuKSlyZXR1cm4hMTt2YXIgcj10aGlzW1FdO3JldHVybiB1KHIpLG8ociksayhyKSxyLm8uZGVsZXRlKG4pfHwhIXIucC5oYXMobikmJnIuby5kZWxldGUoci5wLmdldChuKSl9LHQuY2xlYXI9ZnVuY3Rpb24oKXt2YXIgbj10aGlzW1FdO3UobikscChuKS5zaXplJiYobyhuKSxrKG4pLG4uby5jbGVhcigpKX0sdC52YWx1ZXM9ZnVuY3Rpb24oKXt2YXIgbj10aGlzW1FdO3JldHVybiB1KG4pLG8obiksbi5vLnZhbHVlcygpfSx0LmVudHJpZXM9ZnVuY3Rpb24oKXt2YXIgbj10aGlzW1FdO3JldHVybiB1KG4pLG8obiksbi5vLmVudHJpZXMoKX0sdC5rZXlzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudmFsdWVzKCl9LHRbVl09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy52YWx1ZXMoKX0sdC5mb3JFYWNoPWZ1bmN0aW9uKG4scil7Zm9yKHZhciB0PXRoaXMudmFsdWVzKCksZT10Lm5leHQoKTshZS5kb25lOyluLmNhbGwocixlLnZhbHVlLGUudmFsdWUsdGhpcyksZT10Lm5leHQoKX0sbn0oKTttKFwiTWFwU2V0XCIse046ZnVuY3Rpb24obixyKXtyZXR1cm4gbmV3IGYobixyKX0sVDpmdW5jdGlvbihuLHIpe3JldHVybiBuZXcgYyhuLHIpfX0pfWZ1bmN0aW9uIEooKXtOKCksQygpLFQoKX1mdW5jdGlvbiBLKG4pe3JldHVybiBufWZ1bmN0aW9uICQobil7cmV0dXJuIG59dmFyIEcsVSxXPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2woXCJ4XCIpLFg9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIE1hcCxxPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBTZXQsQj1cInVuZGVmaW5lZFwiIT10eXBlb2YgUHJveHkmJnZvaWQgMCE9PVByb3h5LnJldm9jYWJsZSYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIFJlZmxlY3QsSD1XP1N5bWJvbC5mb3IoXCJpbW1lci1ub3RoaW5nXCIpOigoRz17fSlbXCJpbW1lci1ub3RoaW5nXCJdPSEwLEcpLEw9Vz9TeW1ib2wuZm9yKFwiaW1tZXItZHJhZnRhYmxlXCIpOlwiX18kaW1tZXJfZHJhZnRhYmxlXCIsUT1XP1N5bWJvbC5mb3IoXCJpbW1lci1zdGF0ZVwiKTpcIl9fJGltbWVyX3N0YXRlXCIsVj1cInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3J8fFwiQEBpdGVyYXRvclwiLFk9ezA6XCJJbGxlZ2FsIHN0YXRlXCIsMTpcIkltbWVyIGRyYWZ0cyBjYW5ub3QgaGF2ZSBjb21wdXRlZCBwcm9wZXJ0aWVzXCIsMjpcIlRoaXMgb2JqZWN0IGhhcyBiZWVuIGZyb3plbiBhbmQgc2hvdWxkIG5vdCBiZSBtdXRhdGVkXCIsMzpmdW5jdGlvbihuKXtyZXR1cm5cIkNhbm5vdCB1c2UgYSBwcm94eSB0aGF0IGhhcyBiZWVuIHJldm9rZWQuIERpZCB5b3UgcGFzcyBhbiBvYmplY3QgZnJvbSBpbnNpZGUgYW4gaW1tZXIgZnVuY3Rpb24gdG8gYW4gYXN5bmMgcHJvY2Vzcz8gXCIrbn0sNDpcIkFuIGltbWVyIHByb2R1Y2VyIHJldHVybmVkIGEgbmV3IHZhbHVlICphbmQqIG1vZGlmaWVkIGl0cyBkcmFmdC4gRWl0aGVyIHJldHVybiBhIG5ldyB2YWx1ZSAqb3IqIG1vZGlmeSB0aGUgZHJhZnQuXCIsNTpcIkltbWVyIGZvcmJpZHMgY2lyY3VsYXIgcmVmZXJlbmNlc1wiLDY6XCJUaGUgZmlyc3Qgb3Igc2Vjb25kIGFyZ3VtZW50IHRvIGBwcm9kdWNlYCBtdXN0IGJlIGEgZnVuY3Rpb25cIiw3OlwiVGhlIHRoaXJkIGFyZ3VtZW50IHRvIGBwcm9kdWNlYCBtdXN0IGJlIGEgZnVuY3Rpb24gb3IgdW5kZWZpbmVkXCIsODpcIkZpcnN0IGFyZ3VtZW50IHRvIGBjcmVhdGVEcmFmdGAgbXVzdCBiZSBhIHBsYWluIG9iamVjdCwgYW4gYXJyYXksIG9yIGFuIGltbWVyYWJsZSBvYmplY3RcIiw5OlwiRmlyc3QgYXJndW1lbnQgdG8gYGZpbmlzaERyYWZ0YCBtdXN0IGJlIGEgZHJhZnQgcmV0dXJuZWQgYnkgYGNyZWF0ZURyYWZ0YFwiLDEwOlwiVGhlIGdpdmVuIGRyYWZ0IGlzIGFscmVhZHkgZmluYWxpemVkXCIsMTE6XCJPYmplY3QuZGVmaW5lUHJvcGVydHkoKSBjYW5ub3QgYmUgdXNlZCBvbiBhbiBJbW1lciBkcmFmdFwiLDEyOlwiT2JqZWN0LnNldFByb3RvdHlwZU9mKCkgY2Fubm90IGJlIHVzZWQgb24gYW4gSW1tZXIgZHJhZnRcIiwxMzpcIkltbWVyIG9ubHkgc3VwcG9ydHMgZGVsZXRpbmcgYXJyYXkgaW5kaWNlc1wiLDE0OlwiSW1tZXIgb25seSBzdXBwb3J0cyBzZXR0aW5nIGFycmF5IGluZGljZXMgYW5kIHRoZSAnbGVuZ3RoJyBwcm9wZXJ0eVwiLDE1OmZ1bmN0aW9uKG4pe3JldHVyblwiQ2Fubm90IGFwcGx5IHBhdGNoLCBwYXRoIGRvZXNuJ3QgcmVzb2x2ZTogXCIrbn0sMTY6J1NldHMgY2Fubm90IGhhdmUgXCJyZXBsYWNlXCIgcGF0Y2hlcy4nLDE3OmZ1bmN0aW9uKG4pe3JldHVyblwiVW5zdXBwb3J0ZWQgcGF0Y2ggb3BlcmF0aW9uOiBcIitufSwxODpmdW5jdGlvbihuKXtyZXR1cm5cIlRoZSBwbHVnaW4gZm9yICdcIituK1wiJyBoYXMgbm90IGJlZW4gbG9hZGVkIGludG8gSW1tZXIuIFRvIGVuYWJsZSB0aGUgcGx1Z2luLCBpbXBvcnQgYW5kIGNhbGwgYGVuYWJsZVwiK24rXCIoKWAgd2hlbiBpbml0aWFsaXppbmcgeW91ciBhcHBsaWNhdGlvbi5cIn0sMjA6XCJDYW5ub3QgdXNlIHByb3hpZXMgaWYgUHJveHksIFByb3h5LnJldm9jYWJsZSBvciBSZWZsZWN0IGFyZSBub3QgYXZhaWxhYmxlXCIsMjE6ZnVuY3Rpb24obil7cmV0dXJuXCJwcm9kdWNlIGNhbiBvbmx5IGJlIGNhbGxlZCBvbiB0aGluZ3MgdGhhdCBhcmUgZHJhZnRhYmxlOiBwbGFpbiBvYmplY3RzLCBhcnJheXMsIE1hcCwgU2V0IG9yIGNsYXNzZXMgdGhhdCBhcmUgbWFya2VkIHdpdGggJ1tpbW1lcmFibGVdOiB0cnVlJy4gR290ICdcIituK1wiJ1wifSwyMjpmdW5jdGlvbihuKXtyZXR1cm5cIidjdXJyZW50JyBleHBlY3RzIGEgZHJhZnQsIGdvdDogXCIrbn0sMjM6ZnVuY3Rpb24obil7cmV0dXJuXCInb3JpZ2luYWwnIGV4cGVjdHMgYSBkcmFmdCwgZ290OiBcIitufSwyNDpcIlBhdGNoaW5nIHJlc2VydmVkIGF0dHJpYnV0ZXMgbGlrZSBfX3Byb3RvX18sIHByb3RvdHlwZSBhbmQgY29uc3RydWN0b3IgaXMgbm90IGFsbG93ZWRcIn0sWj1cIlwiK09iamVjdC5wcm90b3R5cGUuY29uc3RydWN0b3Isbm49XCJ1bmRlZmluZWRcIiE9dHlwZW9mIFJlZmxlY3QmJlJlZmxlY3Qub3duS2V5cz9SZWZsZWN0Lm93bktleXM6dm9pZCAwIT09T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scz9mdW5jdGlvbihuKXtyZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMobikuY29uY2F0KE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMobikpfTpPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyxybj1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yc3x8ZnVuY3Rpb24obil7dmFyIHI9e307cmV0dXJuIG5uKG4pLmZvckVhY2goKGZ1bmN0aW9uKHQpe3JbdF09T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihuLHQpfSkpLHJ9LHRuPXt9LGVuPXtnZXQ6ZnVuY3Rpb24obixyKXtpZihyPT09USlyZXR1cm4gbjt2YXIgZT1wKG4pO2lmKCF1KGUscikpcmV0dXJuIGZ1bmN0aW9uKG4scix0KXt2YXIgZSxpPUkocix0KTtyZXR1cm4gaT9cInZhbHVlXCJpbiBpP2kudmFsdWU6bnVsbD09PShlPWkuZ2V0KXx8dm9pZCAwPT09ZT92b2lkIDA6ZS5jYWxsKG4uayk6dm9pZCAwfShuLGUscik7dmFyIGk9ZVtyXTtyZXR1cm4gbi5JfHwhdChpKT9pOmk9PT16KG4udCxyKT8oRShuKSxuLm9bcl09UihuLkEuaCxpLG4pKTppfSxoYXM6ZnVuY3Rpb24obixyKXtyZXR1cm4gciBpbiBwKG4pfSxvd25LZXlzOmZ1bmN0aW9uKG4pe3JldHVybiBSZWZsZWN0Lm93bktleXMocChuKSl9LHNldDpmdW5jdGlvbihuLHIsdCl7dmFyIGU9SShwKG4pLHIpO2lmKG51bGw9PWU/dm9pZCAwOmUuc2V0KXJldHVybiBlLnNldC5jYWxsKG4uayx0KSwhMDtpZighbi5QKXt2YXIgaT16KHAobiksciksbz1udWxsPT1pP3ZvaWQgMDppW1FdO2lmKG8mJm8udD09PXQpcmV0dXJuIG4ub1tyXT10LG4uRFtyXT0hMSwhMDtpZihjKHQsaSkmJih2b2lkIDAhPT10fHx1KG4udCxyKSkpcmV0dXJuITA7RShuKSxrKG4pfXJldHVybiBuLm9bcl09PT10JiZcIm51bWJlclwiIT10eXBlb2YgdCYmKHZvaWQgMCE9PXR8fHIgaW4gbi5vKXx8KG4ub1tyXT10LG4uRFtyXT0hMCwhMCl9LGRlbGV0ZVByb3BlcnR5OmZ1bmN0aW9uKG4scil7cmV0dXJuIHZvaWQgMCE9PXoobi50LHIpfHxyIGluIG4udD8obi5EW3JdPSExLEUobiksayhuKSk6ZGVsZXRlIG4uRFtyXSxuLm8mJmRlbGV0ZSBuLm9bcl0sITB9LGdldE93blByb3BlcnR5RGVzY3JpcHRvcjpmdW5jdGlvbihuLHIpe3ZhciB0PXAobiksZT1SZWZsZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0LHIpO3JldHVybiBlP3t3cml0YWJsZTohMCxjb25maWd1cmFibGU6MSE9PW4uaXx8XCJsZW5ndGhcIiE9PXIsZW51bWVyYWJsZTplLmVudW1lcmFibGUsdmFsdWU6dFtyXX06ZX0sZGVmaW5lUHJvcGVydHk6ZnVuY3Rpb24oKXtuKDExKX0sZ2V0UHJvdG90eXBlT2Y6ZnVuY3Rpb24obil7cmV0dXJuIE9iamVjdC5nZXRQcm90b3R5cGVPZihuLnQpfSxzZXRQcm90b3R5cGVPZjpmdW5jdGlvbigpe24oMTIpfX0sb249e307aShlbiwoZnVuY3Rpb24obixyKXtvbltuXT1mdW5jdGlvbigpe3JldHVybiBhcmd1bWVudHNbMF09YXJndW1lbnRzWzBdWzBdLHIuYXBwbHkodGhpcyxhcmd1bWVudHMpfX0pKSxvbi5kZWxldGVQcm9wZXJ0eT1mdW5jdGlvbihyLHQpe3JldHVyblwicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJmlzTmFOKHBhcnNlSW50KHQpKSYmbigxMyksb24uc2V0LmNhbGwodGhpcyxyLHQsdm9pZCAwKX0sb24uc2V0PWZ1bmN0aW9uKHIsdCxlKXtyZXR1cm5cInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WJiZcImxlbmd0aFwiIT09dCYmaXNOYU4ocGFyc2VJbnQodCkpJiZuKDE0KSxlbi5zZXQuY2FsbCh0aGlzLHJbMF0sdCxlLHJbMF0pfTt2YXIgdW49ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKHIpe3ZhciBlPXRoaXM7dGhpcy5nPUIsdGhpcy5GPSEwLHRoaXMucHJvZHVjZT1mdW5jdGlvbihyLGksbyl7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgciYmXCJmdW5jdGlvblwiIT10eXBlb2YgaSl7dmFyIHU9aTtpPXI7dmFyIGE9ZTtyZXR1cm4gZnVuY3Rpb24obil7dmFyIHI9dGhpczt2b2lkIDA9PT1uJiYobj11KTtmb3IodmFyIHQ9YXJndW1lbnRzLmxlbmd0aCxlPUFycmF5KHQ+MT90LTE6MCksbz0xO288dDtvKyspZVtvLTFdPWFyZ3VtZW50c1tvXTtyZXR1cm4gYS5wcm9kdWNlKG4sKGZ1bmN0aW9uKG4pe3ZhciB0O3JldHVybih0PWkpLmNhbGwuYXBwbHkodCxbcixuXS5jb25jYXQoZSkpfSkpfX12YXIgZjtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBpJiZuKDYpLHZvaWQgMCE9PW8mJlwiZnVuY3Rpb25cIiE9dHlwZW9mIG8mJm4oNyksdChyKSl7dmFyIGM9dyhlKSxzPVIoZSxyLHZvaWQgMCksdj0hMDt0cnl7Zj1pKHMpLHY9ITF9ZmluYWxseXt2P08oYyk6ZyhjKX1yZXR1cm5cInVuZGVmaW5lZFwiIT10eXBlb2YgUHJvbWlzZSYmZiBpbnN0YW5jZW9mIFByb21pc2U/Zi50aGVuKChmdW5jdGlvbihuKXtyZXR1cm4gaihjLG8pLFAobixjKX0pLChmdW5jdGlvbihuKXt0aHJvdyBPKGMpLG59KSk6KGooYyxvKSxQKGYsYykpfWlmKCFyfHxcIm9iamVjdFwiIT10eXBlb2Ygcil7aWYodm9pZCAwPT09KGY9aShyKSkmJihmPXIpLGY9PT1IJiYoZj12b2lkIDApLGUuRiYmZChmLCEwKSxvKXt2YXIgcD1bXSxsPVtdO2IoXCJQYXRjaGVzXCIpLk0ocixmLHAsbCksbyhwLGwpfXJldHVybiBmfW4oMjEscil9LHRoaXMucHJvZHVjZVdpdGhQYXRjaGVzPWZ1bmN0aW9uKG4scil7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgbilyZXR1cm4gZnVuY3Rpb24ocil7Zm9yKHZhciB0PWFyZ3VtZW50cy5sZW5ndGgsaT1BcnJheSh0PjE/dC0xOjApLG89MTtvPHQ7bysrKWlbby0xXT1hcmd1bWVudHNbb107cmV0dXJuIGUucHJvZHVjZVdpdGhQYXRjaGVzKHIsKGZ1bmN0aW9uKHIpe3JldHVybiBuLmFwcGx5KHZvaWQgMCxbcl0uY29uY2F0KGkpKX0pKX07dmFyIHQsaSxvPWUucHJvZHVjZShuLHIsKGZ1bmN0aW9uKG4scil7dD1uLGk9cn0pKTtyZXR1cm5cInVuZGVmaW5lZFwiIT10eXBlb2YgUHJvbWlzZSYmbyBpbnN0YW5jZW9mIFByb21pc2U/by50aGVuKChmdW5jdGlvbihuKXtyZXR1cm5bbix0LGldfSkpOltvLHQsaV19LFwiYm9vbGVhblwiPT10eXBlb2YobnVsbD09cj92b2lkIDA6ci51c2VQcm94aWVzKSYmdGhpcy5zZXRVc2VQcm94aWVzKHIudXNlUHJveGllcyksXCJib29sZWFuXCI9PXR5cGVvZihudWxsPT1yP3ZvaWQgMDpyLmF1dG9GcmVlemUpJiZ0aGlzLnNldEF1dG9GcmVlemUoci5hdXRvRnJlZXplKX12YXIgaT1lLnByb3RvdHlwZTtyZXR1cm4gaS5jcmVhdGVEcmFmdD1mdW5jdGlvbihlKXt0KGUpfHxuKDgpLHIoZSkmJihlPUQoZSkpO3ZhciBpPXcodGhpcyksbz1SKHRoaXMsZSx2b2lkIDApO3JldHVybiBvW1FdLkM9ITAsZyhpKSxvfSxpLmZpbmlzaERyYWZ0PWZ1bmN0aW9uKHIsdCl7dmFyIGU9ciYmcltRXTtcInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WJiYoZSYmZS5DfHxuKDkpLGUuSSYmbigxMCkpO3ZhciBpPWUuQTtyZXR1cm4gaihpLHQpLFAodm9pZCAwLGkpfSxpLnNldEF1dG9GcmVlemU9ZnVuY3Rpb24obil7dGhpcy5GPW59LGkuc2V0VXNlUHJveGllcz1mdW5jdGlvbihyKXtyJiYhQiYmbigyMCksdGhpcy5nPXJ9LGkuYXBwbHlQYXRjaGVzPWZ1bmN0aW9uKG4sdCl7dmFyIGU7Zm9yKGU9dC5sZW5ndGgtMTtlPj0wO2UtLSl7dmFyIGk9dFtlXTtpZigwPT09aS5wYXRoLmxlbmd0aCYmXCJyZXBsYWNlXCI9PT1pLm9wKXtuPWkudmFsdWU7YnJlYWt9fWU+LTEmJih0PXQuc2xpY2UoZSsxKSk7dmFyIG89YihcIlBhdGNoZXNcIikuJDtyZXR1cm4gcihuKT9vKG4sdCk6dGhpcy5wcm9kdWNlKG4sKGZ1bmN0aW9uKG4pe3JldHVybiBvKG4sdCl9KSl9LGV9KCksYW49bmV3IHVuLGZuPWFuLnByb2R1Y2UsY249YW4ucHJvZHVjZVdpdGhQYXRjaGVzLmJpbmQoYW4pLHNuPWFuLnNldEF1dG9GcmVlemUuYmluZChhbiksdm49YW4uc2V0VXNlUHJveGllcy5iaW5kKGFuKSxwbj1hbi5hcHBseVBhdGNoZXMuYmluZChhbiksbG49YW4uY3JlYXRlRHJhZnQuYmluZChhbiksZG49YW4uZmluaXNoRHJhZnQuYmluZChhbik7ZXhwb3J0IGRlZmF1bHQgZm47ZXhwb3J0e3VuIGFzIEltbWVyLHBuIGFzIGFwcGx5UGF0Y2hlcyxLIGFzIGNhc3REcmFmdCwkIGFzIGNhc3RJbW11dGFibGUsbG4gYXMgY3JlYXRlRHJhZnQsRCBhcyBjdXJyZW50LEogYXMgZW5hYmxlQWxsUGx1Z2lucyxOIGFzIGVuYWJsZUVTNSxDIGFzIGVuYWJsZU1hcFNldCxUIGFzIGVuYWJsZVBhdGNoZXMsZG4gYXMgZmluaXNoRHJhZnQsZCBhcyBmcmVlemUsTCBhcyBpbW1lcmFibGUsciBhcyBpc0RyYWZ0LHQgYXMgaXNEcmFmdGFibGUsSCBhcyBub3RoaW5nLGUgYXMgb3JpZ2luYWwsZm4gYXMgcHJvZHVjZSxjbiBhcyBwcm9kdWNlV2l0aFBhdGNoZXMsc24gYXMgc2V0QXV0b0ZyZWV6ZSx2biBhcyBzZXRVc2VQcm94aWVzfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWltbWVyLmVzbS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/immer/dist/immer.esm.mjs\n"));

/***/ }),

/***/ "./node_modules/nanoid/non-secure/index.js":
/*!*************************************************!*\
  !*** ./node_modules/nanoid/non-secure/index.js ***!
  \*************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"customAlphabet\": function() { return /* binding */ customAlphabet; },\n/* harmony export */   \"nanoid\": function() { return /* binding */ nanoid; }\n/* harmony export */ });\nlet urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\nlet customAlphabet = (alphabet, defaultSize = 21) => {\n  return (size = defaultSize) => {\n    let id = ''\n    let i = size\n    while (i--) {\n      id += alphabet[(Math.random() * alphabet.length) | 0]\n    }\n    return id\n  }\n}\nlet nanoid = (size = 21) => {\n  let id = ''\n  let i = size\n  while (i--) {\n    id += urlAlphabet[(Math.random() * 64) | 0]\n  }\n  return id\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmFub2lkL25vbi1zZWN1cmUvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2lDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uYW5vaWQvbm9uLXNlY3VyZS9pbmRleC5qcz9kMDBlIl0sInNvdXJjZXNDb250ZW50IjpbImxldCB1cmxBbHBoYWJldCA9XG4gICd1c2VhbmRvbS0yNlQxOTgzNDBQWDc1cHhKQUNLVkVSWU1JTkRCVVNIV09MRl9HUVpiZmdoamtscXZ3eXpyaWN0J1xubGV0IGN1c3RvbUFscGhhYmV0ID0gKGFscGhhYmV0LCBkZWZhdWx0U2l6ZSA9IDIxKSA9PiB7XG4gIHJldHVybiAoc2l6ZSA9IGRlZmF1bHRTaXplKSA9PiB7XG4gICAgbGV0IGlkID0gJydcbiAgICBsZXQgaSA9IHNpemVcbiAgICB3aGlsZSAoaS0tKSB7XG4gICAgICBpZCArPSBhbHBoYWJldFsoTWF0aC5yYW5kb20oKSAqIGFscGhhYmV0Lmxlbmd0aCkgfCAwXVxuICAgIH1cbiAgICByZXR1cm4gaWRcbiAgfVxufVxubGV0IG5hbm9pZCA9IChzaXplID0gMjEpID0+IHtcbiAgbGV0IGlkID0gJydcbiAgbGV0IGkgPSBzaXplXG4gIHdoaWxlIChpLS0pIHtcbiAgICBpZCArPSB1cmxBbHBoYWJldFsoTWF0aC5yYW5kb20oKSAqIDY0KSB8IDBdXG4gIH1cbiAgcmV0dXJuIGlkXG59XG5leHBvcnQgeyBuYW5vaWQsIGN1c3RvbUFscGhhYmV0IH1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/nanoid/non-secure/index.js\n"));

/***/ }),

/***/ "./node_modules/socket.io-client/build/esm/contrib/backo2.js":
/*!*******************************************************************!*\
  !*** ./node_modules/socket.io-client/build/esm/contrib/backo2.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Backoff\": function() { return /* binding */ Backoff; }\n/* harmony export */ });\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nfunction Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc29ja2V0LmlvLWNsaWVudC9idWlsZC9lc20vY29udHJpYi9iYWNrbzIuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3NvY2tldC5pby1jbGllbnQvYnVpbGQvZXNtL2NvbnRyaWIvYmFja28yLmpzP2JmMjMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBJbml0aWFsaXplIGJhY2tvZmYgdGltZXIgd2l0aCBgb3B0c2AuXG4gKlxuICogLSBgbWluYCBpbml0aWFsIHRpbWVvdXQgaW4gbWlsbGlzZWNvbmRzIFsxMDBdXG4gKiAtIGBtYXhgIG1heCB0aW1lb3V0IFsxMDAwMF1cbiAqIC0gYGppdHRlcmAgWzBdXG4gKiAtIGBmYWN0b3JgIFsyXVxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBvcHRzXG4gKiBAYXBpIHB1YmxpY1xuICovXG5leHBvcnQgZnVuY3Rpb24gQmFja29mZihvcHRzKSB7XG4gICAgb3B0cyA9IG9wdHMgfHwge307XG4gICAgdGhpcy5tcyA9IG9wdHMubWluIHx8IDEwMDtcbiAgICB0aGlzLm1heCA9IG9wdHMubWF4IHx8IDEwMDAwO1xuICAgIHRoaXMuZmFjdG9yID0gb3B0cy5mYWN0b3IgfHwgMjtcbiAgICB0aGlzLmppdHRlciA9IG9wdHMuaml0dGVyID4gMCAmJiBvcHRzLmppdHRlciA8PSAxID8gb3B0cy5qaXR0ZXIgOiAwO1xuICAgIHRoaXMuYXR0ZW1wdHMgPSAwO1xufVxuLyoqXG4gKiBSZXR1cm4gdGhlIGJhY2tvZmYgZHVyYXRpb24uXG4gKlxuICogQHJldHVybiB7TnVtYmVyfVxuICogQGFwaSBwdWJsaWNcbiAqL1xuQmFja29mZi5wcm90b3R5cGUuZHVyYXRpb24gPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIG1zID0gdGhpcy5tcyAqIE1hdGgucG93KHRoaXMuZmFjdG9yLCB0aGlzLmF0dGVtcHRzKyspO1xuICAgIGlmICh0aGlzLmppdHRlcikge1xuICAgICAgICB2YXIgcmFuZCA9IE1hdGgucmFuZG9tKCk7XG4gICAgICAgIHZhciBkZXZpYXRpb24gPSBNYXRoLmZsb29yKHJhbmQgKiB0aGlzLmppdHRlciAqIG1zKTtcbiAgICAgICAgbXMgPSAoTWF0aC5mbG9vcihyYW5kICogMTApICYgMSkgPT0gMCA/IG1zIC0gZGV2aWF0aW9uIDogbXMgKyBkZXZpYXRpb247XG4gICAgfVxuICAgIHJldHVybiBNYXRoLm1pbihtcywgdGhpcy5tYXgpIHwgMDtcbn07XG4vKipcbiAqIFJlc2V0IHRoZSBudW1iZXIgb2YgYXR0ZW1wdHMuXG4gKlxuICogQGFwaSBwdWJsaWNcbiAqL1xuQmFja29mZi5wcm90b3R5cGUucmVzZXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5hdHRlbXB0cyA9IDA7XG59O1xuLyoqXG4gKiBTZXQgdGhlIG1pbmltdW0gZHVyYXRpb25cbiAqXG4gKiBAYXBpIHB1YmxpY1xuICovXG5CYWNrb2ZmLnByb3RvdHlwZS5zZXRNaW4gPSBmdW5jdGlvbiAobWluKSB7XG4gICAgdGhpcy5tcyA9IG1pbjtcbn07XG4vKipcbiAqIFNldCB0aGUgbWF4aW11bSBkdXJhdGlvblxuICpcbiAqIEBhcGkgcHVibGljXG4gKi9cbkJhY2tvZmYucHJvdG90eXBlLnNldE1heCA9IGZ1bmN0aW9uIChtYXgpIHtcbiAgICB0aGlzLm1heCA9IG1heDtcbn07XG4vKipcbiAqIFNldCB0aGUgaml0dGVyXG4gKlxuICogQGFwaSBwdWJsaWNcbiAqL1xuQmFja29mZi5wcm90b3R5cGUuc2V0Sml0dGVyID0gZnVuY3Rpb24gKGppdHRlcikge1xuICAgIHRoaXMuaml0dGVyID0gaml0dGVyO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/socket.io-client/build/esm/contrib/backo2.js\n"));

/***/ }),

/***/ "./node_modules/socket.io-client/build/esm/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/socket.io-client/build/esm/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Manager\": function() { return /* reexport safe */ _manager_js__WEBPACK_IMPORTED_MODULE_1__.Manager; },\n/* harmony export */   \"Socket\": function() { return /* reexport safe */ _socket_js__WEBPACK_IMPORTED_MODULE_2__.Socket; },\n/* harmony export */   \"connect\": function() { return /* binding */ lookup; },\n/* harmony export */   \"default\": function() { return /* binding */ lookup; },\n/* harmony export */   \"io\": function() { return /* binding */ lookup; },\n/* harmony export */   \"protocol\": function() { return /* reexport safe */ socket_io_parser__WEBPACK_IMPORTED_MODULE_3__.protocol; }\n/* harmony export */ });\n/* harmony import */ var _url_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./url.js */ \"./node_modules/socket.io-client/build/esm/url.js\");\n/* harmony import */ var _manager_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./manager.js */ \"./node_modules/socket.io-client/build/esm/manager.js\");\n/* harmony import */ var _socket_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./socket.js */ \"./node_modules/socket.io-client/build/esm/socket.js\");\n/* harmony import */ var socket_io_parser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! socket.io-parser */ \"./node_modules/socket.io-parser/build/esm/index.js\");\n\n\n\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = (0,_url_js__WEBPACK_IMPORTED_MODULE_0__.url)(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new _manager_js__WEBPACK_IMPORTED_MODULE_1__.Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new _manager_js__WEBPACK_IMPORTED_MODULE_1__.Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager: _manager_js__WEBPACK_IMPORTED_MODULE_1__.Manager,\n    Socket: _socket_js__WEBPACK_IMPORTED_MODULE_2__.Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\n\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc29ja2V0LmlvLWNsaWVudC9idWlsZC9lc20vaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUErQjtBQUNRO0FBQ0Y7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsNENBQUc7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsZ0RBQU87QUFDeEI7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLGdEQUFPO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1gsVUFBVTtBQUNWO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUM0QztBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2dGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zb2NrZXQuaW8tY2xpZW50L2J1aWxkL2VzbS9pbmRleC5qcz80NTExIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVybCB9IGZyb20gXCIuL3VybC5qc1wiO1xuaW1wb3J0IHsgTWFuYWdlciB9IGZyb20gXCIuL21hbmFnZXIuanNcIjtcbmltcG9ydCB7IFNvY2tldCB9IGZyb20gXCIuL3NvY2tldC5qc1wiO1xuLyoqXG4gKiBNYW5hZ2VycyBjYWNoZS5cbiAqL1xuY29uc3QgY2FjaGUgPSB7fTtcbmZ1bmN0aW9uIGxvb2t1cCh1cmksIG9wdHMpIHtcbiAgICBpZiAodHlwZW9mIHVyaSA9PT0gXCJvYmplY3RcIikge1xuICAgICAgICBvcHRzID0gdXJpO1xuICAgICAgICB1cmkgPSB1bmRlZmluZWQ7XG4gICAgfVxuICAgIG9wdHMgPSBvcHRzIHx8IHt9O1xuICAgIGNvbnN0IHBhcnNlZCA9IHVybCh1cmksIG9wdHMucGF0aCB8fCBcIi9zb2NrZXQuaW9cIik7XG4gICAgY29uc3Qgc291cmNlID0gcGFyc2VkLnNvdXJjZTtcbiAgICBjb25zdCBpZCA9IHBhcnNlZC5pZDtcbiAgICBjb25zdCBwYXRoID0gcGFyc2VkLnBhdGg7XG4gICAgY29uc3Qgc2FtZU5hbWVzcGFjZSA9IGNhY2hlW2lkXSAmJiBwYXRoIGluIGNhY2hlW2lkXVtcIm5zcHNcIl07XG4gICAgY29uc3QgbmV3Q29ubmVjdGlvbiA9IG9wdHMuZm9yY2VOZXcgfHxcbiAgICAgICAgb3B0c1tcImZvcmNlIG5ldyBjb25uZWN0aW9uXCJdIHx8XG4gICAgICAgIGZhbHNlID09PSBvcHRzLm11bHRpcGxleCB8fFxuICAgICAgICBzYW1lTmFtZXNwYWNlO1xuICAgIGxldCBpbztcbiAgICBpZiAobmV3Q29ubmVjdGlvbikge1xuICAgICAgICBpbyA9IG5ldyBNYW5hZ2VyKHNvdXJjZSwgb3B0cyk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBpZiAoIWNhY2hlW2lkXSkge1xuICAgICAgICAgICAgY2FjaGVbaWRdID0gbmV3IE1hbmFnZXIoc291cmNlLCBvcHRzKTtcbiAgICAgICAgfVxuICAgICAgICBpbyA9IGNhY2hlW2lkXTtcbiAgICB9XG4gICAgaWYgKHBhcnNlZC5xdWVyeSAmJiAhb3B0cy5xdWVyeSkge1xuICAgICAgICBvcHRzLnF1ZXJ5ID0gcGFyc2VkLnF1ZXJ5S2V5O1xuICAgIH1cbiAgICByZXR1cm4gaW8uc29ja2V0KHBhcnNlZC5wYXRoLCBvcHRzKTtcbn1cbi8vIHNvIHRoYXQgXCJsb29rdXBcIiBjYW4gYmUgdXNlZCBib3RoIGFzIGEgZnVuY3Rpb24gKGUuZy4gYGlvKC4uLilgKSBhbmQgYXMgYVxuLy8gbmFtZXNwYWNlIChlLmcuIGBpby5jb25uZWN0KC4uLilgKSwgZm9yIGJhY2t3YXJkIGNvbXBhdGliaWxpdHlcbk9iamVjdC5hc3NpZ24obG9va3VwLCB7XG4gICAgTWFuYWdlcixcbiAgICBTb2NrZXQsXG4gICAgaW86IGxvb2t1cCxcbiAgICBjb25uZWN0OiBsb29rdXAsXG59KTtcbi8qKlxuICogUHJvdG9jb2wgdmVyc2lvbi5cbiAqXG4gKiBAcHVibGljXG4gKi9cbmV4cG9ydCB7IHByb3RvY29sIH0gZnJvbSBcInNvY2tldC5pby1wYXJzZXJcIjtcbi8qKlxuICogRXhwb3NlIGNvbnN0cnVjdG9ycyBmb3Igc3RhbmRhbG9uZSBidWlsZC5cbiAqXG4gKiBAcHVibGljXG4gKi9cbmV4cG9ydCB7IE1hbmFnZXIsIFNvY2tldCwgbG9va3VwIGFzIGlvLCBsb29rdXAgYXMgY29ubmVjdCwgbG9va3VwIGFzIGRlZmF1bHQsIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/socket.io-client/build/esm/index.js\n"));

/***/ }),

/***/ "./node_modules/socket.io-client/build/esm/manager.js":
/*!************************************************************!*\
  !*** ./node_modules/socket.io-client/build/esm/manager.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Manager\": function() { return /* binding */ Manager; }\n/* harmony export */ });\n/* harmony import */ var engine_io_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! engine.io-client */ \"./node_modules/engine.io-client/build/esm/index.js\");\n/* harmony import */ var _socket_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./socket.js */ \"./node_modules/socket.io-client/build/esm/socket.js\");\n/* harmony import */ var socket_io_parser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! socket.io-parser */ \"./node_modules/socket.io-parser/build/esm/index.js\");\n/* harmony import */ var _on_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./on.js */ \"./node_modules/socket.io-client/build/esm/on.js\");\n/* harmony import */ var _contrib_backo2_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./contrib/backo2.js */ \"./node_modules/socket.io-client/build/esm/contrib/backo2.js\");\n/* harmony import */ var _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @socket.io/component-emitter */ \"./node_modules/@socket.io/component-emitter/index.mjs\");\n\n\n\n\n\n\nclass Manager extends _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_5__.Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        (0,engine_io_client__WEBPACK_IMPORTED_MODULE_0__.installTimerFunctions)(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new _contrib_backo2_js__WEBPACK_IMPORTED_MODULE_4__.Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || socket_io_parser__WEBPACK_IMPORTED_MODULE_2__;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new engine_io_client__WEBPACK_IMPORTED_MODULE_0__.Socket(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = (0,_on_js__WEBPACK_IMPORTED_MODULE_3__.on)(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = (0,_on_js__WEBPACK_IMPORTED_MODULE_3__.on)(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push((0,_on_js__WEBPACK_IMPORTED_MODULE_3__.on)(socket, \"ping\", this.onping.bind(this)), (0,_on_js__WEBPACK_IMPORTED_MODULE_3__.on)(socket, \"data\", this.ondata.bind(this)), (0,_on_js__WEBPACK_IMPORTED_MODULE_3__.on)(socket, \"error\", this.onerror.bind(this)), (0,_on_js__WEBPACK_IMPORTED_MODULE_3__.on)(socket, \"close\", this.onclose.bind(this)), (0,_on_js__WEBPACK_IMPORTED_MODULE_3__.on)(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\");\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new _socket_js__WEBPACK_IMPORTED_MODULE_1__.Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/socket.io-client/build/esm/manager.js\n"));

/***/ }),

/***/ "./node_modules/socket.io-client/build/esm/on.js":
/*!*******************************************************!*\
  !*** ./node_modules/socket.io-client/build/esm/on.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"on\": function() { return /* binding */ on; }\n/* harmony export */ });\nfunction on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc29ja2V0LmlvLWNsaWVudC9idWlsZC9lc20vb24uanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvc29ja2V0LmlvLWNsaWVudC9idWlsZC9lc20vb24uanM/NTQ3NiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gb24ob2JqLCBldiwgZm4pIHtcbiAgICBvYmoub24oZXYsIGZuKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gc3ViRGVzdHJveSgpIHtcbiAgICAgICAgb2JqLm9mZihldiwgZm4pO1xuICAgIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/socket.io-client/build/esm/on.js\n"));

/***/ }),

/***/ "./node_modules/socket.io-client/build/esm/socket.js":
/*!***********************************************************!*\
  !*** ./node_modules/socket.io-client/build/esm/socket.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Socket\": function() { return /* binding */ Socket; }\n/* harmony export */ });\n/* harmony import */ var socket_io_parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! socket.io-parser */ \"./node_modules/socket.io-parser/build/esm/index.js\");\n/* harmony import */ var _on_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./on.js */ \"./node_modules/socket.io-client/build/esm/on.js\");\n/* harmony import */ var _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @socket.io/component-emitter */ \"./node_modules/@socket.io/component-emitter/index.mjs\");\n\n\n\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nclass Socket extends _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_2__.Emitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.connected = false;\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            (0,_on_js__WEBPACK_IMPORTED_MODULE_1__.on)(io, \"open\", this.onopen.bind(this)),\n            (0,_on_js__WEBPACK_IMPORTED_MODULE_1__.on)(io, \"packet\", this.onpacket.bind(this)),\n            (0,_on_js__WEBPACK_IMPORTED_MODULE_1__.on)(io, \"error\", this.onerror.bind(this)),\n            (0,_on_js__WEBPACK_IMPORTED_MODULE_1__.on)(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.EVENT:\n            case socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.ACK:\n            case socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * ```\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     * ```\n     *\n     * @returns self\n     * @public\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * const handler = (event, ...args) => {\n     *   console.log(event);\n     * }\n     *\n     * socket.onAnyOutgoing(handler);\n     *\n     * // then later\n     * socket.offAnyOutgoing(handler);\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/socket.io-client/build/esm/socket.js\n"));

/***/ }),

/***/ "./node_modules/socket.io-client/build/esm/url.js":
/*!********************************************************!*\
  !*** ./node_modules/socket.io-client/build/esm/url.js ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"url\": function() { return /* binding */ url; }\n/* harmony export */ });\n/* harmony import */ var engine_io_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! engine.io-client */ \"./node_modules/engine.io-client/build/esm/index.js\");\n\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nfunction url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = (0,engine_io_client__WEBPACK_IMPORTED_MODULE_0__.parse)(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc29ja2V0LmlvLWNsaWVudC9idWlsZC9lc20vdXJsLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXlDO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyx1REFBSztBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zb2NrZXQuaW8tY2xpZW50L2J1aWxkL2VzbS91cmwuanM/M2E0YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwYXJzZSB9IGZyb20gXCJlbmdpbmUuaW8tY2xpZW50XCI7XG4vKipcbiAqIFVSTCBwYXJzZXIuXG4gKlxuICogQHBhcmFtIHVyaSAtIHVybFxuICogQHBhcmFtIHBhdGggLSB0aGUgcmVxdWVzdCBwYXRoIG9mIHRoZSBjb25uZWN0aW9uXG4gKiBAcGFyYW0gbG9jIC0gQW4gb2JqZWN0IG1lYW50IHRvIG1pbWljIHdpbmRvdy5sb2NhdGlvbi5cbiAqICAgICAgICBEZWZhdWx0cyB0byB3aW5kb3cubG9jYXRpb24uXG4gKiBAcHVibGljXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1cmwodXJpLCBwYXRoID0gXCJcIiwgbG9jKSB7XG4gICAgbGV0IG9iaiA9IHVyaTtcbiAgICAvLyBkZWZhdWx0IHRvIHdpbmRvdy5sb2NhdGlvblxuICAgIGxvYyA9IGxvYyB8fCAodHlwZW9mIGxvY2F0aW9uICE9PSBcInVuZGVmaW5lZFwiICYmIGxvY2F0aW9uKTtcbiAgICBpZiAobnVsbCA9PSB1cmkpXG4gICAgICAgIHVyaSA9IGxvYy5wcm90b2NvbCArIFwiLy9cIiArIGxvYy5ob3N0O1xuICAgIC8vIHJlbGF0aXZlIHBhdGggc3VwcG9ydFxuICAgIGlmICh0eXBlb2YgdXJpID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIGlmIChcIi9cIiA9PT0gdXJpLmNoYXJBdCgwKSkge1xuICAgICAgICAgICAgaWYgKFwiL1wiID09PSB1cmkuY2hhckF0KDEpKSB7XG4gICAgICAgICAgICAgICAgdXJpID0gbG9jLnByb3RvY29sICsgdXJpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdXJpID0gbG9jLmhvc3QgKyB1cmk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCEvXihodHRwcz98d3NzPyk6XFwvXFwvLy50ZXN0KHVyaSkpIHtcbiAgICAgICAgICAgIGlmIChcInVuZGVmaW5lZFwiICE9PSB0eXBlb2YgbG9jKSB7XG4gICAgICAgICAgICAgICAgdXJpID0gbG9jLnByb3RvY29sICsgXCIvL1wiICsgdXJpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdXJpID0gXCJodHRwczovL1wiICsgdXJpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC8vIHBhcnNlXG4gICAgICAgIG9iaiA9IHBhcnNlKHVyaSk7XG4gICAgfVxuICAgIC8vIG1ha2Ugc3VyZSB3ZSB0cmVhdCBgbG9jYWxob3N0OjgwYCBhbmQgYGxvY2FsaG9zdGAgZXF1YWxseVxuICAgIGlmICghb2JqLnBvcnQpIHtcbiAgICAgICAgaWYgKC9eKGh0dHB8d3MpJC8udGVzdChvYmoucHJvdG9jb2wpKSB7XG4gICAgICAgICAgICBvYmoucG9ydCA9IFwiODBcIjtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICgvXihodHRwfHdzKXMkLy50ZXN0KG9iai5wcm90b2NvbCkpIHtcbiAgICAgICAgICAgIG9iai5wb3J0ID0gXCI0NDNcIjtcbiAgICAgICAgfVxuICAgIH1cbiAgICBvYmoucGF0aCA9IG9iai5wYXRoIHx8IFwiL1wiO1xuICAgIGNvbnN0IGlwdjYgPSBvYmouaG9zdC5pbmRleE9mKFwiOlwiKSAhPT0gLTE7XG4gICAgY29uc3QgaG9zdCA9IGlwdjYgPyBcIltcIiArIG9iai5ob3N0ICsgXCJdXCIgOiBvYmouaG9zdDtcbiAgICAvLyBkZWZpbmUgdW5pcXVlIGlkXG4gICAgb2JqLmlkID0gb2JqLnByb3RvY29sICsgXCI6Ly9cIiArIGhvc3QgKyBcIjpcIiArIG9iai5wb3J0ICsgcGF0aDtcbiAgICAvLyBkZWZpbmUgaHJlZlxuICAgIG9iai5ocmVmID1cbiAgICAgICAgb2JqLnByb3RvY29sICtcbiAgICAgICAgICAgIFwiOi8vXCIgK1xuICAgICAgICAgICAgaG9zdCArXG4gICAgICAgICAgICAobG9jICYmIGxvYy5wb3J0ID09PSBvYmoucG9ydCA/IFwiXCIgOiBcIjpcIiArIG9iai5wb3J0KTtcbiAgICByZXR1cm4gb2JqO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/socket.io-client/build/esm/url.js\n"));

/***/ }),

/***/ "./node_modules/socket.io-parser/build/esm/binary.js":
/*!***********************************************************!*\
  !*** ./node_modules/socket.io-parser/build/esm/binary.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"deconstructPacket\": function() { return /* binding */ deconstructPacket; },\n/* harmony export */   \"reconstructPacket\": function() { return /* binding */ reconstructPacket; }\n/* harmony export */ });\n/* harmony import */ var _is_binary_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is-binary.js */ \"./node_modules/socket.io-parser/build/esm/is-binary.js\");\n\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nfunction deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if ((0,_is_binary_js__WEBPACK_IMPORTED_MODULE_0__.isBinary)(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nfunction reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc29ja2V0LmlvLXBhcnNlci9idWlsZC9lc20vYmluYXJ5LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEwQztBQUMxQztBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsWUFBWSxRQUFRO0FBQ3BCO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDO0FBQ3ZDLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsdURBQVE7QUFDaEIsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsaUJBQWlCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLE9BQU87QUFDbEIsWUFBWSxRQUFRO0FBQ3BCO0FBQ0E7QUFDTztBQUNQO0FBQ0Esb0NBQW9DO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixpQkFBaUI7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zb2NrZXQuaW8tcGFyc2VyL2J1aWxkL2VzbS9iaW5hcnkuanM/MDFlNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc0JpbmFyeSB9IGZyb20gXCIuL2lzLWJpbmFyeS5qc1wiO1xuLyoqXG4gKiBSZXBsYWNlcyBldmVyeSBCdWZmZXIgfCBBcnJheUJ1ZmZlciB8IEJsb2IgfCBGaWxlIGluIHBhY2tldCB3aXRoIGEgbnVtYmVyZWQgcGxhY2Vob2xkZXIuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHBhY2tldCAtIHNvY2tldC5pbyBldmVudCBwYWNrZXRcbiAqIEByZXR1cm4ge09iamVjdH0gd2l0aCBkZWNvbnN0cnVjdGVkIHBhY2tldCBhbmQgbGlzdCBvZiBidWZmZXJzXG4gKiBAcHVibGljXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvbnN0cnVjdFBhY2tldChwYWNrZXQpIHtcbiAgICBjb25zdCBidWZmZXJzID0gW107XG4gICAgY29uc3QgcGFja2V0RGF0YSA9IHBhY2tldC5kYXRhO1xuICAgIGNvbnN0IHBhY2sgPSBwYWNrZXQ7XG4gICAgcGFjay5kYXRhID0gX2RlY29uc3RydWN0UGFja2V0KHBhY2tldERhdGEsIGJ1ZmZlcnMpO1xuICAgIHBhY2suYXR0YWNobWVudHMgPSBidWZmZXJzLmxlbmd0aDsgLy8gbnVtYmVyIG9mIGJpbmFyeSAnYXR0YWNobWVudHMnXG4gICAgcmV0dXJuIHsgcGFja2V0OiBwYWNrLCBidWZmZXJzOiBidWZmZXJzIH07XG59XG5mdW5jdGlvbiBfZGVjb25zdHJ1Y3RQYWNrZXQoZGF0YSwgYnVmZmVycykge1xuICAgIGlmICghZGF0YSlcbiAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgaWYgKGlzQmluYXJ5KGRhdGEpKSB7XG4gICAgICAgIGNvbnN0IHBsYWNlaG9sZGVyID0geyBfcGxhY2Vob2xkZXI6IHRydWUsIG51bTogYnVmZmVycy5sZW5ndGggfTtcbiAgICAgICAgYnVmZmVycy5wdXNoKGRhdGEpO1xuICAgICAgICByZXR1cm4gcGxhY2Vob2xkZXI7XG4gICAgfVxuICAgIGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoZGF0YSkpIHtcbiAgICAgICAgY29uc3QgbmV3RGF0YSA9IG5ldyBBcnJheShkYXRhLmxlbmd0aCk7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgbmV3RGF0YVtpXSA9IF9kZWNvbnN0cnVjdFBhY2tldChkYXRhW2ldLCBidWZmZXJzKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3RGF0YTtcbiAgICB9XG4gICAgZWxzZSBpZiAodHlwZW9mIGRhdGEgPT09IFwib2JqZWN0XCIgJiYgIShkYXRhIGluc3RhbmNlb2YgRGF0ZSkpIHtcbiAgICAgICAgY29uc3QgbmV3RGF0YSA9IHt9O1xuICAgICAgICBmb3IgKGNvbnN0IGtleSBpbiBkYXRhKSB7XG4gICAgICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGRhdGEsIGtleSkpIHtcbiAgICAgICAgICAgICAgICBuZXdEYXRhW2tleV0gPSBfZGVjb25zdHJ1Y3RQYWNrZXQoZGF0YVtrZXldLCBidWZmZXJzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3RGF0YTtcbiAgICB9XG4gICAgcmV0dXJuIGRhdGE7XG59XG4vKipcbiAqIFJlY29uc3RydWN0cyBhIGJpbmFyeSBwYWNrZXQgZnJvbSBpdHMgcGxhY2Vob2xkZXIgcGFja2V0IGFuZCBidWZmZXJzXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHBhY2tldCAtIGV2ZW50IHBhY2tldCB3aXRoIHBsYWNlaG9sZGVyc1xuICogQHBhcmFtIHtBcnJheX0gYnVmZmVycyAtIGJpbmFyeSBidWZmZXJzIHRvIHB1dCBpbiBwbGFjZWhvbGRlciBwb3NpdGlvbnNcbiAqIEByZXR1cm4ge09iamVjdH0gcmVjb25zdHJ1Y3RlZCBwYWNrZXRcbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlY29uc3RydWN0UGFja2V0KHBhY2tldCwgYnVmZmVycykge1xuICAgIHBhY2tldC5kYXRhID0gX3JlY29uc3RydWN0UGFja2V0KHBhY2tldC5kYXRhLCBidWZmZXJzKTtcbiAgICBwYWNrZXQuYXR0YWNobWVudHMgPSB1bmRlZmluZWQ7IC8vIG5vIGxvbmdlciB1c2VmdWxcbiAgICByZXR1cm4gcGFja2V0O1xufVxuZnVuY3Rpb24gX3JlY29uc3RydWN0UGFja2V0KGRhdGEsIGJ1ZmZlcnMpIHtcbiAgICBpZiAoIWRhdGEpXG4gICAgICAgIHJldHVybiBkYXRhO1xuICAgIGlmIChkYXRhICYmIGRhdGEuX3BsYWNlaG9sZGVyID09PSB0cnVlKSB7XG4gICAgICAgIGNvbnN0IGlzSW5kZXhWYWxpZCA9IHR5cGVvZiBkYXRhLm51bSA9PT0gXCJudW1iZXJcIiAmJlxuICAgICAgICAgICAgZGF0YS5udW0gPj0gMCAmJlxuICAgICAgICAgICAgZGF0YS5udW0gPCBidWZmZXJzLmxlbmd0aDtcbiAgICAgICAgaWYgKGlzSW5kZXhWYWxpZCkge1xuICAgICAgICAgICAgcmV0dXJuIGJ1ZmZlcnNbZGF0YS5udW1dOyAvLyBhcHByb3ByaWF0ZSBidWZmZXIgKHNob3VsZCBiZSBuYXR1cmFsIG9yZGVyIGFueXdheSlcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcImlsbGVnYWwgYXR0YWNobWVudHNcIik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSBpZiAoQXJyYXkuaXNBcnJheShkYXRhKSkge1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGRhdGEubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGRhdGFbaV0gPSBfcmVjb25zdHJ1Y3RQYWNrZXQoZGF0YVtpXSwgYnVmZmVycyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSBpZiAodHlwZW9mIGRhdGEgPT09IFwib2JqZWN0XCIpIHtcbiAgICAgICAgZm9yIChjb25zdCBrZXkgaW4gZGF0YSkge1xuICAgICAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChkYXRhLCBrZXkpKSB7XG4gICAgICAgICAgICAgICAgZGF0YVtrZXldID0gX3JlY29uc3RydWN0UGFja2V0KGRhdGFba2V5XSwgYnVmZmVycyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGRhdGE7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/socket.io-parser/build/esm/binary.js\n"));

/***/ }),

/***/ "./node_modules/socket.io-parser/build/esm/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/socket.io-parser/build/esm/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Decoder\": function() { return /* binding */ Decoder; },\n/* harmony export */   \"Encoder\": function() { return /* binding */ Encoder; },\n/* harmony export */   \"PacketType\": function() { return /* binding */ PacketType; },\n/* harmony export */   \"protocol\": function() { return /* binding */ protocol; }\n/* harmony export */ });\n/* harmony import */ var _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @socket.io/component-emitter */ \"./node_modules/@socket.io/component-emitter/index.mjs\");\n/* harmony import */ var _binary_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./binary.js */ \"./node_modules/socket.io-parser/build/esm/binary.js\");\n/* harmony import */ var _is_binary_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./is-binary.js */ \"./node_modules/socket.io-parser/build/esm/is-binary.js\");\n\n\n\n/**\n * Protocol version.\n *\n * @public\n */\nconst protocol = 5;\nvar PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nclass Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if ((0,_is_binary_js__WEBPACK_IMPORTED_MODULE_2__.hasBinary)(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = (0,_binary_js__WEBPACK_IMPORTED_MODULE_1__.deconstructPacket)(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nclass Decoder extends _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_0__.Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if ((0,_is_binary_js__WEBPACK_IMPORTED_MODULE_2__.isBinary)(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = (0,_binary_js__WEBPACK_IMPORTED_MODULE_1__.reconstructPacket)(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/socket.io-parser/build/esm/index.js\n"));

/***/ }),

/***/ "./node_modules/socket.io-parser/build/esm/is-binary.js":
/*!**************************************************************!*\
  !*** ./node_modules/socket.io-parser/build/esm/is-binary.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"hasBinary\": function() { return /* binding */ hasBinary; },\n/* harmony export */   \"isBinary\": function() { return /* binding */ isBinary; }\n/* harmony export */ });\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nfunction isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nfunction hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc29ja2V0LmlvLXBhcnNlci9idWlsZC9lc20vaXMtYmluYXJ5LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0MsT0FBTztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3NvY2tldC5pby1wYXJzZXIvYnVpbGQvZXNtL2lzLWJpbmFyeS5qcz8wYTExIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHdpdGhOYXRpdmVBcnJheUJ1ZmZlciA9IHR5cGVvZiBBcnJheUJ1ZmZlciA9PT0gXCJmdW5jdGlvblwiO1xuY29uc3QgaXNWaWV3ID0gKG9iaikgPT4ge1xuICAgIHJldHVybiB0eXBlb2YgQXJyYXlCdWZmZXIuaXNWaWV3ID09PSBcImZ1bmN0aW9uXCJcbiAgICAgICAgPyBBcnJheUJ1ZmZlci5pc1ZpZXcob2JqKVxuICAgICAgICA6IG9iai5idWZmZXIgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcjtcbn07XG5jb25zdCB0b1N0cmluZyA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmc7XG5jb25zdCB3aXRoTmF0aXZlQmxvYiA9IHR5cGVvZiBCbG9iID09PSBcImZ1bmN0aW9uXCIgfHxcbiAgICAodHlwZW9mIEJsb2IgIT09IFwidW5kZWZpbmVkXCIgJiZcbiAgICAgICAgdG9TdHJpbmcuY2FsbChCbG9iKSA9PT0gXCJbb2JqZWN0IEJsb2JDb25zdHJ1Y3Rvcl1cIik7XG5jb25zdCB3aXRoTmF0aXZlRmlsZSA9IHR5cGVvZiBGaWxlID09PSBcImZ1bmN0aW9uXCIgfHxcbiAgICAodHlwZW9mIEZpbGUgIT09IFwidW5kZWZpbmVkXCIgJiZcbiAgICAgICAgdG9TdHJpbmcuY2FsbChGaWxlKSA9PT0gXCJbb2JqZWN0IEZpbGVDb25zdHJ1Y3Rvcl1cIik7XG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiBvYmogaXMgYSBCdWZmZXIsIGFuIEFycmF5QnVmZmVyLCBhIEJsb2Igb3IgYSBGaWxlLlxuICpcbiAqIEBwcml2YXRlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0JpbmFyeShvYmopIHtcbiAgICByZXR1cm4gKCh3aXRoTmF0aXZlQXJyYXlCdWZmZXIgJiYgKG9iaiBpbnN0YW5jZW9mIEFycmF5QnVmZmVyIHx8IGlzVmlldyhvYmopKSkgfHxcbiAgICAgICAgKHdpdGhOYXRpdmVCbG9iICYmIG9iaiBpbnN0YW5jZW9mIEJsb2IpIHx8XG4gICAgICAgICh3aXRoTmF0aXZlRmlsZSAmJiBvYmogaW5zdGFuY2VvZiBGaWxlKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gaGFzQmluYXJ5KG9iaiwgdG9KU09OKSB7XG4gICAgaWYgKCFvYmogfHwgdHlwZW9mIG9iaiAhPT0gXCJvYmplY3RcIikge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGlmIChBcnJheS5pc0FycmF5KG9iaikpIHtcbiAgICAgICAgZm9yIChsZXQgaSA9IDAsIGwgPSBvYmoubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAoaGFzQmluYXJ5KG9ialtpXSkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGlmIChpc0JpbmFyeShvYmopKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBpZiAob2JqLnRvSlNPTiAmJlxuICAgICAgICB0eXBlb2Ygb2JqLnRvSlNPTiA9PT0gXCJmdW5jdGlvblwiICYmXG4gICAgICAgIGFyZ3VtZW50cy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgcmV0dXJuIGhhc0JpbmFyeShvYmoudG9KU09OKCksIHRydWUpO1xuICAgIH1cbiAgICBmb3IgKGNvbnN0IGtleSBpbiBvYmopIHtcbiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkgJiYgaGFzQmluYXJ5KG9ialtrZXldKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/socket.io-parser/build/esm/is-binary.js\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["pages/_app","main"], function() { return __webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=C%3A%5CUsers%5Cryanm%5CDocuments%5CProjects%5Cair-land-sea%5Csrc%5Cpages%5Cindex.tsx&page=%2F!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);